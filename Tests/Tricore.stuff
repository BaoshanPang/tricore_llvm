------------- Classes -----------------
class AES_1Arg_Intrinsic {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class AES_2Arg_Intrinsic {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class AMDGPUReadPreloadRegisterIntrinsic<string AMDGPUReadPreloadRegisterIntrinsic:name = ?> {	// SDPatternOperator Intrinsic GCCBuiltin
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "AMDGPU";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string GCCBuiltinName = AMDGPUReadPreloadRegisterIntrinsic:name;
  string NAME = ?;
}
class AdvSIMD_1FloatArg_Intrinsic {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyfloat_ty];
  list<LLVMType> ParamTypes = [anonymous_142];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class AdvSIMD_1IntArg_Intrinsic {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyint_ty];
  list<LLVMType> ParamTypes = [anonymous_141];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class AdvSIMD_1IntArg_Narrow_Intrinsic {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyint_ty];
  list<LLVMType> ParamTypes = [llvm_anyint_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class AdvSIMD_1Vec_Load_Intrinsic {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [anonymous_174];
  list<IntrinsicProperty> Properties = [IntrReadArgMem];
  bit isTarget = 0;
  string NAME = ?;
}
class AdvSIMD_1Vec_Store_Lane_Intrinsic {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_anyvector_ty, llvm_i64_ty, llvm_anyptr_ty];
  list<IntrinsicProperty> Properties = [IntrReadWriteArgMem, anonymous_175];
  bit isTarget = 0;
  string NAME = ?;
}
class AdvSIMD_1VectorArg_Expand_Intrinsic {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [llvm_anyvector_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class AdvSIMD_1VectorArg_Float_Across_Intrinsic {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyfloat_ty];
  list<LLVMType> ParamTypes = [llvm_anyvector_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class AdvSIMD_1VectorArg_Int_Across_Intrinsic {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyint_ty];
  list<LLVMType> ParamTypes = [llvm_anyvector_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class AdvSIMD_1VectorArg_Intrinsic {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [anonymous_143];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class AdvSIMD_1VectorArg_Long_Intrinsic {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [anonymous_144];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class AdvSIMD_1VectorArg_Narrow_Intrinsic {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyint_ty];
  list<LLVMType> ParamTypes = [anonymous_145];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class AdvSIMD_2Arg_FloatCompare_Intrinsic {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyint_ty];
  list<LLVMType> ParamTypes = [llvm_anyfloat_ty, anonymous_153];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class AdvSIMD_2Arg_Scalar_Narrow_Intrinsic {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyint_ty];
  list<LLVMType> ParamTypes = [anonymous_160, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class AdvSIMD_2FloatArg_Intrinsic {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyfloat_ty];
  list<LLVMType> ParamTypes = [anonymous_148, anonymous_149];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class AdvSIMD_2IntArg_Intrinsic {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyint_ty];
  list<LLVMType> ParamTypes = [anonymous_146, anonymous_147];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class AdvSIMD_2Scalar_Float_Intrinsic {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyfloat_ty];
  list<LLVMType> ParamTypes = [anonymous_139, anonymous_140];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class AdvSIMD_2Vec_Load_Intrinsic {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyvector_ty, anonymous_176];
  list<LLVMType> ParamTypes = [anonymous_178];
  list<IntrinsicProperty> Properties = [IntrReadArgMem];
  bit isTarget = 0;
  string NAME = ?;
}
class AdvSIMD_2Vec_Load_Lane_Intrinsic {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyvector_ty, anonymous_179];
  list<LLVMType> ParamTypes = [anonymous_180, anonymous_181, llvm_i64_ty, llvm_anyptr_ty];
  list<IntrinsicProperty> Properties = [IntrReadArgMem];
  bit isTarget = 0;
  string NAME = ?;
}
class AdvSIMD_2Vec_Store_Intrinsic {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_anyvector_ty, anonymous_182, anonymous_184];
  list<IntrinsicProperty> Properties = [IntrReadWriteArgMem, anonymous_185];
  bit isTarget = 0;
  string NAME = ?;
}
class AdvSIMD_2Vec_Store_Lane_Intrinsic {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_anyvector_ty, anonymous_186, llvm_i64_ty, llvm_anyptr_ty];
  list<IntrinsicProperty> Properties = [IntrReadWriteArgMem, anonymous_187];
  bit isTarget = 0;
  string NAME = ?;
}
class AdvSIMD_2Vector2Index_Intrinsic {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [llvm_anyvector_ty, llvm_i64_ty, anonymous_172, llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class AdvSIMD_2VectorArg_Compare_Intrinsic {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [llvm_anyvector_ty, anonymous_152];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class AdvSIMD_2VectorArg_Intrinsic {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [anonymous_150, anonymous_151];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class AdvSIMD_2VectorArg_Long_Intrinsic {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [anonymous_154, anonymous_155];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class AdvSIMD_2VectorArg_Narrow_Intrinsic {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [anonymous_158, anonymous_159];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class AdvSIMD_2VectorArg_Scalar_Expand_BySize_Intrinsic {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [llvm_anyvector_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class AdvSIMD_2VectorArg_Scalar_Wide_BySize_Intrinsic {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [anonymous_161];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class AdvSIMD_2VectorArg_Scalar_Wide_Intrinsic {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [anonymous_162, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class AdvSIMD_2VectorArg_Tied_Narrow_Intrinsic {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [anonymous_163, llvm_anyvector_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class AdvSIMD_2VectorArg_Wide_Intrinsic {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [anonymous_156, anonymous_157];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class AdvSIMD_3Vec_Load_Intrinsic {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyvector_ty, anonymous_188, anonymous_189];
  list<LLVMType> ParamTypes = [anonymous_191];
  list<IntrinsicProperty> Properties = [IntrReadArgMem];
  bit isTarget = 0;
  string NAME = ?;
}
class AdvSIMD_3Vec_Load_Lane_Intrinsic {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyvector_ty, anonymous_192, anonymous_193];
  list<LLVMType> ParamTypes = [anonymous_194, anonymous_195, anonymous_196, llvm_i64_ty, llvm_anyptr_ty];
  list<IntrinsicProperty> Properties = [IntrReadArgMem];
  bit isTarget = 0;
  string NAME = ?;
}
class AdvSIMD_3Vec_Store_Intrinsic {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_anyvector_ty, anonymous_197, anonymous_198, anonymous_200];
  list<IntrinsicProperty> Properties = [IntrReadWriteArgMem, anonymous_201];
  bit isTarget = 0;
  string NAME = ?;
}
class AdvSIMD_3Vec_Store_Lane_Intrinsic {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_anyvector_ty, anonymous_202, anonymous_203, llvm_i64_ty, llvm_anyptr_ty];
  list<IntrinsicProperty> Properties = [IntrReadWriteArgMem, anonymous_204];
  bit isTarget = 0;
  string NAME = ?;
}
class AdvSIMD_3VectorArg_Intrinsic {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [anonymous_164, anonymous_165, anonymous_166];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class AdvSIMD_3VectorArg_Scalar_Intrinsic {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [anonymous_167, anonymous_168, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class AdvSIMD_3VectorArg_Scalar_Tied_Narrow_Intrinsic {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [anonymous_171, llvm_anyvector_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class AdvSIMD_3VectorArg_Tied_Narrow_Intrinsic {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [anonymous_169, llvm_anyvector_ty, anonymous_170];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class AdvSIMD_4Vec_Load_Intrinsic {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyvector_ty, anonymous_205, anonymous_206, anonymous_207];
  list<LLVMType> ParamTypes = [anonymous_209];
  list<IntrinsicProperty> Properties = [IntrReadArgMem];
  bit isTarget = 0;
  string NAME = ?;
}
class AdvSIMD_4Vec_Load_Lane_Intrinsic {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyvector_ty, anonymous_210, anonymous_211, anonymous_212];
  list<LLVMType> ParamTypes = [anonymous_213, anonymous_214, anonymous_215, anonymous_216, llvm_i64_ty, llvm_anyptr_ty];
  list<IntrinsicProperty> Properties = [IntrReadArgMem];
  bit isTarget = 0;
  string NAME = ?;
}
class AdvSIMD_4Vec_Store_Intrinsic {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_anyvector_ty, anonymous_217, anonymous_218, anonymous_219, anonymous_221];
  list<IntrinsicProperty> Properties = [IntrReadWriteArgMem, anonymous_222];
  bit isTarget = 0;
  string NAME = ?;
}
class AdvSIMD_4Vec_Store_Lane_Intrinsic {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_anyvector_ty, anonymous_223, anonymous_224, anonymous_225, llvm_i64_ty, llvm_anyptr_ty];
  list<IntrinsicProperty> Properties = [IntrReadWriteArgMem, anonymous_226];
  bit isTarget = 0;
  string NAME = ?;
}
class AdvSIMD_CvtFPToFx_Intrinsic {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyint_ty];
  list<LLVMType> ParamTypes = [llvm_anyfloat_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class AdvSIMD_CvtFxToFP_Intrinsic {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyfloat_ty];
  list<LLVMType> ParamTypes = [llvm_anyint_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class AdvSIMD_FPToIntRounding_Intrinsic {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyint_ty];
  list<LLVMType> ParamTypes = [llvm_anyfloat_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class AdvSIMD_Tbl1_Intrinsic {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, anonymous_227];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class AdvSIMD_Tbl2_Intrinsic {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty, anonymous_228];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class AdvSIMD_Tbl3_Intrinsic {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty, llvm_v16i8_ty, anonymous_229];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class AdvSIMD_Tbl4_Intrinsic {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty, llvm_v16i8_ty, llvm_v16i8_ty, anonymous_230];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class AdvSIMD_Tbx1_Intrinsic {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [anonymous_231, llvm_v16i8_ty, anonymous_232];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class AdvSIMD_Tbx2_Intrinsic {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [anonymous_233, llvm_v16i8_ty, llvm_v16i8_ty, anonymous_234];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class AdvSIMD_Tbx3_Intrinsic {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [anonymous_235, llvm_v16i8_ty, llvm_v16i8_ty, llvm_v16i8_ty, anonymous_236];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class AdvSIMD_Tbx4_Intrinsic {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [anonymous_237, llvm_v16i8_ty, llvm_v16i8_ty, llvm_v16i8_ty, llvm_v16i8_ty, anonymous_238];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class AsmOperandClass {
  string Name = ?;
  list<AsmOperandClass> SuperClasses = [];
  string PredicateMethod = ?;
  string RenderMethod = ?;
  string ParserMethod = ?;
  string DiagnosticType = "";
  string NAME = ?;
}
class AsmParser {
  string AsmParserClassName = "AsmParser";
  string AsmParserInstCleanup = "";
  bit ShouldEmitMatchRegisterName = 1;
  bit MnemonicContainsDot = 0;
  string NAME = ?;
}
class AsmParserVariant {
  int Variant = 0;
  string Name = "";
  string CommentDelimiter = "";
  string RegisterPrefix = "";
  string NAME = ?;
}
class AsmWriter {
  string AsmWriterClassName = "InstPrinter";
  int PassSubtarget = 0;
  int Variant = 0;
  string NAME = ?;
}
class AssemblerPredicate<string AssemblerPredicate:cond = ?, string AssemblerPredicate:name = ""> {
  bit AssemblerMatcherPredicate = 1;
  string AssemblerCondString = AssemblerPredicate:cond;
  string PredicateName = AssemblerPredicate:name;
  string NAME = ?;
}
class B<bits<8> B:op1 = { ?, ?, ?, ?, ?, ?, ?, ? }, dag B:outs = ?, dag B:ins = ?, string B:asmstr = ?, list<dag> B:pattern = ?> {	// Instruction InstTriCore T32
  field bits<32> Inst = { disp24{15}, disp24{14}, disp24{13}, disp24{12}, disp24{11}, disp24{10}, disp24{9}, disp24{8}, disp24{7}, disp24{6}, disp24{5}, disp24{4}, disp24{3}, disp24{2}, disp24{1}, disp24{0}, disp24{23}, disp24{22}, disp24{21}, disp24{20}, disp24{19}, disp24{18}, disp24{17}, disp24{16}, B:op1{7}, B:op1{6}, B:op1{5}, B:op1{4}, B:op1{3}, B:op1{2}, B:op1{1}, B:op1{0} };
  string Namespace = "TriCore";
  dag OutOperandList = B:outs;
  dag InOperandList = B:ins;
  string AsmString = B:asmstr;
  list<dag> Pattern = B:pattern;
  list<Register> Uses = [];
  list<Register> Defs = [];
  list<Predicate> Predicates = [];
  int Size = 4;
  string DecoderNamespace = "";
  int CodeSize = 0;
  int AddedComplexity = 0;
  bit isReturn = 0;
  bit isBranch = 0;
  bit isIndirectBranch = 0;
  bit isCompare = 0;
  bit isMoveImm = 0;
  bit isBitcast = 0;
  bit isSelect = 0;
  bit isBarrier = 0;
  bit isCall = 0;
  bit canFoldAsLoad = 0;
  bit mayLoad = ?;
  bit mayStore = ?;
  bit isConvertibleToThreeAddress = 0;
  bit isCommutable = 0;
  bit isTerminator = 0;
  bit isReMaterializable = 0;
  bit isPredicable = 0;
  bit hasDelaySlot = 0;
  bit usesCustomInserter = 0;
  bit hasPostISelHook = 0;
  bit hasCtrlDep = 0;
  bit isNotDuplicable = 0;
  bit isConvergent = 0;
  bit isAsCheapAsAMove = 0;
  bit hasExtraSrcRegAllocReq = 0;
  bit hasExtraDefRegAllocReq = 0;
  bit isRegSequence = 0;
  bit isPseudo = 0;
  bit isExtractSubreg = 0;
  bit isInsertSubreg = 0;
  bit hasSideEffects = ?;
  bit isCodeGenOnly = 0;
  bit isAsmParserOnly = 0;
  InstrItinClass Itinerary = NoItinerary;
  list<SchedReadWrite> SchedRW = ?;
  string Constraints = "";
  string DisableEncoding = "";
  string PostEncoderMethod = "";
  string DecoderMethod = "";
  bits<64> TSFlags = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string AsmMatchConverter = "";
  string TwoOperandAliasConstraint = "";
  bit UseNamedOperandTable = 0;
  bits<24> disp24 = { ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? };
  string NAME = ?;
}
class BOL<bits<8> BOL:op1 = { ?, ?, ?, ?, ?, ?, ?, ? }, dag BOL:outs = ?, dag BOL:ins = ?, string BOL:asmstr = ?, list<dag> BOL:pattern = ?> {	// Instruction InstTriCore T32
  field bits<32> Inst = { off16{9}, off16{8}, off16{7}, off16{6}, off16{15}, off16{14}, off16{13}, off16{12}, off16{11}, off16{10}, off16{5}, off16{4}, off16{3}, off16{2}, off16{1}, off16{0}, s2{3}, s2{2}, s2{1}, s2{0}, s1_d{3}, s1_d{2}, s1_d{1}, s1_d{0}, BOL:op1{7}, BOL:op1{6}, BOL:op1{5}, BOL:op1{4}, BOL:op1{3}, BOL:op1{2}, BOL:op1{1}, BOL:op1{0} };
  string Namespace = "TriCore";
  dag OutOperandList = BOL:outs;
  dag InOperandList = BOL:ins;
  string AsmString = BOL:asmstr;
  list<dag> Pattern = BOL:pattern;
  list<Register> Uses = [];
  list<Register> Defs = [];
  list<Predicate> Predicates = [];
  int Size = 4;
  string DecoderNamespace = "";
  int CodeSize = 0;
  int AddedComplexity = 0;
  bit isReturn = 0;
  bit isBranch = 0;
  bit isIndirectBranch = 0;
  bit isCompare = 0;
  bit isMoveImm = 0;
  bit isBitcast = 0;
  bit isSelect = 0;
  bit isBarrier = 0;
  bit isCall = 0;
  bit canFoldAsLoad = 0;
  bit mayLoad = ?;
  bit mayStore = ?;
  bit isConvertibleToThreeAddress = 0;
  bit isCommutable = 0;
  bit isTerminator = 0;
  bit isReMaterializable = 0;
  bit isPredicable = 0;
  bit hasDelaySlot = 0;
  bit usesCustomInserter = 0;
  bit hasPostISelHook = 0;
  bit hasCtrlDep = 0;
  bit isNotDuplicable = 0;
  bit isConvergent = 0;
  bit isAsCheapAsAMove = 0;
  bit hasExtraSrcRegAllocReq = 0;
  bit hasExtraDefRegAllocReq = 0;
  bit isRegSequence = 0;
  bit isPseudo = 0;
  bit isExtractSubreg = 0;
  bit isInsertSubreg = 0;
  bit hasSideEffects = ?;
  bit isCodeGenOnly = 0;
  bit isAsmParserOnly = 0;
  InstrItinClass Itinerary = NoItinerary;
  list<SchedReadWrite> SchedRW = ?;
  string Constraints = "";
  string DisableEncoding = "";
  string PostEncoderMethod = "";
  string DecoderMethod = "";
  bits<64> TSFlags = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string AsmMatchConverter = "";
  string TwoOperandAliasConstraint = "";
  bit UseNamedOperandTable = 0;
  bits<16> off16 = { ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? };
  bits<4> s2 = { ?, ?, ?, ? };
  bits<4> s1_d = { ?, ?, ?, ? };
  string NAME = ?;
}
class BRC<bit BRC:op2 = ?, bits<8> BRC:op1 = { ?, ?, ?, ?, ?, ?, ?, ? }, dag BRC:outs = ?, dag BRC:ins = ?, string BRC:asmstr = ?, list<dag> BRC:pattern = ?> {	// Instruction InstTriCore T32
  field bits<32> Inst = { BRC:op2, dip15{14}, dip15{13}, dip15{12}, dip15{11}, dip15{10}, dip15{9}, dip15{8}, dip15{7}, dip15{6}, dip15{5}, dip15{4}, dip15{3}, dip15{2}, dip15{1}, dip15{0}, const4{3}, const4{2}, const4{1}, const4{0}, s1{3}, s1{2}, s1{1}, s1{0}, BRC:op1{7}, BRC:op1{6}, BRC:op1{5}, BRC:op1{4}, BRC:op1{3}, BRC:op1{2}, BRC:op1{1}, BRC:op1{0} };
  string Namespace = "TriCore";
  dag OutOperandList = BRC:outs;
  dag InOperandList = BRC:ins;
  string AsmString = BRC:asmstr;
  list<dag> Pattern = BRC:pattern;
  list<Register> Uses = [];
  list<Register> Defs = [];
  list<Predicate> Predicates = [];
  int Size = 4;
  string DecoderNamespace = "";
  int CodeSize = 0;
  int AddedComplexity = 0;
  bit isReturn = 0;
  bit isBranch = 0;
  bit isIndirectBranch = 0;
  bit isCompare = 0;
  bit isMoveImm = 0;
  bit isBitcast = 0;
  bit isSelect = 0;
  bit isBarrier = 0;
  bit isCall = 0;
  bit canFoldAsLoad = 0;
  bit mayLoad = ?;
  bit mayStore = ?;
  bit isConvertibleToThreeAddress = 0;
  bit isCommutable = 0;
  bit isTerminator = 0;
  bit isReMaterializable = 0;
  bit isPredicable = 0;
  bit hasDelaySlot = 0;
  bit usesCustomInserter = 0;
  bit hasPostISelHook = 0;
  bit hasCtrlDep = 0;
  bit isNotDuplicable = 0;
  bit isConvergent = 0;
  bit isAsCheapAsAMove = 0;
  bit hasExtraSrcRegAllocReq = 0;
  bit hasExtraDefRegAllocReq = 0;
  bit isRegSequence = 0;
  bit isPseudo = 0;
  bit isExtractSubreg = 0;
  bit isInsertSubreg = 0;
  bit hasSideEffects = ?;
  bit isCodeGenOnly = 0;
  bit isAsmParserOnly = 0;
  InstrItinClass Itinerary = NoItinerary;
  list<SchedReadWrite> SchedRW = ?;
  string Constraints = "";
  string DisableEncoding = "";
  string PostEncoderMethod = "";
  string DecoderMethod = "";
  bits<64> TSFlags = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string AsmMatchConverter = "";
  string TwoOperandAliasConstraint = "";
  bit UseNamedOperandTable = 0;
  bits<4> s1 = { ?, ?, ?, ? };
  bits<4> const4 = { ?, ?, ?, ? };
  bits<15> dip15 = { ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? };
  string NAME = ?;
}
class BRR<bit BRR:op2 = ?, bits<8> BRR:op1 = { ?, ?, ?, ?, ?, ?, ?, ? }, dag BRR:outs = ?, dag BRR:ins = ?, string BRR:asmstr = ?, list<dag> BRR:pattern = ?> {	// Instruction InstTriCore T32
  field bits<32> Inst = { BRR:op2, dip15{14}, dip15{13}, dip15{12}, dip15{11}, dip15{10}, dip15{9}, dip15{8}, dip15{7}, dip15{6}, dip15{5}, dip15{4}, dip15{3}, dip15{2}, dip15{1}, dip15{0}, s1{3}, s1{2}, s1{1}, s1{0}, s1{3}, s1{2}, s1{1}, s1{0}, BRR:op1{7}, BRR:op1{6}, BRR:op1{5}, BRR:op1{4}, BRR:op1{3}, BRR:op1{2}, BRR:op1{1}, BRR:op1{0} };
  string Namespace = "TriCore";
  dag OutOperandList = BRR:outs;
  dag InOperandList = BRR:ins;
  string AsmString = BRR:asmstr;
  list<dag> Pattern = BRR:pattern;
  list<Register> Uses = [];
  list<Register> Defs = [];
  list<Predicate> Predicates = [];
  int Size = 4;
  string DecoderNamespace = "";
  int CodeSize = 0;
  int AddedComplexity = 0;
  bit isReturn = 0;
  bit isBranch = 0;
  bit isIndirectBranch = 0;
  bit isCompare = 0;
  bit isMoveImm = 0;
  bit isBitcast = 0;
  bit isSelect = 0;
  bit isBarrier = 0;
  bit isCall = 0;
  bit canFoldAsLoad = 0;
  bit mayLoad = ?;
  bit mayStore = ?;
  bit isConvertibleToThreeAddress = 0;
  bit isCommutable = 0;
  bit isTerminator = 0;
  bit isReMaterializable = 0;
  bit isPredicable = 0;
  bit hasDelaySlot = 0;
  bit usesCustomInserter = 0;
  bit hasPostISelHook = 0;
  bit hasCtrlDep = 0;
  bit isNotDuplicable = 0;
  bit isConvergent = 0;
  bit isAsCheapAsAMove = 0;
  bit hasExtraSrcRegAllocReq = 0;
  bit hasExtraDefRegAllocReq = 0;
  bit isRegSequence = 0;
  bit isPseudo = 0;
  bit isExtractSubreg = 0;
  bit isInsertSubreg = 0;
  bit hasSideEffects = ?;
  bit isCodeGenOnly = 0;
  bit isAsmParserOnly = 0;
  InstrItinClass Itinerary = NoItinerary;
  list<SchedReadWrite> SchedRW = ?;
  string Constraints = "";
  string DisableEncoding = "";
  string PostEncoderMethod = "";
  string DecoderMethod = "";
  bits<64> TSFlags = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string AsmMatchConverter = "";
  string TwoOperandAliasConstraint = "";
  bit UseNamedOperandTable = 0;
  bits<4> s1 = { ?, ?, ?, ? };
  bits<4> s2 = { ?, ?, ?, ? };
  bits<15> dip15 = { ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? };
  string NAME = ?;
}
class Bypass {
  string NAME = ?;
}
class CCAction {
  string NAME = ?;
}
class CCAssignToReg<list<Register> CCAssignToReg:regList = ?> {	// CCAction
  list<Register> RegList = CCAssignToReg:regList;
  string NAME = ?;
}
class CCAssignToRegWithShadow<list<Register> CCAssignToRegWithShadow:regList = ?, list<Register> CCAssignToRegWithShadow:shadowList = ?> {	// CCAction
  list<Register> RegList = CCAssignToRegWithShadow:regList;
  list<Register> ShadowRegList = CCAssignToRegWithShadow:shadowList;
  string NAME = ?;
}
class CCAssignToStack<int CCAssignToStack:size = ?, int CCAssignToStack:align = ?> {	// CCAction
  int Size = CCAssignToStack:size;
  int Align = CCAssignToStack:align;
  string NAME = ?;
}
class CCAssignToStackWithShadow<int CCAssignToStackWithShadow:size = ?, int CCAssignToStackWithShadow:align = ?, list<Register> CCAssignToStackWithShadow:shadowList = ?> {	// CCAction
  int Size = CCAssignToStackWithShadow:size;
  int Align = CCAssignToStackWithShadow:align;
  list<Register> ShadowRegList = CCAssignToStackWithShadow:shadowList;
  string NAME = ?;
}
class CCBitConvertToType<ValueType CCBitConvertToType:destTy = ?> {	// CCAction
  ValueType DestTy = CCBitConvertToType:destTy;
  string NAME = ?;
}
class CCCustom<string CCCustom:fn = ?> {	// CCAction
  string FuncName = CCCustom:fn;
  string NAME = ?;
}
class CCDelegateTo<CallingConv CCDelegateTo:cc = ?> {	// CCAction
  CallingConv CC = CCDelegateTo:cc;
  string NAME = ?;
}
class CCIf<string CCIf:predicate = ?, CCAction CCIf:A = ?> {	// CCAction CCPredicateAction
  CCAction SubAction = CCIf:A;
  string Predicate = CCIf:predicate;
  string NAME = ?;
}
class CCIfByVal<CCAction CCIfByVal:A = ?> {	// CCAction CCPredicateAction CCIf
  CCAction SubAction = CCIfByVal:A;
  string Predicate = "ArgFlags.isByVal()";
  string NAME = ?;
}
class CCIfCC<string CCIfCC:CC = ?, CCAction CCIfCC:A = ?> {	// CCAction CCPredicateAction CCIf
  CCAction SubAction = CCIfCC:A;
  string Predicate = !strconcat("State.getCallingConv() == ", CCIfCC:CC);
  string NAME = ?;
}
class CCIfConsecutiveRegs<CCAction CCIfConsecutiveRegs:A = ?> {	// CCAction CCPredicateAction CCIf
  CCAction SubAction = CCIfConsecutiveRegs:A;
  string Predicate = "ArgFlags.isInConsecutiveRegs()";
  string NAME = ?;
}
class CCIfInReg<CCAction CCIfInReg:A = ?> {	// CCAction CCPredicateAction CCIf
  CCAction SubAction = CCIfInReg:A;
  string Predicate = "ArgFlags.isInReg()";
  string NAME = ?;
}
class CCIfNest<CCAction CCIfNest:A = ?> {	// CCAction CCPredicateAction CCIf
  CCAction SubAction = CCIfNest:A;
  string Predicate = "ArgFlags.isNest()";
  string NAME = ?;
}
class CCIfNotVarArg<CCAction CCIfNotVarArg:A = ?> {	// CCAction CCPredicateAction CCIf
  CCAction SubAction = CCIfNotVarArg:A;
  string Predicate = "!State.isVarArg()";
  string NAME = ?;
}
class CCIfSRet<CCAction CCIfSRet:A = ?> {	// CCAction CCPredicateAction CCIf
  CCAction SubAction = CCIfSRet:A;
  string Predicate = "ArgFlags.isSRet()";
  string NAME = ?;
}
class CCIfSplit<CCAction CCIfSplit:A = ?> {	// CCAction CCPredicateAction CCIf
  CCAction SubAction = CCIfSplit:A;
  string Predicate = "ArgFlags.isSplit()";
  string NAME = ?;
}
class CCIfType<list<ValueType> CCIfType:vts = ?, CCAction CCIfType:A = ?> {	// CCAction CCPredicateAction
  CCAction SubAction = CCIfType:A;
  list<ValueType> VTs = CCIfType:vts;
  string NAME = ?;
}
class CCIfVarArg<CCAction CCIfVarArg:A = ?> {	// CCAction CCPredicateAction CCIf
  CCAction SubAction = CCIfVarArg:A;
  string Predicate = "State.isVarArg()";
  string NAME = ?;
}
class CCPassByVal<int CCPassByVal:size = ?, int CCPassByVal:align = ?> {	// CCAction
  int Size = CCPassByVal:size;
  int Align = CCPassByVal:align;
  string NAME = ?;
}
class CCPassIndirect<ValueType CCPassIndirect:destTy = ?> {	// CCAction
  ValueType DestTy = CCPassIndirect:destTy;
  string NAME = ?;
}
class CCPredicateAction<CCAction CCPredicateAction:A = ?> {	// CCAction
  CCAction SubAction = CCPredicateAction:A;
  string NAME = ?;
}
class CCPromoteToType<ValueType CCPromoteToType:destTy = ?> {	// CCAction
  ValueType DestTy = CCPromoteToType:destTy;
  string NAME = ?;
}
class CCPromoteToUpperBitsInType<ValueType CCPromoteToUpperBitsInType:destTy = ?> {	// CCAction
  ValueType DestTy = CCPromoteToUpperBitsInType:destTy;
  string NAME = ?;
}
class CalleeSavedRegs<dag CalleeSavedRegs:saves = ?> {
  dag SaveList = CalleeSavedRegs:saves;
  dag OtherPreserved = ?;
  string NAME = ?;
}
class CallingConv<list<CCAction> CallingConv:actions = ?> {
  list<CCAction> Actions = CallingConv:actions;
  bit Custom = 0;
  string NAME = ?;
}
class CodePatPred<string CodePatPred:predicate = ?> {	// PatPred
  string PredicateCode = CodePatPred:predicate;
  string NAME = ?;
}
class ComplexDeprecationPredicate<string ComplexDeprecationPredicate:dep = ?> {
  string ComplexDeprecationPredicate = ComplexDeprecationPredicate:dep;
  string NAME = ?;
}
class ComplexPattern<ValueType ComplexPattern:ty = ?, int ComplexPattern:numops = ?, string ComplexPattern:fn = ?, list<SDNode> ComplexPattern:roots = [], list<SDNodeProperty> ComplexPattern:props = []> {
  ValueType Ty = ComplexPattern:ty;
  int NumOperands = ComplexPattern:numops;
  string SelectFunc = ComplexPattern:fn;
  list<SDNode> RootNodes = ComplexPattern:roots;
  list<SDNodeProperty> Properties = ComplexPattern:props;
  string NAME = ?;
}
class ComposedSubRegIndex<SubRegIndex ComposedSubRegIndex:A = ?, SubRegIndex ComposedSubRegIndex:B = ?> {	// SubRegIndex
  string Namespace = "";
  int Size = ComposedSubRegIndex:B.Size;
  int Offset = !if(!eq(ComposedSubRegIndex:A.Offset, -1), -1, !if(!eq(ComposedSubRegIndex:B.Offset, -1), -1, !add(ComposedSubRegIndex:A.Offset, ComposedSubRegIndex:B.Offset)));
  list<SubRegIndex> ComposedOf = [ComposedSubRegIndex:A, ComposedSubRegIndex:B];
  list<SubRegIndex> CoveringSubRegIndices = [];
  string NAME = ?;
}
class CondCode {
  string NAME = ?;
}
class Crypto_AES_DataKey_Intrinsic {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class Crypto_AES_Data_Intrinsic {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class Crypto_SHA_12Schedule_Intrinsic {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class Crypto_SHA_1Hash_Intrinsic {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class Crypto_SHA_5Hash4Schedule_Intrinsic {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class Crypto_SHA_8Hash4Schedule_Intrinsic {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class Crypto_SHA_8Schedule_Intrinsic {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class CustomCallingConv {	// CallingConv
  list<CCAction> Actions = [];
  bit Custom = 1;
  string NAME = ?;
}
class DAGOperand {
  string NAME = ?;
}
class Deprecated<SubtargetFeature Deprecated:dep = ?> {
  SubtargetFeature DeprecatedFeatureMask = Deprecated:dep;
  string NAME = ?;
}
class DwarfRegAlias<Register DwarfRegAlias:reg = ?> {
  Register DwarfAlias = DwarfRegAlias:reg;
  string NAME = ?;
}
class DwarfRegNum<list<int> DwarfRegNum:Numbers = ?> {
  list<int> DwarfNumbers = DwarfRegNum:Numbers;
  string NAME = ?;
}
class FuncUnit {
  string NAME = ?;
}
class GCCBuiltin<string GCCBuiltin:name = ?> {
  string GCCBuiltinName = GCCBuiltin:name;
  string NAME = ?;
}
class Hexagon_Intrinsic<string Hexagon_Intrinsic:GCCIntSuffix = ?, list<LLVMType> Hexagon_Intrinsic:ret_types = ?, list<LLVMType> Hexagon_Intrinsic:param_types = ?, list<IntrinsicProperty> Hexagon_Intrinsic:properties = ?> {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = !strconcat("__builtin_", Hexagon_Intrinsic:GCCIntSuffix);
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = Hexagon_Intrinsic:ret_types;
  list<LLVMType> ParamTypes = Hexagon_Intrinsic:param_types;
  list<IntrinsicProperty> Properties = Hexagon_Intrinsic:properties;
  bit isTarget = 0;
  string NAME = ?;
}
class Hexagon_df_df_Intrinsic<string Hexagon_df_df_Intrinsic:GCCIntSuffix = ?> {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic
  string GCCBuiltinName = !strconcat("__builtin_", Hexagon_df_df_Intrinsic:GCCIntSuffix);
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_double_ty];
  list<LLVMType> ParamTypes = [llvm_double_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class Hexagon_df_dfdf_Intrinsic<string Hexagon_df_dfdf_Intrinsic:GCCIntSuffix = ?> {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic
  string GCCBuiltinName = !strconcat("__builtin_", Hexagon_df_dfdf_Intrinsic:GCCIntSuffix);
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_double_ty];
  list<LLVMType> ParamTypes = [llvm_double_ty, llvm_double_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem, Throws];
  bit isTarget = 0;
  string NAME = ?;
}
class Hexagon_df_dfdfdf_Intrinsic<string Hexagon_df_dfdfdf_Intrinsic:GCCIntSuffix = ?> {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic
  string GCCBuiltinName = !strconcat("__builtin_", Hexagon_df_dfdfdf_Intrinsic:GCCIntSuffix);
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_double_ty];
  list<LLVMType> ParamTypes = [llvm_double_ty, llvm_double_ty, llvm_double_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem, Throws];
  bit isTarget = 0;
  string NAME = ?;
}
class Hexagon_df_dfdfdfqi_Intrinsic<string Hexagon_df_dfdfdfqi_Intrinsic:GCCIntSuffix = ?> {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic
  string GCCBuiltinName = !strconcat("__builtin_", Hexagon_df_dfdfdfqi_Intrinsic:GCCIntSuffix);
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_double_ty];
  list<LLVMType> ParamTypes = [llvm_double_ty, llvm_double_ty, llvm_double_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem, Throws];
  bit isTarget = 0;
  string NAME = ?;
}
class Hexagon_df_di_Intrinsic<string Hexagon_df_di_Intrinsic:GCCIntSuffix = ?> {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic
  string GCCBuiltinName = !strconcat("__builtin_", Hexagon_df_di_Intrinsic:GCCIntSuffix);
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_double_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class Hexagon_df_sf_Intrinsic<string Hexagon_df_sf_Intrinsic:GCCIntSuffix = ?> {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic
  string GCCBuiltinName = !strconcat("__builtin_", Hexagon_df_sf_Intrinsic:GCCIntSuffix);
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_double_ty];
  list<LLVMType> ParamTypes = [llvm_float_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class Hexagon_df_si_Intrinsic<string Hexagon_df_si_Intrinsic:GCCIntSuffix = ?> {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic
  string GCCBuiltinName = !strconcat("__builtin_", Hexagon_df_si_Intrinsic:GCCIntSuffix);
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_double_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem, Throws];
  bit isTarget = 0;
  string NAME = ?;
}
class Hexagon_di_df_Intrinsic<string Hexagon_di_df_Intrinsic:GCCIntSuffix = ?> {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic
  string GCCBuiltinName = !strconcat("__builtin_", Hexagon_di_df_Intrinsic:GCCIntSuffix);
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_double_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class Hexagon_di_di_Intrinsic<string Hexagon_di_di_Intrinsic:GCCIntSuffix = ?> {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic
  string GCCBuiltinName = !strconcat("__builtin_", Hexagon_di_di_Intrinsic:GCCIntSuffix);
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class Hexagon_di_didi_Intrinsic<string Hexagon_di_didi_Intrinsic:GCCIntSuffix = ?> {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic
  string GCCBuiltinName = !strconcat("__builtin_", Hexagon_di_didi_Intrinsic:GCCIntSuffix);
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class Hexagon_di_dididi_Intrinsic<string Hexagon_di_dididi_Intrinsic:GCCIntSuffix = ?> {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic
  string GCCBuiltinName = !strconcat("__builtin_", Hexagon_di_dididi_Intrinsic:GCCIntSuffix);
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class Hexagon_di_dididisi_Intrinsic<string Hexagon_di_dididisi_Intrinsic:GCCIntSuffix = ?> {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic
  string GCCBuiltinName = !strconcat("__builtin_", Hexagon_di_dididisi_Intrinsic:GCCIntSuffix);
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class Hexagon_di_didiqi_Intrinsic<string Hexagon_di_didiqi_Intrinsic:GCCIntSuffix = ?> {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic
  string GCCBuiltinName = !strconcat("__builtin_", Hexagon_di_didiqi_Intrinsic:GCCIntSuffix);
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class Hexagon_di_didisi_Intrinsic<string Hexagon_di_didisi_Intrinsic:GCCIntSuffix = ?> {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic
  string GCCBuiltinName = !strconcat("__builtin_", Hexagon_di_didisi_Intrinsic:GCCIntSuffix);
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class Hexagon_di_didisisi_Intrinsic<string Hexagon_di_didisisi_Intrinsic:GCCIntSuffix = ?> {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic
  string GCCBuiltinName = !strconcat("__builtin_", Hexagon_di_didisisi_Intrinsic:GCCIntSuffix);
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class Hexagon_di_disi_Intrinsic<string Hexagon_di_disi_Intrinsic:GCCIntSuffix = ?> {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic
  string GCCBuiltinName = !strconcat("__builtin_", Hexagon_di_disi_Intrinsic:GCCIntSuffix);
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class Hexagon_di_disisi_Intrinsic<string Hexagon_di_disisi_Intrinsic:GCCIntSuffix = ?> {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic
  string GCCBuiltinName = !strconcat("__builtin_", Hexagon_di_disisi_Intrinsic:GCCIntSuffix);
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class Hexagon_di_qi_Intrinsic<string Hexagon_di_qi_Intrinsic:GCCIntSuffix = ?> {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic
  string GCCBuiltinName = !strconcat("__builtin_", Hexagon_di_qi_Intrinsic:GCCIntSuffix);
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class Hexagon_di_qididi_Intrinsic<string Hexagon_di_qididi_Intrinsic:GCCIntSuffix = ?> {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic
  string GCCBuiltinName = !strconcat("__builtin_", Hexagon_di_qididi_Intrinsic:GCCIntSuffix);
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class Hexagon_di_qisisi_Intrinsic<string Hexagon_di_qisisi_Intrinsic:GCCIntSuffix = ?> {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic
  string GCCBuiltinName = !strconcat("__builtin_", Hexagon_di_qisisi_Intrinsic:GCCIntSuffix);
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i1_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class Hexagon_di_sf_Intrinsic<string Hexagon_di_sf_Intrinsic:GCCIntSuffix = ?> {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic
  string GCCBuiltinName = !strconcat("__builtin_", Hexagon_di_sf_Intrinsic:GCCIntSuffix);
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_float_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class Hexagon_di_si_Intrinsic<string Hexagon_di_si_Intrinsic:GCCIntSuffix = ?> {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic
  string GCCBuiltinName = !strconcat("__builtin_", Hexagon_di_si_Intrinsic:GCCIntSuffix);
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class Hexagon_di_sidi_Intrinsic<string Hexagon_di_sidi_Intrinsic:GCCIntSuffix = ?> {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic
  string GCCBuiltinName = !strconcat("__builtin_", Hexagon_di_sidi_Intrinsic:GCCIntSuffix);
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class Hexagon_di_sisi_Intrinsic<string Hexagon_di_sisi_Intrinsic:GCCIntSuffix = ?> {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic
  string GCCBuiltinName = !strconcat("__builtin_", Hexagon_di_sisi_Intrinsic:GCCIntSuffix);
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class Hexagon_di_sisisi_Intrinsic<string Hexagon_di_sisisi_Intrinsic:GCCIntSuffix = ?> {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic
  string GCCBuiltinName = !strconcat("__builtin_", Hexagon_di_sisisi_Intrinsic:GCCIntSuffix);
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class Hexagon_hi_si_Intrinsic<string Hexagon_hi_si_Intrinsic:GCCIntSuffix = ?> {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic
  string GCCBuiltinName = !strconcat("__builtin_", Hexagon_hi_si_Intrinsic:GCCIntSuffix);
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i16_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class Hexagon_mem_memdisi_Intrinsic<string Hexagon_mem_memdisi_Intrinsic:GCCIntSuffix = ?> {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic
  string GCCBuiltinName = !strconcat("__builtin_", Hexagon_mem_memdisi_Intrinsic:GCCIntSuffix);
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_ptr_ty];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrReadWriteArgMem];
  bit isTarget = 0;
  string NAME = ?;
}
class Hexagon_mem_memdisisi_Intrinsic<string Hexagon_mem_memdisisi_Intrinsic:GCCIntSuffix = ?> {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic
  string GCCBuiltinName = !strconcat("__builtin_", Hexagon_mem_memdisisi_Intrinsic:GCCIntSuffix);
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_ptr_ty];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_i64_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrReadWriteArgMem];
  bit isTarget = 0;
  string NAME = ?;
}
class Hexagon_mem_memmemsi_Intrinsic<string Hexagon_mem_memmemsi_Intrinsic:GCCIntSuffix = ?> {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic
  string GCCBuiltinName = !strconcat("__builtin_", Hexagon_mem_memmemsi_Intrinsic:GCCIntSuffix);
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_ptr_ty];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_ptr_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrReadWriteArgMem];
  bit isTarget = 0;
  string NAME = ?;
}
class Hexagon_mem_memmemsisi_Intrinsic<string Hexagon_mem_memmemsisi_Intrinsic:GCCIntSuffix = ?> {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic
  string GCCBuiltinName = !strconcat("__builtin_", Hexagon_mem_memmemsisi_Intrinsic:GCCIntSuffix);
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_ptr_ty];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_ptr_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrReadWriteArgMem];
  bit isTarget = 0;
  string NAME = ?;
}
class Hexagon_mem_memsisi_Intrinsic<string Hexagon_mem_memsisi_Intrinsic:GCCIntSuffix = ?> {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic
  string GCCBuiltinName = !strconcat("__builtin_", Hexagon_mem_memsisi_Intrinsic:GCCIntSuffix);
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_ptr_ty];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrReadWriteArgMem];
  bit isTarget = 0;
  string NAME = ?;
}
class Hexagon_mem_memsisisi_Intrinsic<string Hexagon_mem_memsisisi_Intrinsic:GCCIntSuffix = ?> {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic
  string GCCBuiltinName = !strconcat("__builtin_", Hexagon_mem_memsisisi_Intrinsic:GCCIntSuffix);
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_ptr_ty];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrReadWriteArgMem];
  bit isTarget = 0;
  string NAME = ?;
}
class Hexagon_qi_didi_Intrinsic<string Hexagon_qi_didi_Intrinsic:GCCIntSuffix = ?> {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic
  string GCCBuiltinName = !strconcat("__builtin_", Hexagon_qi_didi_Intrinsic:GCCIntSuffix);
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i1_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class Hexagon_qi_disi_Intrinsic<string Hexagon_qi_disi_Intrinsic:GCCIntSuffix = ?> {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic
  string GCCBuiltinName = !strconcat("__builtin_", Hexagon_qi_disi_Intrinsic:GCCIntSuffix);
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i1_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class Hexagon_qi_mem_Intrinsic<string Hexagon_qi_mem_Intrinsic:GCCIntSuffix = ?> {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic
  string GCCBuiltinName = !strconcat("__builtin_", Hexagon_qi_mem_Intrinsic:GCCIntSuffix);
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i1_ty];
  list<LLVMType> ParamTypes = [llvm_ptr_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class Hexagon_qi_qi_Intrinsic<string Hexagon_qi_qi_Intrinsic:GCCIntSuffix = ?> {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic
  string GCCBuiltinName = !strconcat("__builtin_", Hexagon_qi_qi_Intrinsic:GCCIntSuffix);
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i1_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class Hexagon_qi_qiqi_Intrinsic<string Hexagon_qi_qiqi_Intrinsic:GCCIntSuffix = ?> {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic
  string GCCBuiltinName = !strconcat("__builtin_", Hexagon_qi_qiqi_Intrinsic:GCCIntSuffix);
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i1_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class Hexagon_qi_qiqiqi_Intrinsic<string Hexagon_qi_qiqiqi_Intrinsic:GCCIntSuffix = ?> {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic
  string GCCBuiltinName = !strconcat("__builtin_", Hexagon_qi_qiqiqi_Intrinsic:GCCIntSuffix);
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i1_ty];
  list<LLVMType> ParamTypes = [llvm_i1_ty, llvm_i1_ty, llvm_i1_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class Hexagon_qi_sfqi_Intrinsic<string Hexagon_qi_sfqi_Intrinsic:GCCIntSuffix = ?> {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic
  string GCCBuiltinName = !strconcat("__builtin_", Hexagon_qi_sfqi_Intrinsic:GCCIntSuffix);
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i1_ty];
  list<LLVMType> ParamTypes = [llvm_float_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class Hexagon_qi_si_Intrinsic<string Hexagon_qi_si_Intrinsic:GCCIntSuffix = ?> {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic
  string GCCBuiltinName = !strconcat("__builtin_", Hexagon_qi_si_Intrinsic:GCCIntSuffix);
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i1_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class Hexagon_qi_sidi_Intrinsic<string Hexagon_qi_sidi_Intrinsic:GCCIntSuffix = ?> {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic
  string GCCBuiltinName = !strconcat("__builtin_", Hexagon_qi_sidi_Intrinsic:GCCIntSuffix);
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i1_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class Hexagon_qi_sisi_Intrinsic<string Hexagon_qi_sisi_Intrinsic:GCCIntSuffix = ?> {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic
  string GCCBuiltinName = !strconcat("__builtin_", Hexagon_qi_sisi_Intrinsic:GCCIntSuffix);
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i1_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class Hexagon_sf_df_Intrinsic<string Hexagon_sf_df_Intrinsic:GCCIntSuffix = ?> {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic
  string GCCBuiltinName = !strconcat("__builtin_", Hexagon_sf_df_Intrinsic:GCCIntSuffix);
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_double_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class Hexagon_sf_di_Intrinsic<string Hexagon_sf_di_Intrinsic:GCCIntSuffix = ?> {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic
  string GCCBuiltinName = !strconcat("__builtin_", Hexagon_sf_di_Intrinsic:GCCIntSuffix);
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class Hexagon_sf_sf_Intrinsic<string Hexagon_sf_sf_Intrinsic:GCCIntSuffix = ?> {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic
  string GCCBuiltinName = !strconcat("__builtin_", Hexagon_sf_sf_Intrinsic:GCCIntSuffix);
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_float_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class Hexagon_sf_sfsf_Intrinsic<string Hexagon_sf_sfsf_Intrinsic:GCCIntSuffix = ?> {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic
  string GCCBuiltinName = !strconcat("__builtin_", Hexagon_sf_sfsf_Intrinsic:GCCIntSuffix);
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem, Throws];
  bit isTarget = 0;
  string NAME = ?;
}
class Hexagon_sf_sfsfsf_Intrinsic<string Hexagon_sf_sfsfsf_Intrinsic:GCCIntSuffix = ?> {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic
  string GCCBuiltinName = !strconcat("__builtin_", Hexagon_sf_sfsfsf_Intrinsic:GCCIntSuffix);
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_float_ty, llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem, Throws];
  bit isTarget = 0;
  string NAME = ?;
}
class Hexagon_sf_sfsfsfqi_Intrinsic<string Hexagon_sf_sfsfsfqi_Intrinsic:GCCIntSuffix = ?> {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic
  string GCCBuiltinName = !strconcat("__builtin_", Hexagon_sf_sfsfsfqi_Intrinsic:GCCIntSuffix);
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_float_ty, llvm_float_ty, llvm_float_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem, Throws];
  bit isTarget = 0;
  string NAME = ?;
}
class Hexagon_sf_si_Intrinsic<string Hexagon_sf_si_Intrinsic:GCCIntSuffix = ?> {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic
  string GCCBuiltinName = !strconcat("__builtin_", Hexagon_sf_si_Intrinsic:GCCIntSuffix);
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem, Throws];
  bit isTarget = 0;
  string NAME = ?;
}
class Hexagon_si_df_Intrinsic<string Hexagon_si_df_Intrinsic:GCCIntSuffix = ?> {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic
  string GCCBuiltinName = !strconcat("__builtin_", Hexagon_si_df_Intrinsic:GCCIntSuffix);
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_double_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class Hexagon_si_dfdf_Intrinsic<string Hexagon_si_dfdf_Intrinsic:GCCIntSuffix = ?> {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic
  string GCCBuiltinName = !strconcat("__builtin_", Hexagon_si_dfdf_Intrinsic:GCCIntSuffix);
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_double_ty, llvm_double_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem, Throws];
  bit isTarget = 0;
  string NAME = ?;
}
class Hexagon_si_dfsi_Intrinsic<string Hexagon_si_dfsi_Intrinsic:GCCIntSuffix = ?> {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic
  string GCCBuiltinName = !strconcat("__builtin_", Hexagon_si_dfsi_Intrinsic:GCCIntSuffix);
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_double_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem, Throws];
  bit isTarget = 0;
  string NAME = ?;
}
class Hexagon_si_di_Intrinsic<string Hexagon_si_di_Intrinsic:GCCIntSuffix = ?> {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic
  string GCCBuiltinName = !strconcat("__builtin_", Hexagon_si_di_Intrinsic:GCCIntSuffix);
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class Hexagon_si_didi_Intrinsic<string Hexagon_si_didi_Intrinsic:GCCIntSuffix = ?> {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic
  string GCCBuiltinName = !strconcat("__builtin_", Hexagon_si_didi_Intrinsic:GCCIntSuffix);
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class Hexagon_si_disi_Intrinsic<string Hexagon_si_disi_Intrinsic:GCCIntSuffix = ?> {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic
  string GCCBuiltinName = !strconcat("__builtin_", Hexagon_si_disi_Intrinsic:GCCIntSuffix);
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class Hexagon_si_disisi_Intrinsic<string Hexagon_si_disisi_Intrinsic:GCCIntSuffix = ?> {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic
  string GCCBuiltinName = !strconcat("__builtin_", Hexagon_si_disisi_Intrinsic:GCCIntSuffix);
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class Hexagon_si_qi_Intrinsic<string Hexagon_si_qi_Intrinsic:GCCIntSuffix = ?> {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic
  string GCCBuiltinName = !strconcat("__builtin_", Hexagon_si_qi_Intrinsic:GCCIntSuffix);
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class Hexagon_si_qiqi_Intrinsic<string Hexagon_si_qiqi_Intrinsic:GCCIntSuffix = ?> {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic
  string GCCBuiltinName = !strconcat("__builtin_", Hexagon_si_qiqi_Intrinsic:GCCIntSuffix);
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class Hexagon_si_qisi_Intrinsic<string Hexagon_si_qisi_Intrinsic:GCCIntSuffix = ?> {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic
  string GCCBuiltinName = !strconcat("__builtin_", Hexagon_si_qisi_Intrinsic:GCCIntSuffix);
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i1_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class Hexagon_si_qisisi_Intrinsic<string Hexagon_si_qisisi_Intrinsic:GCCIntSuffix = ?> {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic
  string GCCBuiltinName = !strconcat("__builtin_", Hexagon_si_qisisi_Intrinsic:GCCIntSuffix);
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class Hexagon_si_sf_Intrinsic<string Hexagon_si_sf_Intrinsic:GCCIntSuffix = ?> {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic
  string GCCBuiltinName = !strconcat("__builtin_", Hexagon_si_sf_Intrinsic:GCCIntSuffix);
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_float_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class Hexagon_si_sfsf_Intrinsic<string Hexagon_si_sfsf_Intrinsic:GCCIntSuffix = ?> {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic
  string GCCBuiltinName = !strconcat("__builtin_", Hexagon_si_sfsf_Intrinsic:GCCIntSuffix);
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem, Throws];
  bit isTarget = 0;
  string NAME = ?;
}
class Hexagon_si_sfsi_Intrinsic<string Hexagon_si_sfsi_Intrinsic:GCCIntSuffix = ?> {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic
  string GCCBuiltinName = !strconcat("__builtin_", Hexagon_si_sfsi_Intrinsic:GCCIntSuffix);
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_float_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem, Throws];
  bit isTarget = 0;
  string NAME = ?;
}
class Hexagon_si_si_Intrinsic<string Hexagon_si_si_Intrinsic:GCCIntSuffix = ?> {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic
  string GCCBuiltinName = !strconcat("__builtin_", Hexagon_si_si_Intrinsic:GCCIntSuffix);
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class Hexagon_si_sidi_Intrinsic<string Hexagon_si_sidi_Intrinsic:GCCIntSuffix = ?> {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic
  string GCCBuiltinName = !strconcat("__builtin_", Hexagon_si_sidi_Intrinsic:GCCIntSuffix);
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class Hexagon_si_sididi_Intrinsic<string Hexagon_si_sididi_Intrinsic:GCCIntSuffix = ?> {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic
  string GCCBuiltinName = !strconcat("__builtin_", Hexagon_si_sididi_Intrinsic:GCCIntSuffix);
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class Hexagon_si_sidisi_Intrinsic<string Hexagon_si_sidisi_Intrinsic:GCCIntSuffix = ?> {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic
  string GCCBuiltinName = !strconcat("__builtin_", Hexagon_si_sidisi_Intrinsic:GCCIntSuffix);
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class Hexagon_si_sisi_Intrinsic<string Hexagon_si_sisi_Intrinsic:GCCIntSuffix = ?> {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic
  string GCCBuiltinName = !strconcat("__builtin_", Hexagon_si_sisi_Intrinsic:GCCIntSuffix);
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class Hexagon_si_sisidi_Intrinsic<string Hexagon_si_sisidi_Intrinsic:GCCIntSuffix = ?> {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic
  string GCCBuiltinName = !strconcat("__builtin_", Hexagon_si_sisidi_Intrinsic:GCCIntSuffix);
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class Hexagon_si_sisisi_Intrinsic<string Hexagon_si_sisisi_Intrinsic:GCCIntSuffix = ?> {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic
  string GCCBuiltinName = !strconcat("__builtin_", Hexagon_si_sisisi_Intrinsic:GCCIntSuffix);
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class Hexagon_si_sisisisi_Intrinsic<string Hexagon_si_sisisisi_Intrinsic:GCCIntSuffix = ?> {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic
  string GCCBuiltinName = !strconcat("__builtin_", Hexagon_si_sisisisi_Intrinsic:GCCIntSuffix);
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class Hexagon_udi_didi_Intrinsic<string Hexagon_udi_didi_Intrinsic:GCCIntSuffix = ?> {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic
  string GCCBuiltinName = !strconcat("__builtin_", Hexagon_udi_didi_Intrinsic:GCCIntSuffix);
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class Hexagon_udi_sisi_Intrinsic<string Hexagon_udi_sisi_Intrinsic:GCCIntSuffix = ?> {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic
  string GCCBuiltinName = !strconcat("__builtin_", Hexagon_udi_sisi_Intrinsic:GCCIntSuffix);
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class Hexagon_usi_sisi_Intrinsic<string Hexagon_usi_sisi_Intrinsic:GCCIntSuffix = ?> {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic
  string GCCBuiltinName = !strconcat("__builtin_", Hexagon_usi_sisi_Intrinsic:GCCIntSuffix);
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class Hexagon_void_si_Intrinsic<string Hexagon_void_si_Intrinsic:GCCIntSuffix = ?> {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic
  string GCCBuiltinName = !strconcat("__builtin_", Hexagon_void_si_Intrinsic:GCCIntSuffix);
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_void_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class Hexagon_void_sisi_Intrinsic<string Hexagon_void_sisi_Intrinsic:GCCIntSuffix = ?> {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic
  string GCCBuiltinName = !strconcat("__builtin_", Hexagon_void_sisi_Intrinsic:GCCIntSuffix);
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_void_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class Hexagon_void_sisisi_Intrinsic<string Hexagon_void_sisisi_Intrinsic:GCCIntSuffix = ?> {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic
  string GCCBuiltinName = !strconcat("__builtin_", Hexagon_void_sisisi_Intrinsic:GCCIntSuffix);
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_void_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class ImmLeaf<ValueType ImmLeaf:vt = ?, string ImmLeaf:pred = ?, SDNodeXForm ImmLeaf:xform = NOOP_SDNodeXForm> {	// SDPatternOperator PatFrag
  dag Operands = (ops);
  dag Fragment = (ImmLeaf:vt imm);
  string PredicateCode = "";
  string ImmediateCode = ImmLeaf:pred;
  SDNodeXForm OperandTransform = ImmLeaf:xform;
  bit FastIselShouldIgnore = 0;
  string NAME = ?;
}
class InstAlias<string InstAlias:Asm = ?, dag InstAlias:Result = ?, int InstAlias:Emit = 1> {
  string AsmString = InstAlias:Asm;
  dag ResultInst = InstAlias:Result;
  int EmitPriority = InstAlias:Emit;
  list<Predicate> Predicates = [];
  bit UseInstAsmMatchConverter = 1;
  string NAME = ?;
}
class InstRW<list<SchedReadWrite> InstRW:rw = ?, dag InstRW:instrlist = ?> {
  list<SchedReadWrite> OperandReadWrites = InstRW:rw;
  dag Instrs = InstRW:instrlist;
  SchedMachineModel SchedModel = ?;
  string NAME = ?;
}
class InstTriCore<dag InstTriCore:outs = ?, dag InstTriCore:ins = ?, string InstTriCore:asmstr = ?, list<dag> InstTriCore:pattern = ?> {	// Instruction
  string Namespace = "TriCore";
  dag OutOperandList = InstTriCore:outs;
  dag InOperandList = InstTriCore:ins;
  string AsmString = InstTriCore:asmstr;
  list<dag> Pattern = InstTriCore:pattern;
  list<Register> Uses = [];
  list<Register> Defs = [];
  list<Predicate> Predicates = [];
  int Size = 0;
  string DecoderNamespace = "";
  int CodeSize = 0;
  int AddedComplexity = 0;
  bit isReturn = 0;
  bit isBranch = 0;
  bit isIndirectBranch = 0;
  bit isCompare = 0;
  bit isMoveImm = 0;
  bit isBitcast = 0;
  bit isSelect = 0;
  bit isBarrier = 0;
  bit isCall = 0;
  bit canFoldAsLoad = 0;
  bit mayLoad = ?;
  bit mayStore = ?;
  bit isConvertibleToThreeAddress = 0;
  bit isCommutable = 0;
  bit isTerminator = 0;
  bit isReMaterializable = 0;
  bit isPredicable = 0;
  bit hasDelaySlot = 0;
  bit usesCustomInserter = 0;
  bit hasPostISelHook = 0;
  bit hasCtrlDep = 0;
  bit isNotDuplicable = 0;
  bit isConvergent = 0;
  bit isAsCheapAsAMove = 0;
  bit hasExtraSrcRegAllocReq = 0;
  bit hasExtraDefRegAllocReq = 0;
  bit isRegSequence = 0;
  bit isPseudo = 0;
  bit isExtractSubreg = 0;
  bit isInsertSubreg = 0;
  bit hasSideEffects = ?;
  bit isCodeGenOnly = 0;
  bit isAsmParserOnly = 0;
  InstrItinClass Itinerary = NoItinerary;
  list<SchedReadWrite> SchedRW = ?;
  string Constraints = "";
  string DisableEncoding = "";
  string PostEncoderMethod = "";
  string DecoderMethod = "";
  bits<64> TSFlags = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string AsmMatchConverter = "";
  string TwoOperandAliasConstraint = "";
  bit UseNamedOperandTable = 0;
  string NAME = ?;
}
class InstrInfo {
  bit isLittleEndianEncoding = 0;
  bit guessInstructionProperties = 1;
  bit decodePositionallyEncodedOperands = 0;
  bit noNamedPositionallyEncodedOperands = 0;
  string NAME = ?;
}
class InstrItinClass {
  string NAME = ?;
}
class InstrItinData<InstrItinClass InstrItinData:Class = ?, list<InstrStage> InstrItinData:stages = ?, list<int> InstrItinData:operandcycles = [], list<Bypass> InstrItinData:bypasses = [], int InstrItinData:uops = 1> {
  InstrItinClass TheClass = InstrItinData:Class;
  int NumMicroOps = InstrItinData:uops;
  list<InstrStage> Stages = InstrItinData:stages;
  list<int> OperandCycles = InstrItinData:operandcycles;
  list<Bypass> Bypasses = InstrItinData:bypasses;
  string NAME = ?;
}
class InstrMapping {
  string FilterClass = ?;
  list<string> RowFields = [];
  list<string> ColFields = [];
  list<string> KeyCol = [];
  list<list<string>> ValueCols = [];
  string NAME = ?;
}
class InstrStage<int InstrStage:cycles = ?, list<FuncUnit> InstrStage:units = ?, int InstrStage:timeinc = -1, ReservationKind InstrStage:kind = Required> {
  int Cycles = InstrStage:cycles;
  list<FuncUnit> Units = InstrStage:units;
  int TimeInc = InstrStage:timeinc;
  int Kind = InstrStage:kind.Value;
  string NAME = ?;
}
class Instruction {
  string Namespace = "";
  dag OutOperandList = ?;
  dag InOperandList = ?;
  string AsmString = "";
  list<dag> Pattern = ?;
  list<Register> Uses = [];
  list<Register> Defs = [];
  list<Predicate> Predicates = [];
  int Size = 0;
  string DecoderNamespace = "";
  int CodeSize = 0;
  int AddedComplexity = 0;
  bit isReturn = 0;
  bit isBranch = 0;
  bit isIndirectBranch = 0;
  bit isCompare = 0;
  bit isMoveImm = 0;
  bit isBitcast = 0;
  bit isSelect = 0;
  bit isBarrier = 0;
  bit isCall = 0;
  bit canFoldAsLoad = 0;
  bit mayLoad = ?;
  bit mayStore = ?;
  bit isConvertibleToThreeAddress = 0;
  bit isCommutable = 0;
  bit isTerminator = 0;
  bit isReMaterializable = 0;
  bit isPredicable = 0;
  bit hasDelaySlot = 0;
  bit usesCustomInserter = 0;
  bit hasPostISelHook = 0;
  bit hasCtrlDep = 0;
  bit isNotDuplicable = 0;
  bit isConvergent = 0;
  bit isAsCheapAsAMove = 0;
  bit hasExtraSrcRegAllocReq = 0;
  bit hasExtraDefRegAllocReq = 0;
  bit isRegSequence = 0;
  bit isPseudo = 0;
  bit isExtractSubreg = 0;
  bit isInsertSubreg = 0;
  bit hasSideEffects = ?;
  bit isCodeGenOnly = 0;
  bit isAsmParserOnly = 0;
  InstrItinClass Itinerary = NoItinerary;
  list<SchedReadWrite> SchedRW = ?;
  string Constraints = "";
  string DisableEncoding = "";
  string PostEncoderMethod = "";
  string DecoderMethod = "";
  bits<64> TSFlags = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string AsmMatchConverter = "";
  string TwoOperandAliasConstraint = "";
  bit UseNamedOperandTable = 0;
  string NAME = ?;
}
class Intrinsic<list<LLVMType> Intrinsic:ret_types = ?, list<LLVMType> Intrinsic:param_types = [], list<IntrinsicProperty> Intrinsic:properties = [], string Intrinsic:name = ""> {	// SDPatternOperator
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "";
  list<LLVMType> RetTypes = Intrinsic:ret_types;
  list<LLVMType> ParamTypes = Intrinsic:param_types;
  list<IntrinsicProperty> Properties = Intrinsic:properties;
  bit isTarget = 0;
  string NAME = ?;
}
class IntrinsicProperty {
  string NAME = ?;
}
class ItinRW<list<SchedReadWrite> ItinRW:rw = ?, list<InstrItinClass> ItinRW:iic = ?> {
  list<InstrItinClass> MatchedItinClasses = ItinRW:iic;
  list<SchedReadWrite> OperandReadWrites = ItinRW:rw;
  SchedMachineModel SchedModel = ?;
  string NAME = ?;
}
class LLVMAnyPointerType<LLVMType LLVMAnyPointerType:elty = ?> {	// LLVMType
  ValueType VT = iPTRAny;
  LLVMType ElTy = LLVMAnyPointerType:elty;
  string NAME = ?;
}
class LLVMExtendedType<int LLVMExtendedType:num = ?> {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = LLVMExtendedType:num;
  string NAME = ?;
}
class LLVMHalfElementsVectorType<int LLVMHalfElementsVectorType:num = ?> {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = LLVMHalfElementsVectorType:num;
  string NAME = ?;
}
class LLVMMatchType<int LLVMMatchType:num = ?> {	// LLVMType
  ValueType VT = OtherVT;
  int Number = LLVMMatchType:num;
  string NAME = ?;
}
class LLVMPointerTo<int LLVMPointerTo:num = ?> {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = LLVMPointerTo:num;
  string NAME = ?;
}
class LLVMPointerType<LLVMType LLVMPointerType:elty = ?> {	// LLVMType LLVMQualPointerType
  ValueType VT = iPTR;
  LLVMType ElTy = LLVMPointerType:elty;
  int AddrSpace = 0;
  string NAME = ?;
}
class LLVMQualPointerType<LLVMType LLVMQualPointerType:elty = ?, int LLVMQualPointerType:addrspace = ?> {	// LLVMType
  ValueType VT = iPTR;
  LLVMType ElTy = LLVMQualPointerType:elty;
  int AddrSpace = LLVMQualPointerType:addrspace;
  string NAME = ?;
}
class LLVMTruncatedType<int LLVMTruncatedType:num = ?> {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = LLVMTruncatedType:num;
  string NAME = ?;
}
class LLVMType<ValueType LLVMType:vt = ?> {
  ValueType VT = LLVMType:vt;
  string NAME = ?;
}
class LLVMVectorOfPointersToElt<int LLVMVectorOfPointersToElt:num = ?> {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = LLVMVectorOfPointersToElt:num;
  string NAME = ?;
}
class LLVMVectorSameWidth<int LLVMVectorSameWidth:num = ?, LLVMType LLVMVectorSameWidth:elty = ?> {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = LLVMVectorSameWidth:num;
  ValueType ElTy = LLVMVectorSameWidth:elty.VT;
  string NAME = ?;
}
class MOV<bits<8> MOV:opcode = { ?, ?, ?, ?, ?, ?, ?, ? }, string MOV:opstr = ?, dag MOV:ins = ?, list<dag> MOV:pattern = ?> {	// Instruction InstTriCore T32 RLC
  field bits<32> Inst = { d{3}, d{2}, d{1}, d{0}, const16{15}, const16{14}, 1, const16{12}, const16{11}, const16{10}, const16{9}, 0, imm{15}, imm{14}, imm{13}, imm{12}, dst{3}, dst{2}, dst{1}, dst{0}, imm{11}, imm{10}, imm{9}, imm{8}, imm{7}, imm{6}, imm{5}, imm{4}, imm{3}, imm{2}, imm{1}, imm{0} };
  string Namespace = "TriCore";
  dag OutOperandList = (outs DataRegs:$dst);
  dag InOperandList = MOV:ins;
  string AsmString = !strconcat(MOV:opstr, " $dst, $imm");
  list<dag> Pattern = MOV:pattern;
  list<Register> Uses = [];
  list<Register> Defs = [];
  list<Predicate> Predicates = [];
  int Size = 4;
  string DecoderNamespace = "";
  int CodeSize = 0;
  int AddedComplexity = 0;
  bit isReturn = 0;
  bit isBranch = 0;
  bit isIndirectBranch = 0;
  bit isCompare = 0;
  bit isMoveImm = 0;
  bit isBitcast = 0;
  bit isSelect = 0;
  bit isBarrier = 0;
  bit isCall = 0;
  bit canFoldAsLoad = 0;
  bit mayLoad = ?;
  bit mayStore = ?;
  bit isConvertibleToThreeAddress = 0;
  bit isCommutable = 0;
  bit isTerminator = 0;
  bit isReMaterializable = 0;
  bit isPredicable = 0;
  bit hasDelaySlot = 0;
  bit usesCustomInserter = 0;
  bit hasPostISelHook = 0;
  bit hasCtrlDep = 0;
  bit isNotDuplicable = 0;
  bit isConvergent = 0;
  bit isAsCheapAsAMove = 0;
  bit hasExtraSrcRegAllocReq = 0;
  bit hasExtraDefRegAllocReq = 0;
  bit isRegSequence = 0;
  bit isPseudo = 0;
  bit isExtractSubreg = 0;
  bit isInsertSubreg = 0;
  bit hasSideEffects = ?;
  bit isCodeGenOnly = 0;
  bit isAsmParserOnly = 0;
  InstrItinClass Itinerary = NoItinerary;
  list<SchedReadWrite> SchedRW = ?;
  string Constraints = "";
  string DisableEncoding = "";
  string PostEncoderMethod = "";
  string DecoderMethod = "";
  bits<64> TSFlags = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string AsmMatchConverter = "";
  string TwoOperandAliasConstraint = "";
  bit UseNamedOperandTable = 0;
  bits<4> s1 = { ?, ?, ?, ? };
  bits<16> const16 = { ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? };
  bits<4> d = { ?, ?, ?, ? };
  bits<4> dst = { ?, ?, ?, ? };
  bits<16> imm = { ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? };
  string NAME = ?;
}
class MSBuiltin<string MSBuiltin:name = ?> {
  string MSBuiltinName = MSBuiltin:name;
  string NAME = ?;
}
class MnemonicAlias<string MnemonicAlias:From = ?, string MnemonicAlias:To = ?, string MnemonicAlias:VariantName = ""> {
  string FromMnemonic = MnemonicAlias:From;
  string ToMnemonic = MnemonicAlias:To;
  string AsmVariantName = MnemonicAlias:VariantName;
  list<Predicate> Predicates = [];
  string NAME = ?;
}
class Neon_1Arg_Intrinsic {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [anonymous_81];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class Neon_1Arg_Narrow_Intrinsic {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [anonymous_82];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class Neon_2Arg_Intrinsic {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [anonymous_83, anonymous_84];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class Neon_2Arg_Long_Intrinsic {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [anonymous_87, anonymous_88];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class Neon_2Arg_Narrow_Intrinsic {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [anonymous_85, anonymous_86];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class Neon_3Arg_Intrinsic {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [anonymous_89, anonymous_90, anonymous_91];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class Neon_3Arg_Long_Intrinsic {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [anonymous_92, anonymous_93, anonymous_94];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class Neon_Compare_Intrinsic {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [llvm_anyvector_ty, anonymous_95];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class Neon_CvtFPToFx_Intrinsic {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_anyint_ty];
  list<LLVMType> ParamTypes = [llvm_anyfloat_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class Neon_CvtFPtoInt_1Arg_Intrinsic {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [llvm_anyvector_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class Neon_CvtFxToFP_Intrinsic {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_anyfloat_ty];
  list<LLVMType> ParamTypes = [llvm_anyint_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class Neon_Tbl2Arg_Intrinsic {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_v8i8_ty];
  list<LLVMType> ParamTypes = [llvm_v8i8_ty, llvm_v8i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class Neon_Tbl3Arg_Intrinsic {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_v8i8_ty];
  list<LLVMType> ParamTypes = [llvm_v8i8_ty, llvm_v8i8_ty, llvm_v8i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class Neon_Tbl4Arg_Intrinsic {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_v8i8_ty];
  list<LLVMType> ParamTypes = [llvm_v8i8_ty, llvm_v8i8_ty, llvm_v8i8_ty, llvm_v8i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class Neon_Tbl5Arg_Intrinsic {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_v8i8_ty];
  list<LLVMType> ParamTypes = [llvm_v8i8_ty, llvm_v8i8_ty, llvm_v8i8_ty, llvm_v8i8_ty, llvm_v8i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class Neon_Tbl6Arg_Intrinsic {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_v8i8_ty];
  list<LLVMType> ParamTypes = [llvm_v8i8_ty, llvm_v8i8_ty, llvm_v8i8_ty, llvm_v8i8_ty, llvm_v8i8_ty, llvm_v8i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class NoCapture<int NoCapture:argNo = ?> {	// IntrinsicProperty
  int ArgNo = NoCapture:argNo;
  string NAME = ?;
}
class Operand<ValueType Operand:ty = ?> {	// DAGOperand
  ValueType Type = Operand:ty;
  string PrintMethod = "printOperand";
  string EncoderMethod = "";
  string DecoderMethod = "";
  string OperandType = "OPERAND_UNKNOWN";
  dag MIOperandInfo = (ops);
  string MCOperandPredicate = ?;
  AsmOperandClass ParserMatchClass = ImmAsmOperand;
  string NAME = ?;
}
class OperandWithDefaultOps<ValueType OperandWithDefaultOps:ty = ?, dag OperandWithDefaultOps:defaultops = ?> {	// DAGOperand Operand
  ValueType Type = OperandWithDefaultOps:ty;
  string PrintMethod = "printOperand";
  string EncoderMethod = "";
  string DecoderMethod = "";
  string OperandType = "OPERAND_UNKNOWN";
  dag MIOperandInfo = (ops);
  string MCOperandPredicate = ?;
  AsmOperandClass ParserMatchClass = ImmAsmOperand;
  dag DefaultOps = OperandWithDefaultOps:defaultops;
  string NAME = ?;
}
class OptionalDefOperand<ValueType OptionalDefOperand:ty = ?, dag OptionalDefOperand:OpTypes = ?, dag OptionalDefOperand:defaultops = ?> {	// DAGOperand Operand OperandWithDefaultOps
  ValueType Type = OptionalDefOperand:ty;
  string PrintMethod = "printOperand";
  string EncoderMethod = "";
  string DecoderMethod = "";
  string OperandType = "OPERAND_UNKNOWN";
  dag MIOperandInfo = OptionalDefOperand:OpTypes;
  string MCOperandPredicate = ?;
  AsmOperandClass ParserMatchClass = ImmAsmOperand;
  dag DefaultOps = OptionalDefOperand:defaultops;
  string NAME = ?;
}
class OutPatFrag<dag OutPatFrag:ops = ?, dag OutPatFrag:frag = ?> {	// SDPatternOperator PatFrag
  dag Operands = OutPatFrag:ops;
  dag Fragment = OutPatFrag:frag;
  string PredicateCode = "";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = ?;
}
class PTXReadSpecialRegisterIntrinsic_r32<string PTXReadSpecialRegisterIntrinsic_r32:name = ?> {	// SDPatternOperator Intrinsic GCCBuiltin
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string GCCBuiltinName = PTXReadSpecialRegisterIntrinsic_r32:name;
  string NAME = ?;
}
class PTXReadSpecialRegisterIntrinsic_r64<string PTXReadSpecialRegisterIntrinsic_r64:name = ?> {	// SDPatternOperator Intrinsic GCCBuiltin
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string GCCBuiltinName = PTXReadSpecialRegisterIntrinsic_r64:name;
  string NAME = ?;
}
class Pat<dag Pat:pattern = ?, dag Pat:result = ?> {	// Pattern
  dag PatternToMatch = Pat:pattern;
  list<dag> ResultInstrs = [Pat:result];
  list<Predicate> Predicates = [];
  int AddedComplexity = 0;
  string NAME = ?;
}
class PatFrag<dag PatFrag:ops = ?, dag PatFrag:frag = ?, string PatFrag:pred = "", SDNodeXForm PatFrag:xform = NOOP_SDNodeXForm> {	// SDPatternOperator
  dag Operands = PatFrag:ops;
  dag Fragment = PatFrag:frag;
  string PredicateCode = PatFrag:pred;
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = PatFrag:xform;
  string NAME = ?;
}
class PatLeaf<dag PatLeaf:frag = ?, string PatLeaf:pred = "", SDNodeXForm PatLeaf:xform = NOOP_SDNodeXForm> {	// SDPatternOperator PatFrag
  dag Operands = (ops);
  dag Fragment = PatLeaf:frag;
  string PredicateCode = PatLeaf:pred;
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = PatLeaf:xform;
  string NAME = ?;
}
class PatPred {
  string NAME = ?;
}
class Pattern<dag Pattern:patternToMatch = ?, list<dag> Pattern:resultInstrs = ?> {
  dag PatternToMatch = Pattern:patternToMatch;
  list<dag> ResultInstrs = Pattern:resultInstrs;
  list<Predicate> Predicates = [];
  int AddedComplexity = 0;
  string NAME = ?;
}
class PointerLikeRegClass<int PointerLikeRegClass:Kind = ?> {
  int RegClassKind = PointerLikeRegClass:Kind;
  string NAME = ?;
}
class PowerPC_QPX_FFFF_Intrinsic<string PowerPC_QPX_FFFF_Intrinsic:GCCIntSuffix = ?> {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_QPX_Intrinsic
  string GCCBuiltinName = !strconcat("__builtin_qpx_", PowerPC_QPX_FFFF_Intrinsic:GCCIntSuffix);
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4f64_ty];
  list<LLVMType> ParamTypes = [llvm_v4f64_ty, llvm_v4f64_ty, llvm_v4f64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class PowerPC_QPX_FFF_Intrinsic<string PowerPC_QPX_FFF_Intrinsic:GCCIntSuffix = ?> {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_QPX_Intrinsic
  string GCCBuiltinName = !strconcat("__builtin_qpx_", PowerPC_QPX_FFF_Intrinsic:GCCIntSuffix);
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4f64_ty];
  list<LLVMType> ParamTypes = [llvm_v4f64_ty, llvm_v4f64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class PowerPC_QPX_FF_Intrinsic<string PowerPC_QPX_FF_Intrinsic:GCCIntSuffix = ?> {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_QPX_Intrinsic
  string GCCBuiltinName = !strconcat("__builtin_qpx_", PowerPC_QPX_FF_Intrinsic:GCCIntSuffix);
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4f64_ty];
  list<LLVMType> ParamTypes = [llvm_v4f64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class PowerPC_QPX_Intrinsic<string PowerPC_QPX_Intrinsic:GCCIntSuffix = ?, list<LLVMType> PowerPC_QPX_Intrinsic:ret_types = ?, list<LLVMType> PowerPC_QPX_Intrinsic:param_types = ?, list<IntrinsicProperty> PowerPC_QPX_Intrinsic:properties = ?> {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = !strconcat("__builtin_qpx_", PowerPC_QPX_Intrinsic:GCCIntSuffix);
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = PowerPC_QPX_Intrinsic:ret_types;
  list<LLVMType> ParamTypes = PowerPC_QPX_Intrinsic:param_types;
  list<IntrinsicProperty> Properties = PowerPC_QPX_Intrinsic:properties;
  bit isTarget = 0;
  string NAME = ?;
}
class PowerPC_QPX_LoadPerm_Intrinsic<string PowerPC_QPX_LoadPerm_Intrinsic:GCCIntSuffix = ?> {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_QPX_Intrinsic
  string GCCBuiltinName = !strconcat("__builtin_qpx_", PowerPC_QPX_LoadPerm_Intrinsic:GCCIntSuffix);
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4f64_ty];
  list<LLVMType> ParamTypes = [llvm_ptr_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class PowerPC_QPX_Load_Intrinsic<string PowerPC_QPX_Load_Intrinsic:GCCIntSuffix = ?> {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_QPX_Intrinsic
  string GCCBuiltinName = !strconcat("__builtin_qpx_", PowerPC_QPX_Load_Intrinsic:GCCIntSuffix);
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4f64_ty];
  list<LLVMType> ParamTypes = [llvm_ptr_ty];
  list<IntrinsicProperty> Properties = [IntrReadArgMem];
  bit isTarget = 0;
  string NAME = ?;
}
class PowerPC_QPX_Store_Intrinsic<string PowerPC_QPX_Store_Intrinsic:GCCIntSuffix = ?> {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_QPX_Intrinsic
  string GCCBuiltinName = !strconcat("__builtin_qpx_", PowerPC_QPX_Store_Intrinsic:GCCIntSuffix);
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_v4f64_ty, llvm_ptr_ty];
  list<IntrinsicProperty> Properties = [IntrReadWriteArgMem];
  bit isTarget = 0;
  string NAME = ?;
}
class PowerPC_VSX_Intrinsic<string PowerPC_VSX_Intrinsic:GCCIntSuffix = ?, list<LLVMType> PowerPC_VSX_Intrinsic:ret_types = ?, list<LLVMType> PowerPC_VSX_Intrinsic:param_types = ?, list<IntrinsicProperty> PowerPC_VSX_Intrinsic:properties = ?> {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = !strconcat("__builtin_vsx_", PowerPC_VSX_Intrinsic:GCCIntSuffix);
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = PowerPC_VSX_Intrinsic:ret_types;
  list<LLVMType> ParamTypes = PowerPC_VSX_Intrinsic:param_types;
  list<IntrinsicProperty> Properties = PowerPC_VSX_Intrinsic:properties;
  bit isTarget = 0;
  string NAME = ?;
}
class PowerPC_VSX_Sca_DDD_Intrinsic<string PowerPC_VSX_Sca_DDD_Intrinsic:GCCIntSuffix = ?> {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_VSX_Intrinsic
  string GCCBuiltinName = !strconcat("__builtin_vsx_", PowerPC_VSX_Sca_DDD_Intrinsic:GCCIntSuffix);
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_double_ty];
  list<LLVMType> ParamTypes = [llvm_double_ty, llvm_double_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class PowerPC_VSX_Vec_DDD_Intrinsic<string PowerPC_VSX_Vec_DDD_Intrinsic:GCCIntSuffix = ?> {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_VSX_Intrinsic
  string GCCBuiltinName = !strconcat("__builtin_vsx_", PowerPC_VSX_Vec_DDD_Intrinsic:GCCIntSuffix);
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v2f64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_v2f64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class PowerPC_VSX_Vec_FFF_Intrinsic<string PowerPC_VSX_Vec_FFF_Intrinsic:GCCIntSuffix = ?> {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_VSX_Intrinsic
  string GCCBuiltinName = !strconcat("__builtin_vsx_", PowerPC_VSX_Vec_FFF_Intrinsic:GCCIntSuffix);
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_v4f32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class PowerPC_Vec_BBB_Intrinsic<string PowerPC_Vec_BBB_Intrinsic:GCCIntSuffix = ?> {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_Vec_Intrinsic
  string GCCBuiltinName = !strconcat("__builtin_altivec_", PowerPC_Vec_BBB_Intrinsic:GCCIntSuffix);
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class PowerPC_Vec_DDD_Intrinsic<string PowerPC_Vec_DDD_Intrinsic:GCCIntSuffix = ?> {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_Vec_Intrinsic
  string GCCBuiltinName = !strconcat("__builtin_altivec_", PowerPC_Vec_DDD_Intrinsic:GCCIntSuffix);
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_v2i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class PowerPC_Vec_FFF_Intrinsic<string PowerPC_Vec_FFF_Intrinsic:GCCIntSuffix = ?> {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_Vec_Intrinsic
  string GCCBuiltinName = !strconcat("__builtin_altivec_", PowerPC_Vec_FFF_Intrinsic:GCCIntSuffix);
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_v4f32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class PowerPC_Vec_FF_Intrinsic<string PowerPC_Vec_FF_Intrinsic:GCCIntSuffix = ?> {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_Vec_Intrinsic
  string GCCBuiltinName = !strconcat("__builtin_altivec_", PowerPC_Vec_FF_Intrinsic:GCCIntSuffix);
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class PowerPC_Vec_HHH_Intrinsic<string PowerPC_Vec_HHH_Intrinsic:GCCIntSuffix = ?> {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_Vec_Intrinsic
  string GCCBuiltinName = !strconcat("__builtin_altivec_", PowerPC_Vec_HHH_Intrinsic:GCCIntSuffix);
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class PowerPC_Vec_Intrinsic<string PowerPC_Vec_Intrinsic:GCCIntSuffix = ?, list<LLVMType> PowerPC_Vec_Intrinsic:ret_types = ?, list<LLVMType> PowerPC_Vec_Intrinsic:param_types = ?, list<IntrinsicProperty> PowerPC_Vec_Intrinsic:properties = ?> {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = !strconcat("__builtin_altivec_", PowerPC_Vec_Intrinsic:GCCIntSuffix);
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = PowerPC_Vec_Intrinsic:ret_types;
  list<LLVMType> ParamTypes = PowerPC_Vec_Intrinsic:param_types;
  list<IntrinsicProperty> Properties = PowerPC_Vec_Intrinsic:properties;
  bit isTarget = 0;
  string NAME = ?;
}
class PowerPC_Vec_QQQ_Intrinsic<string PowerPC_Vec_QQQ_Intrinsic:GCCIntSuffix = ?> {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_Vec_Intrinsic
  string GCCBuiltinName = !strconcat("__builtin_altivec_", PowerPC_Vec_QQQ_Intrinsic:GCCIntSuffix);
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v1i128_ty];
  list<LLVMType> ParamTypes = [llvm_v1i128_ty, llvm_v1i128_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class PowerPC_Vec_WWW_Intrinsic<string PowerPC_Vec_WWW_Intrinsic:GCCIntSuffix = ?> {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_Vec_Intrinsic
  string GCCBuiltinName = !strconcat("__builtin_altivec_", PowerPC_Vec_WWW_Intrinsic:GCCIntSuffix);
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class Predicate<string Predicate:cond = ?> {
  string CondString = Predicate:cond;
  bit AssemblerMatcherPredicate = 0;
  string AssemblerCondString = "";
  string PredicateName = "";
  string NAME = ?;
}
class PredicateOp {
  string NAME = ?;
}
class PredicateOperand<ValueType PredicateOperand:ty = ?, dag PredicateOperand:OpTypes = ?, dag PredicateOperand:AlwaysVal = ?> {	// DAGOperand Operand OperandWithDefaultOps PredicateOp
  ValueType Type = PredicateOperand:ty;
  string PrintMethod = "printOperand";
  string EncoderMethod = "";
  string DecoderMethod = "";
  string OperandType = "OPERAND_UNKNOWN";
  dag MIOperandInfo = PredicateOperand:OpTypes;
  string MCOperandPredicate = ?;
  AsmOperandClass ParserMatchClass = ImmAsmOperand;
  dag DefaultOps = PredicateOperand:AlwaysVal;
  string NAME = ?;
}
class PredicateProlog<string PredicateProlog:c = ?> {
  string Code = PredicateProlog:c;
  string NAME = ?;
}
class Proc<string Proc:Name = ?, list<SubtargetFeature> Proc:Features = ?> {	// Processor
  string Name = Proc:Name;
  SchedMachineModel SchedModel = NoSchedModel;
  ProcessorItineraries ProcItin = NoItineraries;
  list<SubtargetFeature> Features = Proc:Features;
  string NAME = ?;
}
class ProcReadAdvance<int ProcReadAdvance:cycles = ?, list<SchedWrite> ProcReadAdvance:writes = []> {
  int Cycles = ProcReadAdvance:cycles;
  list<SchedWrite> ValidWrites = ProcReadAdvance:writes;
  bit Unsupported = 0;
  SchedMachineModel SchedModel = ?;
  string NAME = ?;
}
class ProcResGroup<list<ProcResource> ProcResGroup:resources = ?> {	// ProcResourceKind
  list<ProcResource> Resources = ProcResGroup:resources;
  SchedMachineModel SchedModel = ?;
  int BufferSize = -1;
  string NAME = ?;
}
class ProcResource<int ProcResource:num = ?> {	// ProcResourceKind ProcResourceUnits
  ProcResourceKind Kind = EponymousProcResourceKind;
  int NumUnits = ProcResource:num;
  ProcResourceKind Super = ?;
  int BufferSize = -1;
  SchedMachineModel SchedModel = ?;
  string NAME = ?;
}
class ProcResourceKind {
  string NAME = ?;
}
class ProcResourceUnits<ProcResourceKind ProcResourceUnits:kind = ?, int ProcResourceUnits:num = ?> {
  ProcResourceKind Kind = ProcResourceUnits:kind;
  int NumUnits = ProcResourceUnits:num;
  ProcResourceKind Super = ?;
  int BufferSize = -1;
  SchedMachineModel SchedModel = ?;
  string NAME = ?;
}
class ProcWriteResources<list<ProcResourceKind> ProcWriteResources:resources = ?> {
  list<ProcResourceKind> ProcResources = ProcWriteResources:resources;
  list<int> ResourceCycles = [];
  int Latency = 1;
  int NumMicroOps = 1;
  bit BeginGroup = 0;
  bit EndGroup = 0;
  bit Unsupported = 0;
  SchedMachineModel SchedModel = ?;
  string NAME = ?;
}
class Processor<string Processor:n = ?, ProcessorItineraries Processor:pi = ?, list<SubtargetFeature> Processor:f = ?> {
  string Name = Processor:n;
  SchedMachineModel SchedModel = NoSchedModel;
  ProcessorItineraries ProcItin = Processor:pi;
  list<SubtargetFeature> Features = Processor:f;
  string NAME = ?;
}
class ProcessorItineraries<list<FuncUnit> ProcessorItineraries:fu = ?, list<Bypass> ProcessorItineraries:bp = ?, list<InstrItinData> ProcessorItineraries:iid = ?> {
  list<FuncUnit> FU = ProcessorItineraries:fu;
  list<Bypass> BP = ProcessorItineraries:bp;
  list<InstrItinData> IID = ProcessorItineraries:iid;
  string NAME = ?;
}
class ProcessorModel<string ProcessorModel:n = ?, SchedMachineModel ProcessorModel:m = ?, list<SubtargetFeature> ProcessorModel:f = ?> {	// Processor
  string Name = ProcessorModel:n;
  SchedMachineModel SchedModel = ProcessorModel:m;
  ProcessorItineraries ProcItin = NoItineraries;
  list<SubtargetFeature> Features = ProcessorModel:f;
  string NAME = ?;
}
class PseudoInstExpansion<dag PseudoInstExpansion:Result = ?> {
  dag ResultInst = PseudoInstExpansion:Result;
  bit isPseudo = 1;
  string NAME = ?;
}
class R600ReadPreloadRegisterIntrinsic<string R600ReadPreloadRegisterIntrinsic:name = ?> {	// SDPatternOperator Intrinsic GCCBuiltin
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "r600";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string GCCBuiltinName = R600ReadPreloadRegisterIntrinsic:name;
  string NAME = ?;
}
class RC<bits<8> RC:op1 = { ?, ?, ?, ?, ?, ?, ?, ? }, bits<7> RC:op2 = { ?, ?, ?, ?, ?, ?, ? }, dag RC:outs = ?, dag RC:ins = ?, string RC:asmstr = ?, list<dag> RC:pattern = ?> {	// Instruction InstTriCore T32
  field bits<32> Inst = { d{3}, d{2}, d{1}, d{0}, RC:op2{6}, RC:op2{5}, RC:op2{4}, RC:op2{3}, RC:op2{2}, RC:op2{1}, RC:op2{0}, const9{8}, const9{7}, const9{6}, const9{5}, const9{4}, const9{3}, const9{2}, const9{1}, const9{0}, s1{3}, s1{2}, s1{1}, s1{0}, RC:op1{7}, RC:op1{6}, RC:op1{5}, RC:op1{4}, RC:op1{3}, RC:op1{2}, RC:op1{1}, RC:op1{0} };
  string Namespace = "TriCore";
  dag OutOperandList = RC:outs;
  dag InOperandList = RC:ins;
  string AsmString = RC:asmstr;
  list<dag> Pattern = RC:pattern;
  list<Register> Uses = [];
  list<Register> Defs = [];
  list<Predicate> Predicates = [];
  int Size = 4;
  string DecoderNamespace = "";
  int CodeSize = 0;
  int AddedComplexity = 0;
  bit isReturn = 0;
  bit isBranch = 0;
  bit isIndirectBranch = 0;
  bit isCompare = 0;
  bit isMoveImm = 0;
  bit isBitcast = 0;
  bit isSelect = 0;
  bit isBarrier = 0;
  bit isCall = 0;
  bit canFoldAsLoad = 0;
  bit mayLoad = ?;
  bit mayStore = ?;
  bit isConvertibleToThreeAddress = 0;
  bit isCommutable = 0;
  bit isTerminator = 0;
  bit isReMaterializable = 0;
  bit isPredicable = 0;
  bit hasDelaySlot = 0;
  bit usesCustomInserter = 0;
  bit hasPostISelHook = 0;
  bit hasCtrlDep = 0;
  bit isNotDuplicable = 0;
  bit isConvergent = 0;
  bit isAsCheapAsAMove = 0;
  bit hasExtraSrcRegAllocReq = 0;
  bit hasExtraDefRegAllocReq = 0;
  bit isRegSequence = 0;
  bit isPseudo = 0;
  bit isExtractSubreg = 0;
  bit isInsertSubreg = 0;
  bit hasSideEffects = ?;
  bit isCodeGenOnly = 0;
  bit isAsmParserOnly = 0;
  InstrItinClass Itinerary = NoItinerary;
  list<SchedReadWrite> SchedRW = ?;
  string Constraints = "";
  string DisableEncoding = "";
  string PostEncoderMethod = "";
  string DecoderMethod = "";
  bits<64> TSFlags = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string AsmMatchConverter = "";
  string TwoOperandAliasConstraint = "";
  bit UseNamedOperandTable = 0;
  bits<4> s1 = { ?, ?, ?, ? };
  bits<4> d = { ?, ?, ?, ? };
  bits<9> const9 = { ?, ?, ?, ?, ?, ?, ?, ?, ? };
  string NAME = ?;
}
class RLC<bits<8> RLC:op1 = { ?, ?, ?, ?, ?, ?, ?, ? }, dag RLC:outs = ?, dag RLC:ins = ?, string RLC:asmstr = ?, list<dag> RLC:pattern = ?> {	// Instruction InstTriCore T32
  field bits<32> Inst = { d{3}, d{2}, d{1}, d{0}, const16{15}, const16{14}, const16{13}, const16{12}, const16{11}, const16{10}, const16{9}, const16{8}, const16{7}, const16{6}, const16{5}, const16{4}, const16{3}, const16{2}, const16{1}, const16{0}, s1{3}, s1{2}, s1{1}, s1{0}, RLC:op1{7}, RLC:op1{6}, RLC:op1{5}, RLC:op1{4}, RLC:op1{3}, RLC:op1{2}, RLC:op1{1}, RLC:op1{0} };
  string Namespace = "TriCore";
  dag OutOperandList = RLC:outs;
  dag InOperandList = RLC:ins;
  string AsmString = RLC:asmstr;
  list<dag> Pattern = RLC:pattern;
  list<Register> Uses = [];
  list<Register> Defs = [];
  list<Predicate> Predicates = [];
  int Size = 4;
  string DecoderNamespace = "";
  int CodeSize = 0;
  int AddedComplexity = 0;
  bit isReturn = 0;
  bit isBranch = 0;
  bit isIndirectBranch = 0;
  bit isCompare = 0;
  bit isMoveImm = 0;
  bit isBitcast = 0;
  bit isSelect = 0;
  bit isBarrier = 0;
  bit isCall = 0;
  bit canFoldAsLoad = 0;
  bit mayLoad = ?;
  bit mayStore = ?;
  bit isConvertibleToThreeAddress = 0;
  bit isCommutable = 0;
  bit isTerminator = 0;
  bit isReMaterializable = 0;
  bit isPredicable = 0;
  bit hasDelaySlot = 0;
  bit usesCustomInserter = 0;
  bit hasPostISelHook = 0;
  bit hasCtrlDep = 0;
  bit isNotDuplicable = 0;
  bit isConvergent = 0;
  bit isAsCheapAsAMove = 0;
  bit hasExtraSrcRegAllocReq = 0;
  bit hasExtraDefRegAllocReq = 0;
  bit isRegSequence = 0;
  bit isPseudo = 0;
  bit isExtractSubreg = 0;
  bit isInsertSubreg = 0;
  bit hasSideEffects = ?;
  bit isCodeGenOnly = 0;
  bit isAsmParserOnly = 0;
  InstrItinClass Itinerary = NoItinerary;
  list<SchedReadWrite> SchedRW = ?;
  string Constraints = "";
  string DisableEncoding = "";
  string PostEncoderMethod = "";
  string DecoderMethod = "";
  bits<64> TSFlags = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string AsmMatchConverter = "";
  string TwoOperandAliasConstraint = "";
  bit UseNamedOperandTable = 0;
  bits<4> s1 = { ?, ?, ?, ? };
  bits<16> const16 = { ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? };
  bits<4> d = { ?, ?, ?, ? };
  string NAME = ?;
}
class RR<bits<8> RR:op1 = { ?, ?, ?, ?, ?, ?, ?, ? }, bits<8> RR:op2 = { ?, ?, ?, ?, ?, ?, ?, ? }, dag RR:outs = ?, dag RR:ins = ?, string RR:asmstr = ?, list<dag> RR:pattern = ?> {	// Instruction InstTriCore T32
  field bits<32> Inst = { d{3}, d{2}, d{1}, d{0}, RR:op2{7}, RR:op2{6}, RR:op2{5}, RR:op2{4}, RR:op2{3}, RR:op2{2}, RR:op2{1}, RR:op2{0}, ?, ?, n{1}, n{0}, s2{3}, s2{2}, s2{1}, s2{0}, s1{3}, s1{2}, s1{1}, s1{0}, RR:op1{7}, RR:op1{6}, RR:op1{5}, RR:op1{4}, RR:op1{3}, RR:op1{2}, RR:op1{1}, RR:op1{0} };
  string Namespace = "TriCore";
  dag OutOperandList = RR:outs;
  dag InOperandList = RR:ins;
  string AsmString = RR:asmstr;
  list<dag> Pattern = RR:pattern;
  list<Register> Uses = [];
  list<Register> Defs = [];
  list<Predicate> Predicates = [];
  int Size = 4;
  string DecoderNamespace = "";
  int CodeSize = 0;
  int AddedComplexity = 0;
  bit isReturn = 0;
  bit isBranch = 0;
  bit isIndirectBranch = 0;
  bit isCompare = 0;
  bit isMoveImm = 0;
  bit isBitcast = 0;
  bit isSelect = 0;
  bit isBarrier = 0;
  bit isCall = 0;
  bit canFoldAsLoad = 0;
  bit mayLoad = ?;
  bit mayStore = ?;
  bit isConvertibleToThreeAddress = 0;
  bit isCommutable = 0;
  bit isTerminator = 0;
  bit isReMaterializable = 0;
  bit isPredicable = 0;
  bit hasDelaySlot = 0;
  bit usesCustomInserter = 0;
  bit hasPostISelHook = 0;
  bit hasCtrlDep = 0;
  bit isNotDuplicable = 0;
  bit isConvergent = 0;
  bit isAsCheapAsAMove = 0;
  bit hasExtraSrcRegAllocReq = 0;
  bit hasExtraDefRegAllocReq = 0;
  bit isRegSequence = 0;
  bit isPseudo = 0;
  bit isExtractSubreg = 0;
  bit isInsertSubreg = 0;
  bit hasSideEffects = ?;
  bit isCodeGenOnly = 0;
  bit isAsmParserOnly = 0;
  InstrItinClass Itinerary = NoItinerary;
  list<SchedReadWrite> SchedRW = ?;
  string Constraints = "";
  string DisableEncoding = "";
  string PostEncoderMethod = "";
  string DecoderMethod = "";
  bits<64> TSFlags = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string AsmMatchConverter = "";
  string TwoOperandAliasConstraint = "";
  bit UseNamedOperandTable = 0;
  bits<4> s1 = { ?, ?, ?, ? };
  bits<4> s2 = { ?, ?, ?, ? };
  bits<4> d = { ?, ?, ?, ? };
  bits<2> n = { ?, ? };
  string NAME = ?;
}
class RR2<bits<8> RR2:op1 = { ?, ?, ?, ?, ?, ?, ?, ? }, bits<12> RR2:op2 = { ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? }, dag RR2:outs = ?, dag RR2:ins = ?, string RR2:asmstr = ?, list<dag> RR2:pattern = ?> {	// Instruction InstTriCore T32
  field bits<32> Inst = { d{3}, d{2}, d{1}, d{0}, RR2:op2{11}, RR2:op2{10}, RR2:op2{9}, RR2:op2{8}, RR2:op2{7}, RR2:op2{6}, RR2:op2{5}, RR2:op2{4}, RR2:op2{3}, RR2:op2{2}, RR2:op2{1}, RR2:op2{0}, s2{3}, s2{2}, s2{1}, s2{0}, s1{3}, s1{2}, s1{1}, s1{0}, RR2:op1{7}, RR2:op1{6}, RR2:op1{5}, RR2:op1{4}, RR2:op1{3}, RR2:op1{2}, RR2:op1{1}, RR2:op1{0} };
  string Namespace = "TriCore";
  dag OutOperandList = RR2:outs;
  dag InOperandList = RR2:ins;
  string AsmString = RR2:asmstr;
  list<dag> Pattern = RR2:pattern;
  list<Register> Uses = [];
  list<Register> Defs = [];
  list<Predicate> Predicates = [];
  int Size = 4;
  string DecoderNamespace = "";
  int CodeSize = 0;
  int AddedComplexity = 0;
  bit isReturn = 0;
  bit isBranch = 0;
  bit isIndirectBranch = 0;
  bit isCompare = 0;
  bit isMoveImm = 0;
  bit isBitcast = 0;
  bit isSelect = 0;
  bit isBarrier = 0;
  bit isCall = 0;
  bit canFoldAsLoad = 0;
  bit mayLoad = ?;
  bit mayStore = ?;
  bit isConvertibleToThreeAddress = 0;
  bit isCommutable = 0;
  bit isTerminator = 0;
  bit isReMaterializable = 0;
  bit isPredicable = 0;
  bit hasDelaySlot = 0;
  bit usesCustomInserter = 0;
  bit hasPostISelHook = 0;
  bit hasCtrlDep = 0;
  bit isNotDuplicable = 0;
  bit isConvergent = 0;
  bit isAsCheapAsAMove = 0;
  bit hasExtraSrcRegAllocReq = 0;
  bit hasExtraDefRegAllocReq = 0;
  bit isRegSequence = 0;
  bit isPseudo = 0;
  bit isExtractSubreg = 0;
  bit isInsertSubreg = 0;
  bit hasSideEffects = ?;
  bit isCodeGenOnly = 0;
  bit isAsmParserOnly = 0;
  InstrItinClass Itinerary = NoItinerary;
  list<SchedReadWrite> SchedRW = ?;
  string Constraints = "";
  string DisableEncoding = "";
  string PostEncoderMethod = "";
  string DecoderMethod = "";
  bits<64> TSFlags = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string AsmMatchConverter = "";
  string TwoOperandAliasConstraint = "";
  bit UseNamedOperandTable = 0;
  bits<4> s1 = { ?, ?, ?, ? };
  bits<4> s2 = { ?, ?, ?, ? };
  bits<4> d = { ?, ?, ?, ? };
  bits<2> n = { ?, ? };
  string NAME = ?;
}
class ReadAdvance<SchedRead ReadAdvance:read = ?, int ReadAdvance:cycles = ?, list<SchedWrite> ReadAdvance:writes = []> {	// ProcReadAdvance
  int Cycles = ReadAdvance:cycles;
  list<SchedWrite> ValidWrites = ReadAdvance:writes;
  bit Unsupported = 0;
  SchedMachineModel SchedModel = ?;
  SchedRead ReadType = ReadAdvance:read;
  string NAME = ?;
}
class ReadNone<int ReadNone:argNo = ?> {	// IntrinsicProperty
  int ArgNo = ReadNone:argNo;
  string NAME = ?;
}
class ReadOnly<int ReadOnly:argNo = ?> {	// IntrinsicProperty
  int ArgNo = ReadOnly:argNo;
  string NAME = ?;
}
class RegAltNameIndex {
  string Namespace = "";
  string NAME = ?;
}
class Register<string Register:n = ?, list<string> Register:altNames = []> {
  string Namespace = "";
  string AsmName = Register:n;
  list<string> AltNames = Register:altNames;
  list<Register> Aliases = [];
  list<Register> SubRegs = [];
  list<SubRegIndex> SubRegIndices = [];
  list<RegAltNameIndex> RegAltNameIndices = [];
  list<int> DwarfNumbers = [];
  int CostPerUse = 0;
  bit CoveredBySubRegs = 0;
  bits<16> HWEncoding = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string NAME = ?;
}
class RegisterClass<string RegisterClass:namespace = ?, list<ValueType> RegisterClass:regTypes = ?, int RegisterClass:alignment = ?, dag RegisterClass:regList = ?, RegAltNameIndex RegisterClass:idx = NoRegAltName> {	// DAGOperand
  string Namespace = RegisterClass:namespace;
  list<ValueType> RegTypes = RegisterClass:regTypes;
  int Size = 0;
  int Alignment = RegisterClass:alignment;
  int CopyCost = 1;
  dag MemberList = RegisterClass:regList;
  RegAltNameIndex altNameIndex = RegisterClass:idx;
  bit isAllocatable = 1;
  list<dag> AltOrders = [];
  string AltOrderSelect = "";
  int AllocationPriority = 0;
  string NAME = ?;
}
class RegisterOperand<RegisterClass RegisterOperand:regclass = ?, string RegisterOperand:pm = "printOperand"> {	// DAGOperand
  RegisterClass RegClass = RegisterOperand:regclass;
  string PrintMethod = RegisterOperand:pm;
  AsmOperandClass ParserMatchClass = ?;
  string OperandNamespace = "MCOI";
  string OperandType = "OPERAND_REGISTER";
  string NAME = ?;
}
class RegisterTuples<list<SubRegIndex> RegisterTuples:Indices = ?, list<dag> RegisterTuples:Regs = ?> {
  list<dag> SubRegs = RegisterTuples:Regs;
  list<SubRegIndex> SubRegIndices = RegisterTuples:Indices;
  string NAME = ?;
}
class RegisterWithSubRegs<string RegisterWithSubRegs:n = ?, list<Register> RegisterWithSubRegs:subregs = ?> {	// Register
  list<string> Register:altNames = [];
  string Namespace = "";
  string AsmName = RegisterWithSubRegs:n;
  list<string> AltNames = Register:altNames;
  list<Register> Aliases = [];
  list<Register> SubRegs = RegisterWithSubRegs:subregs;
  list<SubRegIndex> SubRegIndices = [];
  list<RegAltNameIndex> RegAltNameIndices = [];
  list<int> DwarfNumbers = [];
  int CostPerUse = 0;
  bit CoveredBySubRegs = 0;
  bits<16> HWEncoding = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string NAME = ?;
}
class Requires<list<Predicate> Requires:preds = ?> {
  list<Predicate> Predicates = Requires:preds;
  string NAME = ?;
}
class ReservationKind<bits<1> ReservationKind:val = { ? }> {
  int Value = ReservationKind:val;
  string NAME = ?;
}
class SB<bits<8> SB:op1 = { ?, ?, ?, ?, ?, ?, ?, ? }, bits<4> SB:op2 = { ?, ?, ?, ? }, dag SB:outs = ?, dag SB:ins = ?, string SB:asmstr = ?, list<dag> SB:pattern = ?> {	// Instruction InstTriCore T16
  field bits<16> Inst = { SB:op2{3}, SB:op2{2}, SB:op2{1}, SB:op2{0}, s1_d{3}, s1_d{2}, s1_d{1}, s1_d{0}, SB:op1{7}, SB:op1{6}, SB:op1{5}, SB:op1{4}, SB:op1{3}, SB:op1{2}, SB:op1{1}, SB:op1{0} };
  string Namespace = "TriCore";
  dag OutOperandList = SB:outs;
  dag InOperandList = SB:ins;
  string AsmString = SB:asmstr;
  list<dag> Pattern = SB:pattern;
  list<Register> Uses = [];
  list<Register> Defs = [];
  list<Predicate> Predicates = [];
  int Size = 2;
  string DecoderNamespace = "";
  int CodeSize = 0;
  int AddedComplexity = 0;
  bit isReturn = 0;
  bit isBranch = 0;
  bit isIndirectBranch = 0;
  bit isCompare = 0;
  bit isMoveImm = 0;
  bit isBitcast = 0;
  bit isSelect = 0;
  bit isBarrier = 0;
  bit isCall = 0;
  bit canFoldAsLoad = 0;
  bit mayLoad = ?;
  bit mayStore = ?;
  bit isConvertibleToThreeAddress = 0;
  bit isCommutable = 0;
  bit isTerminator = 0;
  bit isReMaterializable = 0;
  bit isPredicable = 0;
  bit hasDelaySlot = 0;
  bit usesCustomInserter = 0;
  bit hasPostISelHook = 0;
  bit hasCtrlDep = 0;
  bit isNotDuplicable = 0;
  bit isConvergent = 0;
  bit isAsCheapAsAMove = 0;
  bit hasExtraSrcRegAllocReq = 0;
  bit hasExtraDefRegAllocReq = 0;
  bit isRegSequence = 0;
  bit isPseudo = 0;
  bit isExtractSubreg = 0;
  bit isInsertSubreg = 0;
  bit hasSideEffects = ?;
  bit isCodeGenOnly = 0;
  bit isAsmParserOnly = 0;
  InstrItinClass Itinerary = NoItinerary;
  list<SchedReadWrite> SchedRW = ?;
  string Constraints = "";
  string DisableEncoding = "";
  string PostEncoderMethod = "";
  string DecoderMethod = "";
  bits<64> TSFlags = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string AsmMatchConverter = "";
  string TwoOperandAliasConstraint = "";
  bit UseNamedOperandTable = 0;
  bits<4> s1_d = { ?, ?, ?, ? };
  string NAME = ?;
}
class SC<bits<8> SC:op1 = { ?, ?, ?, ?, ?, ?, ?, ? }, dag SC:outs = ?, dag SC:ins = ?, string SC:asmstr = ?, list<dag> SC:pattern = ?> {	// Instruction InstTriCore T16
  field bits<16> Inst = { const8{7}, const8{6}, const8{5}, const8{4}, const8{3}, const8{2}, const8{1}, const8{0}, SC:op1{7}, SC:op1{6}, SC:op1{5}, SC:op1{4}, SC:op1{3}, SC:op1{2}, SC:op1{1}, SC:op1{0} };
  string Namespace = "TriCore";
  dag OutOperandList = SC:outs;
  dag InOperandList = SC:ins;
  string AsmString = SC:asmstr;
  list<dag> Pattern = SC:pattern;
  list<Register> Uses = [];
  list<Register> Defs = [];
  list<Predicate> Predicates = [];
  int Size = 2;
  string DecoderNamespace = "";
  int CodeSize = 0;
  int AddedComplexity = 0;
  bit isReturn = 0;
  bit isBranch = 0;
  bit isIndirectBranch = 0;
  bit isCompare = 0;
  bit isMoveImm = 0;
  bit isBitcast = 0;
  bit isSelect = 0;
  bit isBarrier = 0;
  bit isCall = 0;
  bit canFoldAsLoad = 0;
  bit mayLoad = ?;
  bit mayStore = ?;
  bit isConvertibleToThreeAddress = 0;
  bit isCommutable = 0;
  bit isTerminator = 0;
  bit isReMaterializable = 0;
  bit isPredicable = 0;
  bit hasDelaySlot = 0;
  bit usesCustomInserter = 0;
  bit hasPostISelHook = 0;
  bit hasCtrlDep = 0;
  bit isNotDuplicable = 0;
  bit isConvergent = 0;
  bit isAsCheapAsAMove = 0;
  bit hasExtraSrcRegAllocReq = 0;
  bit hasExtraDefRegAllocReq = 0;
  bit isRegSequence = 0;
  bit isPseudo = 0;
  bit isExtractSubreg = 0;
  bit isInsertSubreg = 0;
  bit hasSideEffects = ?;
  bit isCodeGenOnly = 0;
  bit isAsmParserOnly = 0;
  InstrItinClass Itinerary = NoItinerary;
  list<SchedReadWrite> SchedRW = ?;
  string Constraints = "";
  string DisableEncoding = "";
  string PostEncoderMethod = "";
  string DecoderMethod = "";
  bits<64> TSFlags = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string AsmMatchConverter = "";
  string TwoOperandAliasConstraint = "";
  bit UseNamedOperandTable = 0;
  bits<8> const8 = { ?, ?, ?, ?, ?, ?, ?, ? };
  string NAME = ?;
}
class SDCallSeqEnd<list<SDTypeConstraint> SDCallSeqEnd:constraints = ?> {	// SDTypeProfile
  int NumResults = 0;
  int NumOperands = 2;
  list<SDTypeConstraint> Constraints = SDCallSeqEnd:constraints;
  string NAME = ?;
}
class SDCallSeqStart<list<SDTypeConstraint> SDCallSeqStart:constraints = ?> {	// SDTypeProfile
  int NumResults = 0;
  int NumOperands = 1;
  list<SDTypeConstraint> Constraints = SDCallSeqStart:constraints;
  string NAME = ?;
}
class SDNode<string SDNode:opcode = ?, SDTypeProfile SDNode:typeprof = ?, list<SDNodeProperty> SDNode:props = [], string SDNode:sdclass = "SDNode"> {	// SDPatternOperator
  string Opcode = SDNode:opcode;
  string SDClass = SDNode:sdclass;
  list<SDNodeProperty> Properties = SDNode:props;
  SDTypeProfile TypeProfile = SDNode:typeprof;
  string NAME = ?;
}
class SDNodeProperty {
  string NAME = ?;
}
class SDNodeXForm<SDNode SDNodeXForm:opc = ?, string SDNodeXForm:xformFunction = ?> {
  SDNode Opcode = SDNodeXForm:opc;
  string XFormFunction = SDNodeXForm:xformFunction;
  string NAME = ?;
}
class SDPatternOperator {
  string NAME = ?;
}
class SDTCVecEltisVT<int SDTCVecEltisVT:OpNum = ?, ValueType SDTCVecEltisVT:vt = ?> {	// SDTypeConstraint
  int OperandNum = SDTCVecEltisVT:OpNum;
  ValueType VT = SDTCVecEltisVT:vt;
  string NAME = ?;
}
class SDTCisEltOfVec<int SDTCisEltOfVec:ThisOp = ?, int SDTCisEltOfVec:OtherOp = ?> {	// SDTypeConstraint
  int OperandNum = SDTCisEltOfVec:ThisOp;
  int OtherOpNum = SDTCisEltOfVec:OtherOp;
  string NAME = ?;
}
class SDTCisFP<int SDTCisFP:OpNum = ?> {	// SDTypeConstraint
  int OperandNum = SDTCisFP:OpNum;
  string NAME = ?;
}
class SDTCisInt<int SDTCisInt:OpNum = ?> {	// SDTypeConstraint
  int OperandNum = SDTCisInt:OpNum;
  string NAME = ?;
}
class SDTCisOpSmallerThanOp<int SDTCisOpSmallerThanOp:SmallOp = ?, int SDTCisOpSmallerThanOp:BigOp = ?> {	// SDTypeConstraint
  int OperandNum = SDTCisOpSmallerThanOp:SmallOp;
  int BigOperandNum = SDTCisOpSmallerThanOp:BigOp;
  string NAME = ?;
}
class SDTCisPtrTy<int SDTCisPtrTy:OpNum = ?> {	// SDTypeConstraint
  int OperandNum = SDTCisPtrTy:OpNum;
  string NAME = ?;
}
class SDTCisSameAs<int SDTCisSameAs:OpNum = ?, int SDTCisSameAs:OtherOp = ?> {	// SDTypeConstraint
  int OperandNum = SDTCisSameAs:OpNum;
  int OtherOperandNum = SDTCisSameAs:OtherOp;
  string NAME = ?;
}
class SDTCisSameNumEltsAs<int SDTCisSameNumEltsAs:OpNum = ?, int SDTCisSameNumEltsAs:OtherOp = ?> {	// SDTypeConstraint
  int OperandNum = SDTCisSameNumEltsAs:OpNum;
  int OtherOperandNum = SDTCisSameNumEltsAs:OtherOp;
  string NAME = ?;
}
class SDTCisSubVecOfVec<int SDTCisSubVecOfVec:ThisOp = ?, int SDTCisSubVecOfVec:OtherOp = ?> {	// SDTypeConstraint
  int OperandNum = SDTCisSubVecOfVec:ThisOp;
  int OtherOpNum = SDTCisSubVecOfVec:OtherOp;
  string NAME = ?;
}
class SDTCisVT<int SDTCisVT:OpNum = ?, ValueType SDTCisVT:vt = ?> {	// SDTypeConstraint
  int OperandNum = SDTCisVT:OpNum;
  ValueType VT = SDTCisVT:vt;
  string NAME = ?;
}
class SDTCisVTSmallerThanOp<int SDTCisVTSmallerThanOp:OpNum = ?, int SDTCisVTSmallerThanOp:OtherOp = ?> {	// SDTypeConstraint
  int OperandNum = SDTCisVTSmallerThanOp:OpNum;
  int OtherOperandNum = SDTCisVTSmallerThanOp:OtherOp;
  string NAME = ?;
}
class SDTCisVec<int SDTCisVec:OpNum = ?> {	// SDTypeConstraint
  int OperandNum = SDTCisVec:OpNum;
  string NAME = ?;
}
class SDTypeConstraint<int SDTypeConstraint:opnum = ?> {
  int OperandNum = SDTypeConstraint:opnum;
  string NAME = ?;
}
class SDTypeProfile<int SDTypeProfile:numresults = ?, int SDTypeProfile:numoperands = ?, list<SDTypeConstraint> SDTypeProfile:constraints = ?> {
  int NumResults = SDTypeProfile:numresults;
  int NumOperands = SDTypeProfile:numoperands;
  list<SDTypeConstraint> Constraints = SDTypeProfile:constraints;
  string NAME = ?;
}
class SHA_1Arg_Intrinsic {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class SHA_2Arg_Intrinsic {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class SHA_3Arg_i32_Intrinsic {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class SHA_3Arg_v4i32_Intrinsic {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class SR<bits<8> SR:op1 = { ?, ?, ?, ?, ?, ?, ?, ? }, bits<4> SR:op2 = { ?, ?, ?, ? }, dag SR:outs = ?, dag SR:ins = ?, string SR:asmstr = ?, list<dag> SR:pattern = ?> {	// Instruction InstTriCore T16
  field bits<16> Inst = { op2{3}, op2{2}, op2{1}, op2{0}, s1{3}, s1{2}, s1{1}, s1{0}, SR:op1{7}, SR:op1{6}, SR:op1{5}, SR:op1{4}, SR:op1{3}, SR:op1{2}, SR:op1{1}, SR:op1{0} };
  string Namespace = "TriCore";
  dag OutOperandList = SR:outs;
  dag InOperandList = SR:ins;
  string AsmString = SR:asmstr;
  list<dag> Pattern = SR:pattern;
  list<Register> Uses = [];
  list<Register> Defs = [];
  list<Predicate> Predicates = [];
  int Size = 2;
  string DecoderNamespace = "";
  int CodeSize = 0;
  int AddedComplexity = 0;
  bit isReturn = 0;
  bit isBranch = 0;
  bit isIndirectBranch = 0;
  bit isCompare = 0;
  bit isMoveImm = 0;
  bit isBitcast = 0;
  bit isSelect = 0;
  bit isBarrier = 0;
  bit isCall = 0;
  bit canFoldAsLoad = 0;
  bit mayLoad = ?;
  bit mayStore = ?;
  bit isConvertibleToThreeAddress = 0;
  bit isCommutable = 0;
  bit isTerminator = 0;
  bit isReMaterializable = 0;
  bit isPredicable = 0;
  bit hasDelaySlot = 0;
  bit usesCustomInserter = 0;
  bit hasPostISelHook = 0;
  bit hasCtrlDep = 0;
  bit isNotDuplicable = 0;
  bit isConvergent = 0;
  bit isAsCheapAsAMove = 0;
  bit hasExtraSrcRegAllocReq = 0;
  bit hasExtraDefRegAllocReq = 0;
  bit isRegSequence = 0;
  bit isPseudo = 0;
  bit isExtractSubreg = 0;
  bit isInsertSubreg = 0;
  bit hasSideEffects = ?;
  bit isCodeGenOnly = 0;
  bit isAsmParserOnly = 0;
  InstrItinClass Itinerary = NoItinerary;
  list<SchedReadWrite> SchedRW = ?;
  string Constraints = "";
  string DisableEncoding = "";
  string PostEncoderMethod = "";
  string DecoderMethod = "";
  bits<64> TSFlags = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string AsmMatchConverter = "";
  string TwoOperandAliasConstraint = "";
  bit UseNamedOperandTable = 0;
  bits<4> op2 = { ?, ?, ?, ? };
  bits<4> s1 = { ?, ?, ?, ? };
  bits<4> d = { ?, ?, ?, ? };
  string NAME = ?;
}
class SRC<bits<8> SRC:op1 = { ?, ?, ?, ?, ?, ?, ?, ? }, dag SRC:outs = ?, dag SRC:ins = ?, string SRC:asmstr = ?, list<dag> SRC:pattern = ?> {	// Instruction InstTriCore T16
  field bits<16> Inst = { const4{3}, const4{2}, const4{1}, const4{0}, s1_d{3}, s1_d{2}, s1_d{1}, s1_d{0}, SRC:op1{7}, SRC:op1{6}, SRC:op1{5}, SRC:op1{4}, SRC:op1{3}, SRC:op1{2}, SRC:op1{1}, SRC:op1{0} };
  string Namespace = "TriCore";
  dag OutOperandList = SRC:outs;
  dag InOperandList = SRC:ins;
  string AsmString = SRC:asmstr;
  list<dag> Pattern = SRC:pattern;
  list<Register> Uses = [];
  list<Register> Defs = [];
  list<Predicate> Predicates = [];
  int Size = 2;
  string DecoderNamespace = "";
  int CodeSize = 0;
  int AddedComplexity = 0;
  bit isReturn = 0;
  bit isBranch = 0;
  bit isIndirectBranch = 0;
  bit isCompare = 0;
  bit isMoveImm = 0;
  bit isBitcast = 0;
  bit isSelect = 0;
  bit isBarrier = 0;
  bit isCall = 0;
  bit canFoldAsLoad = 0;
  bit mayLoad = ?;
  bit mayStore = ?;
  bit isConvertibleToThreeAddress = 0;
  bit isCommutable = 0;
  bit isTerminator = 0;
  bit isReMaterializable = 0;
  bit isPredicable = 0;
  bit hasDelaySlot = 0;
  bit usesCustomInserter = 0;
  bit hasPostISelHook = 0;
  bit hasCtrlDep = 0;
  bit isNotDuplicable = 0;
  bit isConvergent = 0;
  bit isAsCheapAsAMove = 0;
  bit hasExtraSrcRegAllocReq = 0;
  bit hasExtraDefRegAllocReq = 0;
  bit isRegSequence = 0;
  bit isPseudo = 0;
  bit isExtractSubreg = 0;
  bit isInsertSubreg = 0;
  bit hasSideEffects = ?;
  bit isCodeGenOnly = 0;
  bit isAsmParserOnly = 0;
  InstrItinClass Itinerary = NoItinerary;
  list<SchedReadWrite> SchedRW = ?;
  string Constraints = "";
  string DisableEncoding = "";
  string PostEncoderMethod = "";
  string DecoderMethod = "";
  bits<64> TSFlags = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string AsmMatchConverter = "";
  string TwoOperandAliasConstraint = "";
  bit UseNamedOperandTable = 0;
  bits<4> const4 = { ?, ?, ?, ? };
  bits<4> s1_d = { ?, ?, ?, ? };
  string NAME = ?;
}
class SRR<bits<8> SRR:op1 = { ?, ?, ?, ?, ?, ?, ?, ? }, dag SRR:outs = ?, dag SRR:ins = ?, string SRR:asmstr = ?, list<dag> SRR:pattern = ?> {	// Instruction InstTriCore T16
  field bits<16> Inst = { s2{3}, s2{2}, s2{1}, s2{0}, s1{3}, s1{2}, s1{1}, s1{0}, SRR:op1{7}, SRR:op1{6}, SRR:op1{5}, SRR:op1{4}, SRR:op1{3}, SRR:op1{2}, SRR:op1{1}, SRR:op1{0} };
  string Namespace = "TriCore";
  dag OutOperandList = SRR:outs;
  dag InOperandList = SRR:ins;
  string AsmString = SRR:asmstr;
  list<dag> Pattern = SRR:pattern;
  list<Register> Uses = [];
  list<Register> Defs = [];
  list<Predicate> Predicates = [];
  int Size = 2;
  string DecoderNamespace = "";
  int CodeSize = 0;
  int AddedComplexity = 0;
  bit isReturn = 0;
  bit isBranch = 0;
  bit isIndirectBranch = 0;
  bit isCompare = 0;
  bit isMoveImm = 0;
  bit isBitcast = 0;
  bit isSelect = 0;
  bit isBarrier = 0;
  bit isCall = 0;
  bit canFoldAsLoad = 0;
  bit mayLoad = ?;
  bit mayStore = ?;
  bit isConvertibleToThreeAddress = 0;
  bit isCommutable = 0;
  bit isTerminator = 0;
  bit isReMaterializable = 0;
  bit isPredicable = 0;
  bit hasDelaySlot = 0;
  bit usesCustomInserter = 0;
  bit hasPostISelHook = 0;
  bit hasCtrlDep = 0;
  bit isNotDuplicable = 0;
  bit isConvergent = 0;
  bit isAsCheapAsAMove = 0;
  bit hasExtraSrcRegAllocReq = 0;
  bit hasExtraDefRegAllocReq = 0;
  bit isRegSequence = 0;
  bit isPseudo = 0;
  bit isExtractSubreg = 0;
  bit isInsertSubreg = 0;
  bit hasSideEffects = ?;
  bit isCodeGenOnly = 0;
  bit isAsmParserOnly = 0;
  InstrItinClass Itinerary = NoItinerary;
  list<SchedReadWrite> SchedRW = ?;
  string Constraints = "";
  string DisableEncoding = "";
  string PostEncoderMethod = "";
  string DecoderMethod = "";
  bits<64> TSFlags = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string AsmMatchConverter = "";
  string TwoOperandAliasConstraint = "";
  bit UseNamedOperandTable = 0;
  bits<4> s1 = { ?, ?, ?, ? };
  bits<4> s2 = { ?, ?, ?, ? };
  string NAME = ?;
}
class Sched<list<SchedReadWrite> Sched:schedrw = ?> {
  list<SchedReadWrite> SchedRW = Sched:schedrw;
  string NAME = ?;
}
class SchedAlias<SchedReadWrite SchedAlias:match = ?, SchedReadWrite SchedAlias:alias = ?> {
  SchedReadWrite MatchRW = SchedAlias:match;
  SchedReadWrite AliasRW = SchedAlias:alias;
  SchedMachineModel SchedModel = ?;
  string NAME = ?;
}
class SchedMachineModel {
  int IssueWidth = -1;
  int MinLatency = -1;
  int MicroOpBufferSize = -1;
  int LoopMicroOpBufferSize = -1;
  int LoadLatency = -1;
  int HighLatency = -1;
  int MispredictPenalty = -1;
  ProcessorItineraries Itineraries = NoItineraries;
  bit PostRAScheduler = 0;
  bit CompleteModel = 1;
  bit NoModel = 0;
  string NAME = ?;
}
class SchedPredicate<string SchedPredicate:pred = ?> {
  SchedMachineModel SchedModel = ?;
  string Predicate = SchedPredicate:pred;
  string NAME = ?;
}
class SchedRead {	// SchedReadWrite
  string NAME = ?;
}
class SchedReadAdvance<int SchedReadAdvance:cycles = ?, list<SchedWrite> SchedReadAdvance:writes = []> {	// SchedReadWrite SchedRead ProcReadAdvance
  int Cycles = SchedReadAdvance:cycles;
  list<SchedWrite> ValidWrites = SchedReadAdvance:writes;
  bit Unsupported = 0;
  SchedMachineModel SchedModel = ?;
  string NAME = ?;
}
class SchedReadVariant<list<SchedVar> SchedReadVariant:variants = ?> {	// SchedReadWrite SchedRead SchedVariant
  list<SchedVar> Variants = SchedReadVariant:variants;
  bit Variadic = 0;
  SchedMachineModel SchedModel = ?;
  string NAME = ?;
}
class SchedReadWrite {
  string NAME = ?;
}
class SchedVar<SchedPredicate SchedVar:pred = ?, list<SchedReadWrite> SchedVar:selected = ?> {
  SchedPredicate Predicate = SchedVar:pred;
  list<SchedReadWrite> Selected = SchedVar:selected;
  string NAME = ?;
}
class SchedVariant<list<SchedVar> SchedVariant:variants = ?> {
  list<SchedVar> Variants = SchedVariant:variants;
  bit Variadic = 0;
  SchedMachineModel SchedModel = ?;
  string NAME = ?;
}
class SchedWrite {	// SchedReadWrite
  string NAME = ?;
}
class SchedWriteRes<list<ProcResourceKind> SchedWriteRes:resources = ?> {	// SchedReadWrite SchedWrite ProcWriteResources
  list<ProcResourceKind> ProcResources = SchedWriteRes:resources;
  list<int> ResourceCycles = [];
  int Latency = 1;
  int NumMicroOps = 1;
  bit BeginGroup = 0;
  bit EndGroup = 0;
  bit Unsupported = 0;
  SchedMachineModel SchedModel = ?;
  string NAME = ?;
}
class SchedWriteVariant<list<SchedVar> SchedWriteVariant:variants = ?> {	// SchedReadWrite SchedWrite SchedVariant
  list<SchedVar> Variants = SchedWriteVariant:variants;
  bit Variadic = 0;
  SchedMachineModel SchedModel = ?;
  string NAME = ?;
}
class SubRegIndex<int SubRegIndex:size = ?, int SubRegIndex:offset = 0> {
  string Namespace = "";
  int Size = SubRegIndex:size;
  int Offset = SubRegIndex:offset;
  list<SubRegIndex> ComposedOf = [];
  list<SubRegIndex> CoveringSubRegIndices = [];
  string NAME = ?;
}
class SubtargetFeature<string SubtargetFeature:n = ?, string SubtargetFeature:a = ?, string SubtargetFeature:v = ?, string SubtargetFeature:d = ?, list<SubtargetFeature> SubtargetFeature:i = []> {
  string Name = SubtargetFeature:n;
  string Attribute = SubtargetFeature:a;
  string Value = SubtargetFeature:v;
  string Desc = SubtargetFeature:d;
  list<SubtargetFeature> Implies = SubtargetFeature:i;
  string NAME = ?;
}
class SystemZBinary<string SystemZBinary:name = ?, LLVMType SystemZBinary:type = ?> {	// GCCBuiltin SDPatternOperator Intrinsic SystemZBinaryConv
  string GCCBuiltinName = !strconcat("__builtin_s390_", SystemZBinary:name);
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [SystemZBinary:type];
  list<LLVMType> ParamTypes = [SystemZBinary:type, SystemZBinary:type];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class SystemZBinaryCC<LLVMType SystemZBinaryCC:type = ?> {	// SDPatternOperator Intrinsic SystemZBinaryConvCC
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [SystemZBinaryCC:type, llvm_i32_ty];
  list<LLVMType> ParamTypes = [SystemZBinaryCC:type, SystemZBinaryCC:type];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class SystemZBinaryConv<string SystemZBinaryConv:name = ?, LLVMType SystemZBinaryConv:result = ?, LLVMType SystemZBinaryConv:arg = ?> {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = !strconcat("__builtin_s390_", SystemZBinaryConv:name);
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [SystemZBinaryConv:result];
  list<LLVMType> ParamTypes = [SystemZBinaryConv:arg, SystemZBinaryConv:arg];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class SystemZBinaryConvCC<LLVMType SystemZBinaryConvCC:result = ?, LLVMType SystemZBinaryConvCC:arg = ?> {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [SystemZBinaryConvCC:result, llvm_i32_ty];
  list<LLVMType> ParamTypes = [SystemZBinaryConvCC:arg, SystemZBinaryConvCC:arg];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class SystemZBinaryConvIntCC<LLVMType SystemZBinaryConvIntCC:result = ?, LLVMType SystemZBinaryConvIntCC:arg = ?> {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [SystemZBinaryConvIntCC:result, llvm_i32_ty];
  list<LLVMType> ParamTypes = [SystemZBinaryConvIntCC:arg, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class SystemZBinaryInt<string SystemZBinaryInt:name = ?, LLVMType SystemZBinaryInt:type = ?> {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = !strconcat("__builtin_s390_", SystemZBinaryInt:name);
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [SystemZBinaryInt:type];
  list<LLVMType> ParamTypes = [SystemZBinaryInt:type, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class SystemZQuaternaryInt<string SystemZQuaternaryInt:name = ?, LLVMType SystemZQuaternaryInt:type = ?> {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = !strconcat("__builtin_s390_", SystemZQuaternaryInt:name);
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [SystemZQuaternaryInt:type];
  list<LLVMType> ParamTypes = [SystemZQuaternaryInt:type, SystemZQuaternaryInt:type, SystemZQuaternaryInt:type, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class SystemZQuaternaryIntCC<LLVMType SystemZQuaternaryIntCC:type = ?> {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [SystemZQuaternaryIntCC:type, llvm_i32_ty];
  list<LLVMType> ParamTypes = [SystemZQuaternaryIntCC:type, SystemZQuaternaryIntCC:type, SystemZQuaternaryIntCC:type, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class SystemZTernary<string SystemZTernary:name = ?, LLVMType SystemZTernary:type = ?> {	// GCCBuiltin SDPatternOperator Intrinsic SystemZTernaryConv
  string GCCBuiltinName = !strconcat("__builtin_s390_", SystemZTernary:name);
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [SystemZTernary:type];
  list<LLVMType> ParamTypes = [SystemZTernary:type, SystemZTernary:type, SystemZTernary:type];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class SystemZTernaryConv<string SystemZTernaryConv:name = ?, LLVMType SystemZTernaryConv:result = ?, LLVMType SystemZTernaryConv:arg = ?> {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = !strconcat("__builtin_s390_", SystemZTernaryConv:name);
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [SystemZTernaryConv:result];
  list<LLVMType> ParamTypes = [SystemZTernaryConv:arg, SystemZTernaryConv:arg, SystemZTernaryConv:result];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class SystemZTernaryInt<string SystemZTernaryInt:name = ?, LLVMType SystemZTernaryInt:type = ?> {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = !strconcat("__builtin_s390_", SystemZTernaryInt:name);
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [SystemZTernaryInt:type];
  list<LLVMType> ParamTypes = [SystemZTernaryInt:type, SystemZTernaryInt:type, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class SystemZTernaryIntCC<LLVMType SystemZTernaryIntCC:type = ?> {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [SystemZTernaryIntCC:type, llvm_i32_ty];
  list<LLVMType> ParamTypes = [SystemZTernaryIntCC:type, SystemZTernaryIntCC:type, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class SystemZUnary<string SystemZUnary:name = ?, LLVMType SystemZUnary:type = ?> {	// GCCBuiltin SDPatternOperator Intrinsic SystemZUnaryConv
  string GCCBuiltinName = !strconcat("__builtin_s390_", SystemZUnary:name);
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [SystemZUnary:type];
  list<LLVMType> ParamTypes = [SystemZUnary:type];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class SystemZUnaryCC<LLVMType SystemZUnaryCC:type = ?> {	// SDPatternOperator Intrinsic SystemZUnaryConvCC
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [SystemZUnaryCC:type, llvm_i32_ty];
  list<LLVMType> ParamTypes = [SystemZUnaryCC:type];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class SystemZUnaryConv<string SystemZUnaryConv:name = ?, LLVMType SystemZUnaryConv:result = ?, LLVMType SystemZUnaryConv:arg = ?> {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = !strconcat("__builtin_s390_", SystemZUnaryConv:name);
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [SystemZUnaryConv:result];
  list<LLVMType> ParamTypes = [SystemZUnaryConv:arg];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class SystemZUnaryConvCC<LLVMType SystemZUnaryConvCC:result = ?, LLVMType SystemZUnaryConvCC:arg = ?> {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = Intrinsic:name;
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [SystemZUnaryConvCC:result, llvm_i32_ty];
  list<LLVMType> ParamTypes = [SystemZUnaryConvCC:arg];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
class T16<bits<8> T16:op1 = { ?, ?, ?, ?, ?, ?, ?, ? }, dag T16:outs = ?, dag T16:ins = ?, string T16:asmstr = ?, list<dag> T16:pattern = ?> {	// Instruction InstTriCore
  field bits<16> Inst = { ?, ?, ?, ?, ?, ?, ?, ?, T16:op1{7}, T16:op1{6}, T16:op1{5}, T16:op1{4}, T16:op1{3}, T16:op1{2}, T16:op1{1}, T16:op1{0} };
  string Namespace = "TriCore";
  dag OutOperandList = T16:outs;
  dag InOperandList = T16:ins;
  string AsmString = T16:asmstr;
  list<dag> Pattern = T16:pattern;
  list<Register> Uses = [];
  list<Register> Defs = [];
  list<Predicate> Predicates = [];
  int Size = 2;
  string DecoderNamespace = "";
  int CodeSize = 0;
  int AddedComplexity = 0;
  bit isReturn = 0;
  bit isBranch = 0;
  bit isIndirectBranch = 0;
  bit isCompare = 0;
  bit isMoveImm = 0;
  bit isBitcast = 0;
  bit isSelect = 0;
  bit isBarrier = 0;
  bit isCall = 0;
  bit canFoldAsLoad = 0;
  bit mayLoad = ?;
  bit mayStore = ?;
  bit isConvertibleToThreeAddress = 0;
  bit isCommutable = 0;
  bit isTerminator = 0;
  bit isReMaterializable = 0;
  bit isPredicable = 0;
  bit hasDelaySlot = 0;
  bit usesCustomInserter = 0;
  bit hasPostISelHook = 0;
  bit hasCtrlDep = 0;
  bit isNotDuplicable = 0;
  bit isConvergent = 0;
  bit isAsCheapAsAMove = 0;
  bit hasExtraSrcRegAllocReq = 0;
  bit hasExtraDefRegAllocReq = 0;
  bit isRegSequence = 0;
  bit isPseudo = 0;
  bit isExtractSubreg = 0;
  bit isInsertSubreg = 0;
  bit hasSideEffects = ?;
  bit isCodeGenOnly = 0;
  bit isAsmParserOnly = 0;
  InstrItinClass Itinerary = NoItinerary;
  list<SchedReadWrite> SchedRW = ?;
  string Constraints = "";
  string DisableEncoding = "";
  string PostEncoderMethod = "";
  string DecoderMethod = "";
  bits<64> TSFlags = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string AsmMatchConverter = "";
  string TwoOperandAliasConstraint = "";
  bit UseNamedOperandTable = 0;
  string NAME = ?;
}
class T32<dag T32:outs = ?, dag T32:ins = ?, string T32:asmstr = ?, list<dag> T32:pattern = ?> {	// Instruction InstTriCore
  field bits<32> Inst = { ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? };
  string Namespace = "TriCore";
  dag OutOperandList = T32:outs;
  dag InOperandList = T32:ins;
  string AsmString = T32:asmstr;
  list<dag> Pattern = T32:pattern;
  list<Register> Uses = [];
  list<Register> Defs = [];
  list<Predicate> Predicates = [];
  int Size = 4;
  string DecoderNamespace = "";
  int CodeSize = 0;
  int AddedComplexity = 0;
  bit isReturn = 0;
  bit isBranch = 0;
  bit isIndirectBranch = 0;
  bit isCompare = 0;
  bit isMoveImm = 0;
  bit isBitcast = 0;
  bit isSelect = 0;
  bit isBarrier = 0;
  bit isCall = 0;
  bit canFoldAsLoad = 0;
  bit mayLoad = ?;
  bit mayStore = ?;
  bit isConvertibleToThreeAddress = 0;
  bit isCommutable = 0;
  bit isTerminator = 0;
  bit isReMaterializable = 0;
  bit isPredicable = 0;
  bit hasDelaySlot = 0;
  bit usesCustomInserter = 0;
  bit hasPostISelHook = 0;
  bit hasCtrlDep = 0;
  bit isNotDuplicable = 0;
  bit isConvergent = 0;
  bit isAsCheapAsAMove = 0;
  bit hasExtraSrcRegAllocReq = 0;
  bit hasExtraDefRegAllocReq = 0;
  bit isRegSequence = 0;
  bit isPseudo = 0;
  bit isExtractSubreg = 0;
  bit isInsertSubreg = 0;
  bit hasSideEffects = ?;
  bit isCodeGenOnly = 0;
  bit isAsmParserOnly = 0;
  InstrItinClass Itinerary = NoItinerary;
  list<SchedReadWrite> SchedRW = ?;
  string Constraints = "";
  string DisableEncoding = "";
  string PostEncoderMethod = "";
  string DecoderMethod = "";
  bits<64> TSFlags = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string AsmMatchConverter = "";
  string TwoOperandAliasConstraint = "";
  bit UseNamedOperandTable = 0;
  string NAME = ?;
}
class Target {
  InstrInfo InstructionSet = ?;
  list<AsmParser> AssemblyParsers = [DefaultAsmParser];
  list<AsmParserVariant> AssemblyParserVariants = [DefaultAsmParserVariant];
  list<AsmWriter> AssemblyWriters = [DefaultAsmWriter];
  string NAME = ?;
}
class TokenAlias<string TokenAlias:From = ?, string TokenAlias:To = ?> {
  string FromToken = TokenAlias:From;
  string ToToken = TokenAlias:To;
  string NAME = ?;
}
class TriCoreAdrReg<bits<4> TriCoreAdrReg:num = { ?, ?, ?, ? }, string TriCoreAdrReg:n = ?> {	// Register TriCoreReg
  field bits<4> Num = { TriCoreAdrReg:num{3}, TriCoreAdrReg:num{2}, TriCoreAdrReg:num{1}, TriCoreAdrReg:num{0} };
  list<string> Register:altNames = [];
  string Namespace = "TriCore";
  string AsmName = TriCoreAdrReg:n;
  list<string> AltNames = Register:altNames;
  list<Register> Aliases = [];
  list<Register> SubRegs = [];
  list<SubRegIndex> SubRegIndices = [];
  list<RegAltNameIndex> RegAltNameIndices = [];
  list<int> DwarfNumbers = [];
  int CostPerUse = 0;
  bit CoveredBySubRegs = 0;
  bits<16> HWEncoding = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string NAME = ?;
}
class TriCoreDataReg<bits<4> TriCoreDataReg:num = { ?, ?, ?, ? }, string TriCoreDataReg:n = ?> {	// Register TriCoreReg
  field bits<4> Num = { TriCoreDataReg:num{3}, TriCoreDataReg:num{2}, TriCoreDataReg:num{1}, TriCoreDataReg:num{0} };
  list<string> Register:altNames = [];
  string Namespace = "TriCore";
  string AsmName = TriCoreDataReg:n;
  list<string> AltNames = Register:altNames;
  list<Register> Aliases = [];
  list<Register> SubRegs = [];
  list<SubRegIndex> SubRegIndices = [];
  list<RegAltNameIndex> RegAltNameIndices = [];
  list<int> DwarfNumbers = [];
  int CostPerUse = 0;
  bit CoveredBySubRegs = 0;
  bits<16> HWEncoding = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string NAME = ?;
}
class TriCorePSReg<bits<4> TriCorePSReg:num = { ?, ?, ?, ? }, string TriCorePSReg:n = ?> {	// Register TriCoreReg
  field bits<4> Num = { TriCorePSReg:num{3}, TriCorePSReg:num{2}, TriCorePSReg:num{1}, TriCorePSReg:num{0} };
  list<string> Register:altNames = [];
  string Namespace = "TriCore";
  string AsmName = TriCorePSReg:n;
  list<string> AltNames = Register:altNames;
  list<Register> Aliases = [];
  list<Register> SubRegs = [];
  list<SubRegIndex> SubRegIndices = [];
  list<RegAltNameIndex> RegAltNameIndices = [];
  list<int> DwarfNumbers = [];
  int CostPerUse = 0;
  bit CoveredBySubRegs = 0;
  bits<16> HWEncoding = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string NAME = ?;
}
class TriCorePseudoInst<dag TriCorePseudoInst:outs = ?, dag TriCorePseudoInst:ins = ?, string TriCorePseudoInst:asmstr = ?, list<dag> TriCorePseudoInst:pattern = ?> {	// Instruction InstTriCore
  string Namespace = "TriCore";
  dag OutOperandList = TriCorePseudoInst:outs;
  dag InOperandList = TriCorePseudoInst:ins;
  string AsmString = TriCorePseudoInst:asmstr;
  list<dag> Pattern = TriCorePseudoInst:pattern;
  list<Register> Uses = [];
  list<Register> Defs = [];
  list<Predicate> Predicates = [];
  int Size = 0;
  string DecoderNamespace = "";
  int CodeSize = 0;
  int AddedComplexity = 0;
  bit isReturn = 0;
  bit isBranch = 0;
  bit isIndirectBranch = 0;
  bit isCompare = 0;
  bit isMoveImm = 0;
  bit isBitcast = 0;
  bit isSelect = 0;
  bit isBarrier = 0;
  bit isCall = 0;
  bit canFoldAsLoad = 0;
  bit mayLoad = ?;
  bit mayStore = ?;
  bit isConvertibleToThreeAddress = 0;
  bit isCommutable = 0;
  bit isTerminator = 0;
  bit isReMaterializable = 0;
  bit isPredicable = 0;
  bit hasDelaySlot = 0;
  bit usesCustomInserter = 0;
  bit hasPostISelHook = 0;
  bit hasCtrlDep = 0;
  bit isNotDuplicable = 0;
  bit isConvergent = 0;
  bit isAsCheapAsAMove = 0;
  bit hasExtraSrcRegAllocReq = 0;
  bit hasExtraDefRegAllocReq = 0;
  bit isRegSequence = 0;
  bit isPseudo = 1;
  bit isExtractSubreg = 0;
  bit isInsertSubreg = 0;
  bit hasSideEffects = ?;
  bit isCodeGenOnly = 0;
  bit isAsmParserOnly = 0;
  InstrItinClass Itinerary = NoItinerary;
  list<SchedReadWrite> SchedRW = ?;
  string Constraints = "";
  string DisableEncoding = "";
  string PostEncoderMethod = "";
  string DecoderMethod = "";
  bits<64> TSFlags = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string AsmMatchConverter = "";
  string TwoOperandAliasConstraint = "";
  bit UseNamedOperandTable = 0;
  string NAME = ?;
}
class TriCoreReg<string TriCoreReg:n = ?> {	// Register
  field bits<4> Num = { ?, ?, ?, ? };
  list<string> Register:altNames = [];
  string Namespace = "TriCore";
  string AsmName = TriCoreReg:n;
  list<string> AltNames = Register:altNames;
  list<Register> Aliases = [];
  list<Register> SubRegs = [];
  list<SubRegIndex> SubRegIndices = [];
  list<RegAltNameIndex> RegAltNameIndices = [];
  list<int> DwarfNumbers = [];
  int CostPerUse = 0;
  bit CoveredBySubRegs = 0;
  bits<16> HWEncoding = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string NAME = ?;
}
class TriCoreRegWithSubregs<bits<4> TriCoreRegWithSubregs:num = { ?, ?, ?, ? }, string TriCoreRegWithSubregs:n = ?, list<Register> TriCoreRegWithSubregs:subregs = ?> {	// Register RegisterWithSubRegs
  field bits<4> Num = { TriCoreRegWithSubregs:num{3}, TriCoreRegWithSubregs:num{2}, TriCoreRegWithSubregs:num{1}, TriCoreRegWithSubregs:num{0} };
  list<string> Register:altNames = [];
  string Namespace = "TriCore";
  string AsmName = TriCoreRegWithSubregs:n;
  list<string> AltNames = Register:altNames;
  list<Register> Aliases = [];
  list<Register> SubRegs = TriCoreRegWithSubregs:subregs;
  list<SubRegIndex> SubRegIndices = [];
  list<RegAltNameIndex> RegAltNameIndices = [];
  list<int> DwarfNumbers = [];
  int CostPerUse = 0;
  bit CoveredBySubRegs = 0;
  bits<16> HWEncoding = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string NAME = ?;
}
class ValueType<int ValueType:size = ?, int ValueType:value = ?> {
  string Namespace = "MVT";
  int Size = ValueType:size;
  int Value = ValueType:value;
  string NAME = ?;
}
class WriteRes<SchedWrite WriteRes:write = ?, list<ProcResourceKind> WriteRes:resources = ?> {	// ProcWriteResources
  list<ProcResourceKind> ProcResources = WriteRes:resources;
  list<int> ResourceCycles = [];
  int Latency = 1;
  int NumMicroOps = 1;
  bit BeginGroup = 0;
  bit EndGroup = 0;
  bit Unsupported = 0;
  SchedMachineModel SchedModel = ?;
  SchedWrite WriteType = WriteRes:write;
  string NAME = ?;
}
class WriteSequence<list<SchedWrite> WriteSequence:writes = ?, int WriteSequence:rep = 1> {	// SchedReadWrite SchedWrite
  list<SchedWrite> Writes = WriteSequence:writes;
  int Repeat = WriteSequence:rep;
  SchedMachineModel SchedModel = ?;
  string NAME = ?;
}
class unknown_class {
  string NAME = ?;
}
------------- Defs -----------------
def A0 {	// Register TriCoreReg TriCoreDataReg
  field bits<4> Num = { 0, 0, 0, 0 };
  list<string> Register:altNames = [];
  string Namespace = "TriCore";
  string AsmName = "A0";
  list<string> AltNames = [];
  list<Register> Aliases = [];
  list<Register> SubRegs = [];
  list<SubRegIndex> SubRegIndices = [];
  list<RegAltNameIndex> RegAltNameIndices = [];
  list<int> DwarfNumbers = [];
  int CostPerUse = 0;
  bit CoveredBySubRegs = 0;
  bits<16> HWEncoding = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string NAME = ?;
}
def A1 {	// Register TriCoreReg TriCoreDataReg
  field bits<4> Num = { 0, 0, 0, 1 };
  list<string> Register:altNames = [];
  string Namespace = "TriCore";
  string AsmName = "A1";
  list<string> AltNames = [];
  list<Register> Aliases = [];
  list<Register> SubRegs = [];
  list<SubRegIndex> SubRegIndices = [];
  list<RegAltNameIndex> RegAltNameIndices = [];
  list<int> DwarfNumbers = [];
  int CostPerUse = 0;
  bit CoveredBySubRegs = 0;
  bits<16> HWEncoding = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string NAME = ?;
}
def A10 {	// Register TriCoreReg TriCoreDataReg
  field bits<4> Num = { 1, 0, 1, 0 };
  list<string> Register:altNames = [];
  string Namespace = "TriCore";
  string AsmName = "A10";
  list<string> AltNames = [];
  list<Register> Aliases = [];
  list<Register> SubRegs = [];
  list<SubRegIndex> SubRegIndices = [];
  list<RegAltNameIndex> RegAltNameIndices = [];
  list<int> DwarfNumbers = [];
  int CostPerUse = 0;
  bit CoveredBySubRegs = 0;
  bits<16> HWEncoding = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string NAME = ?;
}
def A11 {	// Register TriCoreReg TriCoreDataReg
  field bits<4> Num = { 1, 0, 1, 1 };
  list<string> Register:altNames = [];
  string Namespace = "TriCore";
  string AsmName = "A11";
  list<string> AltNames = [];
  list<Register> Aliases = [];
  list<Register> SubRegs = [];
  list<SubRegIndex> SubRegIndices = [];
  list<RegAltNameIndex> RegAltNameIndices = [];
  list<int> DwarfNumbers = [];
  int CostPerUse = 0;
  bit CoveredBySubRegs = 0;
  bits<16> HWEncoding = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string NAME = ?;
}
def A12 {	// Register TriCoreReg TriCoreDataReg
  field bits<4> Num = { 1, 1, 0, 0 };
  list<string> Register:altNames = [];
  string Namespace = "TriCore";
  string AsmName = "A12";
  list<string> AltNames = [];
  list<Register> Aliases = [];
  list<Register> SubRegs = [];
  list<SubRegIndex> SubRegIndices = [];
  list<RegAltNameIndex> RegAltNameIndices = [];
  list<int> DwarfNumbers = [];
  int CostPerUse = 0;
  bit CoveredBySubRegs = 0;
  bits<16> HWEncoding = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string NAME = ?;
}
def A13 {	// Register TriCoreReg TriCoreDataReg
  field bits<4> Num = { 1, 1, 0, 1 };
  list<string> Register:altNames = [];
  string Namespace = "TriCore";
  string AsmName = "A13";
  list<string> AltNames = [];
  list<Register> Aliases = [];
  list<Register> SubRegs = [];
  list<SubRegIndex> SubRegIndices = [];
  list<RegAltNameIndex> RegAltNameIndices = [];
  list<int> DwarfNumbers = [];
  int CostPerUse = 0;
  bit CoveredBySubRegs = 0;
  bits<16> HWEncoding = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string NAME = ?;
}
def A14 {	// Register TriCoreReg TriCoreDataReg
  field bits<4> Num = { 1, 1, 1, 0 };
  list<string> Register:altNames = [];
  string Namespace = "TriCore";
  string AsmName = "A14";
  list<string> AltNames = [];
  list<Register> Aliases = [];
  list<Register> SubRegs = [];
  list<SubRegIndex> SubRegIndices = [];
  list<RegAltNameIndex> RegAltNameIndices = [];
  list<int> DwarfNumbers = [];
  int CostPerUse = 0;
  bit CoveredBySubRegs = 0;
  bits<16> HWEncoding = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string NAME = ?;
}
def A15 {	// Register TriCoreReg TriCoreDataReg
  field bits<4> Num = { 1, 1, 1, 1 };
  list<string> Register:altNames = [];
  string Namespace = "TriCore";
  string AsmName = "A15";
  list<string> AltNames = [];
  list<Register> Aliases = [];
  list<Register> SubRegs = [];
  list<SubRegIndex> SubRegIndices = [];
  list<RegAltNameIndex> RegAltNameIndices = [];
  list<int> DwarfNumbers = [];
  int CostPerUse = 0;
  bit CoveredBySubRegs = 0;
  bits<16> HWEncoding = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string NAME = ?;
}
def A2 {	// Register TriCoreReg TriCoreDataReg
  field bits<4> Num = { 0, 0, 1, 0 };
  list<string> Register:altNames = [];
  string Namespace = "TriCore";
  string AsmName = "A2";
  list<string> AltNames = [];
  list<Register> Aliases = [];
  list<Register> SubRegs = [];
  list<SubRegIndex> SubRegIndices = [];
  list<RegAltNameIndex> RegAltNameIndices = [];
  list<int> DwarfNumbers = [];
  int CostPerUse = 0;
  bit CoveredBySubRegs = 0;
  bits<16> HWEncoding = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string NAME = ?;
}
def A3 {	// Register TriCoreReg TriCoreDataReg
  field bits<4> Num = { 0, 0, 1, 1 };
  list<string> Register:altNames = [];
  string Namespace = "TriCore";
  string AsmName = "A3";
  list<string> AltNames = [];
  list<Register> Aliases = [];
  list<Register> SubRegs = [];
  list<SubRegIndex> SubRegIndices = [];
  list<RegAltNameIndex> RegAltNameIndices = [];
  list<int> DwarfNumbers = [];
  int CostPerUse = 0;
  bit CoveredBySubRegs = 0;
  bits<16> HWEncoding = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string NAME = ?;
}
def A4 {	// Register TriCoreReg TriCoreDataReg
  field bits<4> Num = { 0, 1, 0, 0 };
  list<string> Register:altNames = [];
  string Namespace = "TriCore";
  string AsmName = "A4";
  list<string> AltNames = [];
  list<Register> Aliases = [];
  list<Register> SubRegs = [];
  list<SubRegIndex> SubRegIndices = [];
  list<RegAltNameIndex> RegAltNameIndices = [];
  list<int> DwarfNumbers = [];
  int CostPerUse = 0;
  bit CoveredBySubRegs = 0;
  bits<16> HWEncoding = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string NAME = ?;
}
def A5 {	// Register TriCoreReg TriCoreDataReg
  field bits<4> Num = { 0, 1, 0, 1 };
  list<string> Register:altNames = [];
  string Namespace = "TriCore";
  string AsmName = "A5";
  list<string> AltNames = [];
  list<Register> Aliases = [];
  list<Register> SubRegs = [];
  list<SubRegIndex> SubRegIndices = [];
  list<RegAltNameIndex> RegAltNameIndices = [];
  list<int> DwarfNumbers = [];
  int CostPerUse = 0;
  bit CoveredBySubRegs = 0;
  bits<16> HWEncoding = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string NAME = ?;
}
def A6 {	// Register TriCoreReg TriCoreDataReg
  field bits<4> Num = { 0, 1, 1, 0 };
  list<string> Register:altNames = [];
  string Namespace = "TriCore";
  string AsmName = "A6";
  list<string> AltNames = [];
  list<Register> Aliases = [];
  list<Register> SubRegs = [];
  list<SubRegIndex> SubRegIndices = [];
  list<RegAltNameIndex> RegAltNameIndices = [];
  list<int> DwarfNumbers = [];
  int CostPerUse = 0;
  bit CoveredBySubRegs = 0;
  bits<16> HWEncoding = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string NAME = ?;
}
def A7 {	// Register TriCoreReg TriCoreDataReg
  field bits<4> Num = { 0, 1, 1, 1 };
  list<string> Register:altNames = [];
  string Namespace = "TriCore";
  string AsmName = "A7";
  list<string> AltNames = [];
  list<Register> Aliases = [];
  list<Register> SubRegs = [];
  list<SubRegIndex> SubRegIndices = [];
  list<RegAltNameIndex> RegAltNameIndices = [];
  list<int> DwarfNumbers = [];
  int CostPerUse = 0;
  bit CoveredBySubRegs = 0;
  bits<16> HWEncoding = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string NAME = ?;
}
def A8 {	// Register TriCoreReg TriCoreDataReg
  field bits<4> Num = { 1, 0, 0, 0 };
  list<string> Register:altNames = [];
  string Namespace = "TriCore";
  string AsmName = "A8";
  list<string> AltNames = [];
  list<Register> Aliases = [];
  list<Register> SubRegs = [];
  list<SubRegIndex> SubRegIndices = [];
  list<RegAltNameIndex> RegAltNameIndices = [];
  list<int> DwarfNumbers = [];
  int CostPerUse = 0;
  bit CoveredBySubRegs = 0;
  bits<16> HWEncoding = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string NAME = ?;
}
def A9 {	// Register TriCoreReg TriCoreDataReg
  field bits<4> Num = { 1, 0, 0, 1 };
  list<string> Register:altNames = [];
  string Namespace = "TriCore";
  string AsmName = "A9";
  list<string> AltNames = [];
  list<Register> Aliases = [];
  list<Register> SubRegs = [];
  list<SubRegIndex> SubRegIndices = [];
  list<RegAltNameIndex> RegAltNameIndices = [];
  list<int> DwarfNumbers = [];
  int CostPerUse = 0;
  bit CoveredBySubRegs = 0;
  bits<16> HWEncoding = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string NAME = ?;
}
def ADDCrr {	// Instruction InstTriCore T32 RR
  field bits<32> Inst = { d{3}, d{2}, d{1}, d{0}, 0, 0, 0, 0, 0, 0, 0, 0, ?, ?, n{1}, n{0}, s2{3}, s2{2}, s2{1}, s2{0}, s1{3}, s1{2}, s1{1}, s1{0}, 0, 0, 0, 0, 1, 0, 1, 1 };
  string Namespace = "TriCore";
  dag OutOperandList = (outs DataRegs:$d);
  dag InOperandList = (ins DataRegs:$s1, DataRegs:$s2);
  string AsmString = "addc $d, $s1, $s2";
  list<dag> Pattern = [(set DataRegs:$d, (addc DataRegs:$s1, DataRegs:$s2)), (implicit PSW)];
  list<Register> Uses = [];
  list<Register> Defs = [PSW];
  list<Predicate> Predicates = [];
  int Size = 4;
  string DecoderNamespace = "";
  int CodeSize = 0;
  int AddedComplexity = 0;
  bit isReturn = 0;
  bit isBranch = 0;
  bit isIndirectBranch = 0;
  bit isCompare = 0;
  bit isMoveImm = 0;
  bit isBitcast = 0;
  bit isSelect = 0;
  bit isBarrier = 0;
  bit isCall = 0;
  bit canFoldAsLoad = 0;
  bit mayLoad = ?;
  bit mayStore = ?;
  bit isConvertibleToThreeAddress = 0;
  bit isCommutable = 0;
  bit isTerminator = 0;
  bit isReMaterializable = 0;
  bit isPredicable = 0;
  bit hasDelaySlot = 0;
  bit usesCustomInserter = 0;
  bit hasPostISelHook = 0;
  bit hasCtrlDep = 0;
  bit isNotDuplicable = 0;
  bit isConvergent = 0;
  bit isAsCheapAsAMove = 0;
  bit hasExtraSrcRegAllocReq = 0;
  bit hasExtraDefRegAllocReq = 0;
  bit isRegSequence = 0;
  bit isPseudo = 0;
  bit isExtractSubreg = 0;
  bit isInsertSubreg = 0;
  bit hasSideEffects = ?;
  bit isCodeGenOnly = 0;
  bit isAsmParserOnly = 0;
  InstrItinClass Itinerary = NoItinerary;
  list<SchedReadWrite> SchedRW = ?;
  string Constraints = "";
  string DisableEncoding = "";
  string PostEncoderMethod = "";
  string DecoderMethod = "";
  bits<64> TSFlags = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string AsmMatchConverter = "";
  string TwoOperandAliasConstraint = "";
  bit UseNamedOperandTable = 0;
  bits<4> s1 = { ?, ?, ?, ? };
  bits<4> s2 = { ?, ?, ?, ? };
  bits<4> d = { ?, ?, ?, ? };
  bits<2> n = { ?, ? };
  string NAME = ?;
}
def ADDri {	// Instruction InstTriCore T32 RC
  field bits<32> Inst = { d{3}, d{2}, d{1}, d{0}, 0, 0, 0, 0, 0, 0, 0, const9{8}, const9{7}, const9{6}, const9{5}, const9{4}, const9{3}, const9{2}, const9{1}, const9{0}, s1{3}, s1{2}, s1{1}, s1{0}, 1, 0, 0, 0, 1, 0, 1, 1 };
  string Namespace = "TriCore";
  dag OutOperandList = (outs DataRegs:$d);
  dag InOperandList = (ins DataRegs:$s1, s9imm:$const9);
  string AsmString = "addi $d, $s1, $const9";
  list<dag> Pattern = [(set DataRegs:$d, (add DataRegs:$s1, immSExt9:$const9))];
  list<Register> Uses = [];
  list<Register> Defs = [];
  list<Predicate> Predicates = [];
  int Size = 4;
  string DecoderNamespace = "";
  int CodeSize = 0;
  int AddedComplexity = 0;
  bit isReturn = 0;
  bit isBranch = 0;
  bit isIndirectBranch = 0;
  bit isCompare = 0;
  bit isMoveImm = 0;
  bit isBitcast = 0;
  bit isSelect = 0;
  bit isBarrier = 0;
  bit isCall = 0;
  bit canFoldAsLoad = 0;
  bit mayLoad = ?;
  bit mayStore = ?;
  bit isConvertibleToThreeAddress = 0;
  bit isCommutable = 0;
  bit isTerminator = 0;
  bit isReMaterializable = 0;
  bit isPredicable = 0;
  bit hasDelaySlot = 0;
  bit usesCustomInserter = 0;
  bit hasPostISelHook = 0;
  bit hasCtrlDep = 0;
  bit isNotDuplicable = 0;
  bit isConvergent = 0;
  bit isAsCheapAsAMove = 0;
  bit hasExtraSrcRegAllocReq = 0;
  bit hasExtraDefRegAllocReq = 0;
  bit isRegSequence = 0;
  bit isPseudo = 0;
  bit isExtractSubreg = 0;
  bit isInsertSubreg = 0;
  bit hasSideEffects = ?;
  bit isCodeGenOnly = 0;
  bit isAsmParserOnly = 0;
  InstrItinClass Itinerary = NoItinerary;
  list<SchedReadWrite> SchedRW = ?;
  string Constraints = "";
  string DisableEncoding = "";
  string PostEncoderMethod = "";
  string DecoderMethod = "";
  bits<64> TSFlags = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string AsmMatchConverter = "";
  string TwoOperandAliasConstraint = "";
  bit UseNamedOperandTable = 0;
  bits<4> s1 = { ?, ?, ?, ? };
  bits<4> d = { ?, ?, ?, ? };
  bits<9> const9 = { ?, ?, ?, ?, ?, ?, ?, ?, ? };
  string NAME = ?;
}
def ADDrr {	// Instruction InstTriCore T32 RR
  field bits<32> Inst = { d{3}, d{2}, d{1}, d{0}, 0, 0, 0, 0, 0, 0, 0, 0, ?, ?, n{1}, n{0}, s2{3}, s2{2}, s2{1}, s2{0}, s1{3}, s1{2}, s1{1}, s1{0}, 0, 0, 0, 0, 1, 0, 1, 1 };
  string Namespace = "TriCore";
  dag OutOperandList = (outs DataRegs:$d);
  dag InOperandList = (ins DataRegs:$s1, DataRegs:$s2);
  string AsmString = "add $d, $s1, $s2";
  list<dag> Pattern = [(set DataRegs:$d, (add DataRegs:$s1, DataRegs:$s2))];
  list<Register> Uses = [];
  list<Register> Defs = [];
  list<Predicate> Predicates = [];
  int Size = 4;
  string DecoderNamespace = "";
  int CodeSize = 0;
  int AddedComplexity = 0;
  bit isReturn = 0;
  bit isBranch = 0;
  bit isIndirectBranch = 0;
  bit isCompare = 0;
  bit isMoveImm = 0;
  bit isBitcast = 0;
  bit isSelect = 0;
  bit isBarrier = 0;
  bit isCall = 0;
  bit canFoldAsLoad = 0;
  bit mayLoad = ?;
  bit mayStore = ?;
  bit isConvertibleToThreeAddress = 0;
  bit isCommutable = 0;
  bit isTerminator = 0;
  bit isReMaterializable = 0;
  bit isPredicable = 0;
  bit hasDelaySlot = 0;
  bit usesCustomInserter = 0;
  bit hasPostISelHook = 0;
  bit hasCtrlDep = 0;
  bit isNotDuplicable = 0;
  bit isConvergent = 0;
  bit isAsCheapAsAMove = 0;
  bit hasExtraSrcRegAllocReq = 0;
  bit hasExtraDefRegAllocReq = 0;
  bit isRegSequence = 0;
  bit isPseudo = 0;
  bit isExtractSubreg = 0;
  bit isInsertSubreg = 0;
  bit hasSideEffects = ?;
  bit isCodeGenOnly = 0;
  bit isAsmParserOnly = 0;
  InstrItinClass Itinerary = NoItinerary;
  list<SchedReadWrite> SchedRW = ?;
  string Constraints = "";
  string DisableEncoding = "";
  string PostEncoderMethod = "";
  string DecoderMethod = "";
  bits<64> TSFlags = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string AsmMatchConverter = "";
  string TwoOperandAliasConstraint = "";
  bit UseNamedOperandTable = 0;
  bits<4> s1 = { ?, ?, ?, ? };
  bits<4> s2 = { ?, ?, ?, ? };
  bits<4> d = { ?, ?, ?, ? };
  bits<2> n = { ?, ? };
  string NAME = ?;
}
def ADJCALLSTACKDOWN {	// Instruction InstTriCore TriCorePseudoInst
  string Namespace = "TriCore";
  dag OutOperandList = (outs);
  dag InOperandList = (ins i32imm:$amt);
  string AsmString = "# ADJCALLSTACKDOWN $amt";
  list<dag> Pattern = [(callseq_start timm:$amt)];
  list<Register> Uses = [A10];
  list<Register> Defs = [A10];
  list<Predicate> Predicates = [];
  int Size = 0;
  string DecoderNamespace = "";
  int CodeSize = 0;
  int AddedComplexity = 0;
  bit isReturn = 0;
  bit isBranch = 0;
  bit isIndirectBranch = 0;
  bit isCompare = 0;
  bit isMoveImm = 0;
  bit isBitcast = 0;
  bit isSelect = 0;
  bit isBarrier = 0;
  bit isCall = 0;
  bit canFoldAsLoad = 0;
  bit mayLoad = ?;
  bit mayStore = ?;
  bit isConvertibleToThreeAddress = 0;
  bit isCommutable = 0;
  bit isTerminator = 0;
  bit isReMaterializable = 0;
  bit isPredicable = 0;
  bit hasDelaySlot = 0;
  bit usesCustomInserter = 0;
  bit hasPostISelHook = 0;
  bit hasCtrlDep = 0;
  bit isNotDuplicable = 0;
  bit isConvergent = 0;
  bit isAsCheapAsAMove = 0;
  bit hasExtraSrcRegAllocReq = 0;
  bit hasExtraDefRegAllocReq = 0;
  bit isRegSequence = 0;
  bit isPseudo = 1;
  bit isExtractSubreg = 0;
  bit isInsertSubreg = 0;
  bit hasSideEffects = ?;
  bit isCodeGenOnly = 0;
  bit isAsmParserOnly = 0;
  InstrItinClass Itinerary = NoItinerary;
  list<SchedReadWrite> SchedRW = ?;
  string Constraints = "";
  string DisableEncoding = "";
  string PostEncoderMethod = "";
  string DecoderMethod = "";
  bits<64> TSFlags = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string AsmMatchConverter = "";
  string TwoOperandAliasConstraint = "";
  bit UseNamedOperandTable = 0;
  string NAME = ?;
}
def ADJCALLSTACKUP {	// Instruction InstTriCore TriCorePseudoInst
  string Namespace = "TriCore";
  dag OutOperandList = (outs);
  dag InOperandList = (ins i32imm:$amt1, i32imm:$amt2);
  string AsmString = "# ADJCALLSTACKUP $amt1";
  list<dag> Pattern = [(callseq_end timm:$amt1, timm:$amt2)];
  list<Register> Uses = [A10];
  list<Register> Defs = [A10];
  list<Predicate> Predicates = [];
  int Size = 0;
  string DecoderNamespace = "";
  int CodeSize = 0;
  int AddedComplexity = 0;
  bit isReturn = 0;
  bit isBranch = 0;
  bit isIndirectBranch = 0;
  bit isCompare = 0;
  bit isMoveImm = 0;
  bit isBitcast = 0;
  bit isSelect = 0;
  bit isBarrier = 0;
  bit isCall = 0;
  bit canFoldAsLoad = 0;
  bit mayLoad = ?;
  bit mayStore = ?;
  bit isConvertibleToThreeAddress = 0;
  bit isCommutable = 0;
  bit isTerminator = 0;
  bit isReMaterializable = 0;
  bit isPredicable = 0;
  bit hasDelaySlot = 0;
  bit usesCustomInserter = 0;
  bit hasPostISelHook = 0;
  bit hasCtrlDep = 0;
  bit isNotDuplicable = 0;
  bit isConvergent = 0;
  bit isAsCheapAsAMove = 0;
  bit hasExtraSrcRegAllocReq = 0;
  bit hasExtraDefRegAllocReq = 0;
  bit isRegSequence = 0;
  bit isPseudo = 1;
  bit isExtractSubreg = 0;
  bit isInsertSubreg = 0;
  bit hasSideEffects = ?;
  bit isCodeGenOnly = 0;
  bit isAsmParserOnly = 0;
  InstrItinClass Itinerary = NoItinerary;
  list<SchedReadWrite> SchedRW = ?;
  string Constraints = "";
  string DisableEncoding = "";
  string PostEncoderMethod = "";
  string DecoderMethod = "";
  bits<64> TSFlags = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string AsmMatchConverter = "";
  string TwoOperandAliasConstraint = "";
  bit UseNamedOperandTable = 0;
  string NAME = ?;
}
def ANDrc {	// Instruction InstTriCore T32 RC rc
  field bits<32> Inst = { d{3}, d{2}, d{1}, d{0}, 0, 0, 0, 1, 0, 0, 0, const9{8}, const9{7}, const9{6}, const9{5}, const9{4}, const9{3}, const9{2}, const9{1}, const9{0}, s1{3}, s1{2}, s1{1}, s1{0}, 1, 0, 0, 0, 1, 1, 1, 1 };
  string Namespace = "TriCore";
  dag OutOperandList = (outs DataRegs:$d);
  dag InOperandList = (ins DataRegs:$s1, u9imm:$const9);
  string AsmString = "and $d, $s1, $const9";
  list<dag> Pattern = [(set DataRegs:$d, (and DataRegs:$s1, immZExt9:$const9))];
  list<Register> Uses = [];
  list<Register> Defs = [];
  list<Predicate> Predicates = [];
  int Size = 4;
  string DecoderNamespace = "";
  int CodeSize = 0;
  int AddedComplexity = 0;
  bit isReturn = 0;
  bit isBranch = 0;
  bit isIndirectBranch = 0;
  bit isCompare = 0;
  bit isMoveImm = 0;
  bit isBitcast = 0;
  bit isSelect = 0;
  bit isBarrier = 0;
  bit isCall = 0;
  bit canFoldAsLoad = 0;
  bit mayLoad = ?;
  bit mayStore = ?;
  bit isConvertibleToThreeAddress = 0;
  bit isCommutable = 0;
  bit isTerminator = 0;
  bit isReMaterializable = 0;
  bit isPredicable = 0;
  bit hasDelaySlot = 0;
  bit usesCustomInserter = 0;
  bit hasPostISelHook = 0;
  bit hasCtrlDep = 0;
  bit isNotDuplicable = 0;
  bit isConvergent = 0;
  bit isAsCheapAsAMove = 0;
  bit hasExtraSrcRegAllocReq = 0;
  bit hasExtraDefRegAllocReq = 0;
  bit isRegSequence = 0;
  bit isPseudo = 0;
  bit isExtractSubreg = 0;
  bit isInsertSubreg = 0;
  bit hasSideEffects = ?;
  bit isCodeGenOnly = 0;
  bit isAsmParserOnly = 0;
  InstrItinClass Itinerary = NoItinerary;
  list<SchedReadWrite> SchedRW = ?;
  string Constraints = "";
  string DisableEncoding = "";
  string PostEncoderMethod = "";
  string DecoderMethod = "";
  bits<64> TSFlags = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string AsmMatchConverter = "";
  string TwoOperandAliasConstraint = "";
  bit UseNamedOperandTable = 0;
  bits<4> s1 = { ?, ?, ?, ? };
  bits<4> d = { ?, ?, ?, ? };
  bits<9> const9 = { ?, ?, ?, ?, ?, ?, ?, ?, ? };
  bit Logical32_0::isComm = 0;
  string NAME = "AND";
}
def ANDrr {	// Instruction InstTriCore T32 RR rr
  field bits<32> Inst = { d{3}, d{2}, d{1}, d{0}, 0, 0, 0, 0, 1, 0, 0, 0, ?, ?, n{1}, n{0}, s2{3}, s2{2}, s2{1}, s2{0}, s1{3}, s1{2}, s1{1}, s1{0}, 0, 0, 0, 0, 1, 1, 1, 1 };
  string Namespace = "TriCore";
  dag OutOperandList = (outs DataRegs:$d);
  dag InOperandList = (ins DataRegs:$s1, DataRegs:$s2);
  string AsmString = "and $d, $s1, $s2";
  list<dag> Pattern = [(set DataRegs:$d, (and DataRegs:$s1, DataRegs:$s2))];
  list<Register> Uses = [];
  list<Register> Defs = [];
  list<Predicate> Predicates = [];
  int Size = 4;
  string DecoderNamespace = "";
  int CodeSize = 0;
  int AddedComplexity = 0;
  bit isReturn = 0;
  bit isBranch = 0;
  bit isIndirectBranch = 0;
  bit isCompare = 0;
  bit isMoveImm = 0;
  bit isBitcast = 0;
  bit isSelect = 0;
  bit isBarrier = 0;
  bit isCall = 0;
  bit canFoldAsLoad = 0;
  bit mayLoad = ?;
  bit mayStore = ?;
  bit isConvertibleToThreeAddress = 0;
  bit isCommutable = 0;
  bit isTerminator = 0;
  bit isReMaterializable = 0;
  bit isPredicable = 0;
  bit hasDelaySlot = 0;
  bit usesCustomInserter = 0;
  bit hasPostISelHook = 0;
  bit hasCtrlDep = 0;
  bit isNotDuplicable = 0;
  bit isConvergent = 0;
  bit isAsCheapAsAMove = 0;
  bit hasExtraSrcRegAllocReq = 0;
  bit hasExtraDefRegAllocReq = 0;
  bit isRegSequence = 0;
  bit isPseudo = 0;
  bit isExtractSubreg = 0;
  bit isInsertSubreg = 0;
  bit hasSideEffects = ?;
  bit isCodeGenOnly = 0;
  bit isAsmParserOnly = 0;
  InstrItinClass Itinerary = NoItinerary;
  list<SchedReadWrite> SchedRW = ?;
  string Constraints = "";
  string DisableEncoding = "";
  string PostEncoderMethod = "";
  string DecoderMethod = "";
  bits<64> TSFlags = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string AsmMatchConverter = "";
  string TwoOperandAliasConstraint = "";
  bit UseNamedOperandTable = 0;
  bits<4> s1 = { ?, ?, ?, ? };
  bits<4> s2 = { ?, ?, ?, ? };
  bits<4> d = { ?, ?, ?, ? };
  bits<2> n = { ?, ? };
  bit Logical32_0::isComm = 0;
  string NAME = "AND";
}
def ANDsc {	// Instruction InstTriCore T16 SC sc
  field bits<16> Inst = { const8{7}, const8{6}, const8{5}, const8{4}, const8{3}, const8{2}, const8{1}, const8{0}, 0, 0, 0, 1, 0, 1, 1, 0 };
  string Namespace = "TriCore";
  dag OutOperandList = (outs DataRegs:$d);
  dag InOperandList = (ins DataRegs:$s1, u8imm:$const8);
  string AsmString = "and $d, $s1, $const8";
  list<dag> Pattern = [(set DataRegs:$d, (and DataRegs:$s1, immZExt8:$const8))];
  list<Register> Uses = [];
  list<Register> Defs = [];
  list<Predicate> Predicates = [];
  int Size = 2;
  string DecoderNamespace = "";
  int CodeSize = 0;
  int AddedComplexity = 0;
  bit isReturn = 0;
  bit isBranch = 0;
  bit isIndirectBranch = 0;
  bit isCompare = 0;
  bit isMoveImm = 0;
  bit isBitcast = 0;
  bit isSelect = 0;
  bit isBarrier = 0;
  bit isCall = 0;
  bit canFoldAsLoad = 0;
  bit mayLoad = ?;
  bit mayStore = ?;
  bit isConvertibleToThreeAddress = 0;
  bit isCommutable = 0;
  bit isTerminator = 0;
  bit isReMaterializable = 0;
  bit isPredicable = 0;
  bit hasDelaySlot = 0;
  bit usesCustomInserter = 0;
  bit hasPostISelHook = 0;
  bit hasCtrlDep = 0;
  bit isNotDuplicable = 0;
  bit isConvergent = 0;
  bit isAsCheapAsAMove = 0;
  bit hasExtraSrcRegAllocReq = 0;
  bit hasExtraDefRegAllocReq = 0;
  bit isRegSequence = 0;
  bit isPseudo = 0;
  bit isExtractSubreg = 0;
  bit isInsertSubreg = 0;
  bit hasSideEffects = ?;
  bit isCodeGenOnly = 0;
  bit isAsmParserOnly = 0;
  InstrItinClass Itinerary = NoItinerary;
  list<SchedReadWrite> SchedRW = ?;
  string Constraints = "";
  string DisableEncoding = "";
  string PostEncoderMethod = "";
  string DecoderMethod = "";
  bits<64> TSFlags = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string AsmMatchConverter = "";
  string TwoOperandAliasConstraint = "";
  bit UseNamedOperandTable = 0;
  bits<8> const8 = { ?, ?, ?, ?, ?, ?, ?, ? };
  bit Logical16::isComm = 0;
  string NAME = "AND";
}
def ANDsrr {	// Instruction InstTriCore T16 SRR srr
  field bits<16> Inst = { s2{3}, s2{2}, s2{1}, s2{0}, s1{3}, s1{2}, s1{1}, s1{0}, 0, 0, 1, 0, 0, 1, 1, 0 };
  string Namespace = "TriCore";
  dag OutOperandList = (outs DataRegs:$d);
  dag InOperandList = (ins DataRegs:$s1, DataRegs:$s2);
  string AsmString = "and $d, $s1, $s2";
  list<dag> Pattern = [(set DataRegs:$d, (and DataRegs:$s1, DataRegs:$s2))];
  list<Register> Uses = [];
  list<Register> Defs = [];
  list<Predicate> Predicates = [];
  int Size = 2;
  string DecoderNamespace = "";
  int CodeSize = 0;
  int AddedComplexity = 0;
  bit isReturn = 0;
  bit isBranch = 0;
  bit isIndirectBranch = 0;
  bit isCompare = 0;
  bit isMoveImm = 0;
  bit isBitcast = 0;
  bit isSelect = 0;
  bit isBarrier = 0;
  bit isCall = 0;
  bit canFoldAsLoad = 0;
  bit mayLoad = ?;
  bit mayStore = ?;
  bit isConvertibleToThreeAddress = 0;
  bit isCommutable = 0;
  bit isTerminator = 0;
  bit isReMaterializable = 0;
  bit isPredicable = 0;
  bit hasDelaySlot = 0;
  bit usesCustomInserter = 0;
  bit hasPostISelHook = 0;
  bit hasCtrlDep = 0;
  bit isNotDuplicable = 0;
  bit isConvergent = 0;
  bit isAsCheapAsAMove = 0;
  bit hasExtraSrcRegAllocReq = 0;
  bit hasExtraDefRegAllocReq = 0;
  bit isRegSequence = 0;
  bit isPseudo = 0;
  bit isExtractSubreg = 0;
  bit isInsertSubreg = 0;
  bit hasSideEffects = ?;
  bit isCodeGenOnly = 0;
  bit isAsmParserOnly = 0;
  InstrItinClass Itinerary = NoItinerary;
  list<SchedReadWrite> SchedRW = ?;
  string Constraints = "$s1 = $d";
  string DisableEncoding = "";
  string PostEncoderMethod = "";
  string DecoderMethod = "";
  bits<64> TSFlags = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string AsmMatchConverter = "";
  string TwoOperandAliasConstraint = "";
  bit UseNamedOperandTable = 0;
  bits<4> s1 = { ?, ?, ?, ? };
  bits<4> s2 = { ?, ?, ?, ? };
  bit Logical16::isComm = 0;
  string NAME = "AND";
}
def AddrRegs {	// DAGOperand RegisterClass
  RegAltNameIndex RegisterClass:idx = NoRegAltName;
  string Namespace = "TriCore";
  list<ValueType> RegTypes = [i32];
  int Size = 0;
  int Alignment = 32;
  int CopyCost = 1;
  dag MemberList = (add A0, A1, A8, A9, A10, A11, A15, A2, A3, A4, A5, A6, A7, A12, A13, A14);
  RegAltNameIndex altNameIndex = NoRegAltName;
  bit isAllocatable = 1;
  list<dag> AltOrders = [];
  string AltOrderSelect = "";
  int AllocationPriority = 0;
  string NAME = ?;
}
def AddrRegsOthers {	// DAGOperand RegisterClass
  RegAltNameIndex RegisterClass:idx = NoRegAltName;
  string Namespace = "TriCore";
  list<ValueType> RegTypes = [i32];
  int Size = 0;
  int Alignment = 32;
  int CopyCost = 1;
  dag MemberList = (add A2, A3, A4, A5, A6, A7, A12, A13, A14);
  RegAltNameIndex altNameIndex = NoRegAltName;
  bit isAllocatable = 1;
  list<dag> AltOrders = [];
  string AltOrderSelect = "";
  int AllocationPriority = 0;
  string NAME = ?;
}
def Any {	// ValueType
  string Namespace = "MVT";
  int Size = 0;
  int Value = 256;
  string NAME = ?;
}
def BUNDLE {	// Instruction
  string Namespace = "TargetOpcode";
  dag OutOperandList = (outs);
  dag InOperandList = (ins variable_ops);
  string AsmString = "BUNDLE";
  list<dag> Pattern = ?;
  list<Register> Uses = [];
  list<Register> Defs = [];
  list<Predicate> Predicates = [];
  int Size = 0;
  string DecoderNamespace = "";
  int CodeSize = 0;
  int AddedComplexity = 0;
  bit isReturn = 0;
  bit isBranch = 0;
  bit isIndirectBranch = 0;
  bit isCompare = 0;
  bit isMoveImm = 0;
  bit isBitcast = 0;
  bit isSelect = 0;
  bit isBarrier = 0;
  bit isCall = 0;
  bit canFoldAsLoad = 0;
  bit mayLoad = ?;
  bit mayStore = ?;
  bit isConvertibleToThreeAddress = 0;
  bit isCommutable = 0;
  bit isTerminator = 0;
  bit isReMaterializable = 0;
  bit isPredicable = 0;
  bit hasDelaySlot = 0;
  bit usesCustomInserter = 0;
  bit hasPostISelHook = 0;
  bit hasCtrlDep = 0;
  bit isNotDuplicable = 0;
  bit isConvergent = 0;
  bit isAsCheapAsAMove = 0;
  bit hasExtraSrcRegAllocReq = 0;
  bit hasExtraDefRegAllocReq = 0;
  bit isRegSequence = 0;
  bit isPseudo = 1;
  bit isExtractSubreg = 0;
  bit isInsertSubreg = 0;
  bit hasSideEffects = ?;
  bit isCodeGenOnly = 1;
  bit isAsmParserOnly = 0;
  InstrItinClass Itinerary = NoItinerary;
  list<SchedReadWrite> SchedRW = ?;
  string Constraints = "";
  string DisableEncoding = "";
  string PostEncoderMethod = "";
  string DecoderMethod = "";
  bits<64> TSFlags = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string AsmMatchConverter = "";
  string TwoOperandAliasConstraint = "";
  bit UseNamedOperandTable = 0;
  string NAME = ?;
}
def CC_TriCore {	// CallingConv
  list<CCAction> Actions = [anonymous_495, anonymous_497, anonymous_498];
  bit Custom = 0;
  string NAME = ?;
}
def CC_TriCore_StackModel {	// CallingConv
  list<CCAction> Actions = [anonymous_487];
  bit Custom = 0;
  string NAME = ?;
}
def CFI_INSTRUCTION {	// Instruction
  string Namespace = "TargetOpcode";
  dag OutOperandList = (outs);
  dag InOperandList = (ins i32imm:$id);
  string AsmString = "";
  list<dag> Pattern = ?;
  list<Register> Uses = [];
  list<Register> Defs = [];
  list<Predicate> Predicates = [];
  int Size = 0;
  string DecoderNamespace = "";
  int CodeSize = 0;
  int AddedComplexity = 0;
  bit isReturn = 0;
  bit isBranch = 0;
  bit isIndirectBranch = 0;
  bit isCompare = 0;
  bit isMoveImm = 0;
  bit isBitcast = 0;
  bit isSelect = 0;
  bit isBarrier = 0;
  bit isCall = 0;
  bit canFoldAsLoad = 0;
  bit mayLoad = ?;
  bit mayStore = ?;
  bit isConvertibleToThreeAddress = 0;
  bit isCommutable = 0;
  bit isTerminator = 0;
  bit isReMaterializable = 0;
  bit isPredicable = 0;
  bit hasDelaySlot = 0;
  bit usesCustomInserter = 0;
  bit hasPostISelHook = 0;
  bit hasCtrlDep = 1;
  bit isNotDuplicable = 1;
  bit isConvergent = 0;
  bit isAsCheapAsAMove = 0;
  bit hasExtraSrcRegAllocReq = 0;
  bit hasExtraDefRegAllocReq = 0;
  bit isRegSequence = 0;
  bit isPseudo = 1;
  bit isExtractSubreg = 0;
  bit isInsertSubreg = 0;
  bit hasSideEffects = ?;
  bit isCodeGenOnly = 1;
  bit isAsmParserOnly = 0;
  InstrItinClass Itinerary = NoItinerary;
  list<SchedReadWrite> SchedRW = ?;
  string Constraints = "";
  string DisableEncoding = "";
  string PostEncoderMethod = "";
  string DecoderMethod = "";
  bits<64> TSFlags = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string AsmMatchConverter = "";
  string TwoOperandAliasConstraint = "";
  bit UseNamedOperandTable = 0;
  string NAME = ?;
}
def CMPri {	// Instruction InstTriCore T32 RC
  field bits<32> Inst = { d{3}, d{2}, d{1}, d{0}, 0, 0, 1, 0, 1, 0, 0, const9{8}, const9{7}, const9{6}, const9{5}, const9{4}, const9{3}, const9{2}, const9{1}, const9{0}, s1{3}, s1{2}, s1{1}, s1{0}, 0, 0, 0, 0, 1, 0, 1, 1 };
  string Namespace = "TriCore";
  dag OutOperandList = (outs DataRegs:$d);
  dag InOperandList = (ins DataRegs:$s1, s9imm:$const9);
  string AsmString = "cmp $d, $s1, $const9";
  list<dag> Pattern = [(set i32:$d, (TriCorecmpb i32:$s1, immSExt9:$const9))];
  list<Register> Uses = [];
  list<Register> Defs = [];
  list<Predicate> Predicates = [];
  int Size = 4;
  string DecoderNamespace = "";
  int CodeSize = 0;
  int AddedComplexity = 0;
  bit isReturn = 0;
  bit isBranch = 0;
  bit isIndirectBranch = 0;
  bit isCompare = 0;
  bit isMoveImm = 0;
  bit isBitcast = 0;
  bit isSelect = 0;
  bit isBarrier = 0;
  bit isCall = 0;
  bit canFoldAsLoad = 0;
  bit mayLoad = ?;
  bit mayStore = ?;
  bit isConvertibleToThreeAddress = 0;
  bit isCommutable = 0;
  bit isTerminator = 0;
  bit isReMaterializable = 0;
  bit isPredicable = 0;
  bit hasDelaySlot = 0;
  bit usesCustomInserter = 0;
  bit hasPostISelHook = 0;
  bit hasCtrlDep = 0;
  bit isNotDuplicable = 0;
  bit isConvergent = 0;
  bit isAsCheapAsAMove = 0;
  bit hasExtraSrcRegAllocReq = 0;
  bit hasExtraDefRegAllocReq = 0;
  bit isRegSequence = 0;
  bit isPseudo = 0;
  bit isExtractSubreg = 0;
  bit isInsertSubreg = 0;
  bit hasSideEffects = ?;
  bit isCodeGenOnly = 0;
  bit isAsmParserOnly = 0;
  InstrItinClass Itinerary = NoItinerary;
  list<SchedReadWrite> SchedRW = ?;
  string Constraints = "";
  string DisableEncoding = "";
  string PostEncoderMethod = "";
  string DecoderMethod = "";
  bits<64> TSFlags = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string AsmMatchConverter = "";
  string TwoOperandAliasConstraint = "";
  bit UseNamedOperandTable = 0;
  bits<4> s1 = { ?, ?, ?, ? };
  bits<4> d = { ?, ?, ?, ? };
  bits<9> const9 = { ?, ?, ?, ?, ?, ?, ?, ?, ? };
  string NAME = ?;
}
def CMPrr {	// Instruction InstTriCore T32 RR
  field bits<32> Inst = { d{3}, d{2}, d{1}, d{0}, 0, 0, 0, 1, 0, 1, 0, 0, ?, ?, n{1}, n{0}, s2{3}, s2{2}, s2{1}, s2{0}, s1{3}, s1{2}, s1{1}, s1{0}, 0, 0, 0, 0, 0, 0, 0, 0 };
  string Namespace = "TriCore";
  dag OutOperandList = (outs DataRegs:$d);
  dag InOperandList = (ins DataRegs:$s1, DataRegs:$s2);
  string AsmString = "cmp $d, $s1, $s2";
  list<dag> Pattern = [(set i32:$d, (TriCorecmpb DataRegs:$s1, DataRegs:$s2))];
  list<Register> Uses = [];
  list<Register> Defs = [];
  list<Predicate> Predicates = [];
  int Size = 4;
  string DecoderNamespace = "";
  int CodeSize = 0;
  int AddedComplexity = 0;
  bit isReturn = 0;
  bit isBranch = 0;
  bit isIndirectBranch = 0;
  bit isCompare = 0;
  bit isMoveImm = 0;
  bit isBitcast = 0;
  bit isSelect = 0;
  bit isBarrier = 0;
  bit isCall = 0;
  bit canFoldAsLoad = 0;
  bit mayLoad = ?;
  bit mayStore = ?;
  bit isConvertibleToThreeAddress = 0;
  bit isCommutable = 0;
  bit isTerminator = 0;
  bit isReMaterializable = 0;
  bit isPredicable = 0;
  bit hasDelaySlot = 0;
  bit usesCustomInserter = 0;
  bit hasPostISelHook = 0;
  bit hasCtrlDep = 0;
  bit isNotDuplicable = 0;
  bit isConvergent = 0;
  bit isAsCheapAsAMove = 0;
  bit hasExtraSrcRegAllocReq = 0;
  bit hasExtraDefRegAllocReq = 0;
  bit isRegSequence = 0;
  bit isPseudo = 0;
  bit isExtractSubreg = 0;
  bit isInsertSubreg = 0;
  bit hasSideEffects = ?;
  bit isCodeGenOnly = 0;
  bit isAsmParserOnly = 0;
  InstrItinClass Itinerary = NoItinerary;
  list<SchedReadWrite> SchedRW = ?;
  string Constraints = "";
  string DisableEncoding = "";
  string PostEncoderMethod = "";
  string DecoderMethod = "";
  bits<64> TSFlags = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string AsmMatchConverter = "";
  string TwoOperandAliasConstraint = "";
  bit UseNamedOperandTable = 0;
  bits<4> s1 = { ?, ?, ?, ? };
  bits<4> s2 = { ?, ?, ?, ? };
  bits<4> d = { ?, ?, ?, ? };
  bits<2> n = { ?, ? };
  string NAME = ?;
}
def COPY {	// Instruction
  string Namespace = "TargetOpcode";
  dag OutOperandList = (outs unknown:$dst);
  dag InOperandList = (ins unknown:$src);
  string AsmString = "";
  list<dag> Pattern = ?;
  list<Register> Uses = [];
  list<Register> Defs = [];
  list<Predicate> Predicates = [];
  int Size = 0;
  string DecoderNamespace = "";
  int CodeSize = 0;
  int AddedComplexity = 0;
  bit isReturn = 0;
  bit isBranch = 0;
  bit isIndirectBranch = 0;
  bit isCompare = 0;
  bit isMoveImm = 0;
  bit isBitcast = 0;
  bit isSelect = 0;
  bit isBarrier = 0;
  bit isCall = 0;
  bit canFoldAsLoad = 0;
  bit mayLoad = ?;
  bit mayStore = ?;
  bit isConvertibleToThreeAddress = 0;
  bit isCommutable = 0;
  bit isTerminator = 0;
  bit isReMaterializable = 0;
  bit isPredicable = 0;
  bit hasDelaySlot = 0;
  bit usesCustomInserter = 0;
  bit hasPostISelHook = 0;
  bit hasCtrlDep = 0;
  bit isNotDuplicable = 0;
  bit isConvergent = 0;
  bit isAsCheapAsAMove = 1;
  bit hasExtraSrcRegAllocReq = 0;
  bit hasExtraDefRegAllocReq = 0;
  bit isRegSequence = 0;
  bit isPseudo = 1;
  bit isExtractSubreg = 0;
  bit isInsertSubreg = 0;
  bit hasSideEffects = 0;
  bit isCodeGenOnly = 1;
  bit isAsmParserOnly = 0;
  InstrItinClass Itinerary = NoItinerary;
  list<SchedReadWrite> SchedRW = ?;
  string Constraints = "";
  string DisableEncoding = "";
  string PostEncoderMethod = "";
  string DecoderMethod = "";
  bits<64> TSFlags = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string AsmMatchConverter = "";
  string TwoOperandAliasConstraint = "";
  bit UseNamedOperandTable = 0;
  string NAME = ?;
}
def COPY_TO_REGCLASS {	// Instruction
  string Namespace = "TargetOpcode";
  dag OutOperandList = (outs unknown:$dst);
  dag InOperandList = (ins unknown:$src, i32imm:$regclass);
  string AsmString = "";
  list<dag> Pattern = ?;
  list<Register> Uses = [];
  list<Register> Defs = [];
  list<Predicate> Predicates = [];
  int Size = 0;
  string DecoderNamespace = "";
  int CodeSize = 0;
  int AddedComplexity = 0;
  bit isReturn = 0;
  bit isBranch = 0;
  bit isIndirectBranch = 0;
  bit isCompare = 0;
  bit isMoveImm = 0;
  bit isBitcast = 0;
  bit isSelect = 0;
  bit isBarrier = 0;
  bit isCall = 0;
  bit canFoldAsLoad = 0;
  bit mayLoad = ?;
  bit mayStore = ?;
  bit isConvertibleToThreeAddress = 0;
  bit isCommutable = 0;
  bit isTerminator = 0;
  bit isReMaterializable = 0;
  bit isPredicable = 0;
  bit hasDelaySlot = 0;
  bit usesCustomInserter = 0;
  bit hasPostISelHook = 0;
  bit hasCtrlDep = 0;
  bit isNotDuplicable = 0;
  bit isConvergent = 0;
  bit isAsCheapAsAMove = 1;
  bit hasExtraSrcRegAllocReq = 0;
  bit hasExtraDefRegAllocReq = 0;
  bit isRegSequence = 0;
  bit isPseudo = 1;
  bit isExtractSubreg = 0;
  bit isInsertSubreg = 0;
  bit hasSideEffects = 0;
  bit isCodeGenOnly = 1;
  bit isAsmParserOnly = 0;
  InstrItinClass Itinerary = NoItinerary;
  list<SchedReadWrite> SchedRW = ?;
  string Constraints = "";
  string DisableEncoding = "";
  string PostEncoderMethod = "";
  string DecoderMethod = "";
  bits<64> TSFlags = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string AsmMatchConverter = "";
  string TwoOperandAliasConstraint = "";
  bit UseNamedOperandTable = 0;
  string NAME = ?;
}
def Commutative {	// IntrinsicProperty
  string NAME = ?;
}
def D0 {	// Register TriCoreReg TriCoreDataReg DwarfRegNum
  field bits<4> Num = { 0, 0, 0, 0 };
  list<string> Register:altNames = [];
  string Namespace = "TriCore";
  string AsmName = "D0";
  list<string> AltNames = [];
  list<Register> Aliases = [];
  list<Register> SubRegs = [];
  list<SubRegIndex> SubRegIndices = [];
  list<RegAltNameIndex> RegAltNameIndices = [];
  list<int> DwarfNumbers = [0];
  int CostPerUse = 0;
  bit CoveredBySubRegs = 0;
  bits<16> HWEncoding = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string NAME = ?;
}
def D1 {	// Register TriCoreReg TriCoreDataReg DwarfRegNum
  field bits<4> Num = { 0, 0, 0, 1 };
  list<string> Register:altNames = [];
  string Namespace = "TriCore";
  string AsmName = "D1";
  list<string> AltNames = [];
  list<Register> Aliases = [];
  list<Register> SubRegs = [];
  list<SubRegIndex> SubRegIndices = [];
  list<RegAltNameIndex> RegAltNameIndices = [];
  list<int> DwarfNumbers = [1];
  int CostPerUse = 0;
  bit CoveredBySubRegs = 0;
  bits<16> HWEncoding = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string NAME = ?;
}
def D10 {	// Register TriCoreReg TriCoreDataReg DwarfRegNum
  field bits<4> Num = { 1, 0, 1, 0 };
  list<string> Register:altNames = [];
  string Namespace = "TriCore";
  string AsmName = "D10";
  list<string> AltNames = [];
  list<Register> Aliases = [];
  list<Register> SubRegs = [];
  list<SubRegIndex> SubRegIndices = [];
  list<RegAltNameIndex> RegAltNameIndices = [];
  list<int> DwarfNumbers = [10];
  int CostPerUse = 0;
  bit CoveredBySubRegs = 0;
  bits<16> HWEncoding = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string NAME = ?;
}
def D11 {	// Register TriCoreReg TriCoreDataReg DwarfRegNum
  field bits<4> Num = { 1, 0, 1, 1 };
  list<string> Register:altNames = [];
  string Namespace = "TriCore";
  string AsmName = "D11";
  list<string> AltNames = [];
  list<Register> Aliases = [];
  list<Register> SubRegs = [];
  list<SubRegIndex> SubRegIndices = [];
  list<RegAltNameIndex> RegAltNameIndices = [];
  list<int> DwarfNumbers = [11];
  int CostPerUse = 0;
  bit CoveredBySubRegs = 0;
  bits<16> HWEncoding = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string NAME = ?;
}
def D12 {	// Register TriCoreReg TriCoreDataReg DwarfRegNum
  field bits<4> Num = { 1, 1, 0, 0 };
  list<string> Register:altNames = [];
  string Namespace = "TriCore";
  string AsmName = "D12";
  list<string> AltNames = [];
  list<Register> Aliases = [];
  list<Register> SubRegs = [];
  list<SubRegIndex> SubRegIndices = [];
  list<RegAltNameIndex> RegAltNameIndices = [];
  list<int> DwarfNumbers = [12];
  int CostPerUse = 0;
  bit CoveredBySubRegs = 0;
  bits<16> HWEncoding = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string NAME = ?;
}
def D13 {	// Register TriCoreReg TriCoreDataReg DwarfRegNum
  field bits<4> Num = { 1, 1, 0, 1 };
  list<string> Register:altNames = [];
  string Namespace = "TriCore";
  string AsmName = "D13";
  list<string> AltNames = [];
  list<Register> Aliases = [];
  list<Register> SubRegs = [];
  list<SubRegIndex> SubRegIndices = [];
  list<RegAltNameIndex> RegAltNameIndices = [];
  list<int> DwarfNumbers = [13];
  int CostPerUse = 0;
  bit CoveredBySubRegs = 0;
  bits<16> HWEncoding = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string NAME = ?;
}
def D14 {	// Register TriCoreReg TriCoreDataReg DwarfRegNum
  field bits<4> Num = { 1, 1, 1, 0 };
  list<string> Register:altNames = [];
  string Namespace = "TriCore";
  string AsmName = "D14";
  list<string> AltNames = [];
  list<Register> Aliases = [];
  list<Register> SubRegs = [];
  list<SubRegIndex> SubRegIndices = [];
  list<RegAltNameIndex> RegAltNameIndices = [];
  list<int> DwarfNumbers = [14];
  int CostPerUse = 0;
  bit CoveredBySubRegs = 0;
  bits<16> HWEncoding = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string NAME = ?;
}
def D15 {	// Register TriCoreReg TriCoreDataReg DwarfRegNum
  field bits<4> Num = { 1, 1, 1, 1 };
  list<string> Register:altNames = [];
  string Namespace = "TriCore";
  string AsmName = "D15";
  list<string> AltNames = [];
  list<Register> Aliases = [];
  list<Register> SubRegs = [];
  list<SubRegIndex> SubRegIndices = [];
  list<RegAltNameIndex> RegAltNameIndices = [];
  list<int> DwarfNumbers = [15];
  int CostPerUse = 0;
  bit CoveredBySubRegs = 0;
  bits<16> HWEncoding = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string NAME = ?;
}
def D2 {	// Register TriCoreReg TriCoreDataReg DwarfRegNum
  field bits<4> Num = { 0, 0, 1, 0 };
  list<string> Register:altNames = [];
  string Namespace = "TriCore";
  string AsmName = "D2";
  list<string> AltNames = [];
  list<Register> Aliases = [];
  list<Register> SubRegs = [];
  list<SubRegIndex> SubRegIndices = [];
  list<RegAltNameIndex> RegAltNameIndices = [];
  list<int> DwarfNumbers = [2];
  int CostPerUse = 0;
  bit CoveredBySubRegs = 0;
  bits<16> HWEncoding = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string NAME = ?;
}
def D3 {	// Register TriCoreReg TriCoreDataReg DwarfRegNum
  field bits<4> Num = { 0, 0, 1, 1 };
  list<string> Register:altNames = [];
  string Namespace = "TriCore";
  string AsmName = "D3";
  list<string> AltNames = [];
  list<Register> Aliases = [];
  list<Register> SubRegs = [];
  list<SubRegIndex> SubRegIndices = [];
  list<RegAltNameIndex> RegAltNameIndices = [];
  list<int> DwarfNumbers = [3];
  int CostPerUse = 0;
  bit CoveredBySubRegs = 0;
  bits<16> HWEncoding = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string NAME = ?;
}
def D4 {	// Register TriCoreReg TriCoreDataReg DwarfRegNum
  field bits<4> Num = { 0, 1, 0, 0 };
  list<string> Register:altNames = [];
  string Namespace = "TriCore";
  string AsmName = "D4";
  list<string> AltNames = [];
  list<Register> Aliases = [];
  list<Register> SubRegs = [];
  list<SubRegIndex> SubRegIndices = [];
  list<RegAltNameIndex> RegAltNameIndices = [];
  list<int> DwarfNumbers = [4];
  int CostPerUse = 0;
  bit CoveredBySubRegs = 0;
  bits<16> HWEncoding = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string NAME = ?;
}
def D5 {	// Register TriCoreReg TriCoreDataReg DwarfRegNum
  field bits<4> Num = { 0, 1, 0, 1 };
  list<string> Register:altNames = [];
  string Namespace = "TriCore";
  string AsmName = "D5";
  list<string> AltNames = [];
  list<Register> Aliases = [];
  list<Register> SubRegs = [];
  list<SubRegIndex> SubRegIndices = [];
  list<RegAltNameIndex> RegAltNameIndices = [];
  list<int> DwarfNumbers = [5];
  int CostPerUse = 0;
  bit CoveredBySubRegs = 0;
  bits<16> HWEncoding = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string NAME = ?;
}
def D6 {	// Register TriCoreReg TriCoreDataReg DwarfRegNum
  field bits<4> Num = { 0, 1, 1, 0 };
  list<string> Register:altNames = [];
  string Namespace = "TriCore";
  string AsmName = "D6";
  list<string> AltNames = [];
  list<Register> Aliases = [];
  list<Register> SubRegs = [];
  list<SubRegIndex> SubRegIndices = [];
  list<RegAltNameIndex> RegAltNameIndices = [];
  list<int> DwarfNumbers = [6];
  int CostPerUse = 0;
  bit CoveredBySubRegs = 0;
  bits<16> HWEncoding = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string NAME = ?;
}
def D7 {	// Register TriCoreReg TriCoreDataReg DwarfRegNum
  field bits<4> Num = { 0, 1, 1, 1 };
  list<string> Register:altNames = [];
  string Namespace = "TriCore";
  string AsmName = "D7";
  list<string> AltNames = [];
  list<Register> Aliases = [];
  list<Register> SubRegs = [];
  list<SubRegIndex> SubRegIndices = [];
  list<RegAltNameIndex> RegAltNameIndices = [];
  list<int> DwarfNumbers = [7];
  int CostPerUse = 0;
  bit CoveredBySubRegs = 0;
  bits<16> HWEncoding = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string NAME = ?;
}
def D8 {	// Register TriCoreReg TriCoreDataReg DwarfRegNum
  field bits<4> Num = { 1, 0, 0, 0 };
  list<string> Register:altNames = [];
  string Namespace = "TriCore";
  string AsmName = "D8";
  list<string> AltNames = [];
  list<Register> Aliases = [];
  list<Register> SubRegs = [];
  list<SubRegIndex> SubRegIndices = [];
  list<RegAltNameIndex> RegAltNameIndices = [];
  list<int> DwarfNumbers = [8];
  int CostPerUse = 0;
  bit CoveredBySubRegs = 0;
  bits<16> HWEncoding = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string NAME = ?;
}
def D9 {	// Register TriCoreReg TriCoreDataReg DwarfRegNum
  field bits<4> Num = { 1, 0, 0, 1 };
  list<string> Register:altNames = [];
  string Namespace = "TriCore";
  string AsmName = "D9";
  list<string> AltNames = [];
  list<Register> Aliases = [];
  list<Register> SubRegs = [];
  list<SubRegIndex> SubRegIndices = [];
  list<RegAltNameIndex> RegAltNameIndices = [];
  list<int> DwarfNumbers = [9];
  int CostPerUse = 0;
  bit CoveredBySubRegs = 0;
  bits<16> HWEncoding = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string NAME = ?;
}
def DBG_VALUE {	// Instruction
  string Namespace = "TargetOpcode";
  dag OutOperandList = (outs);
  dag InOperandList = (ins variable_ops);
  string AsmString = "DBG_VALUE";
  list<dag> Pattern = ?;
  list<Register> Uses = [];
  list<Register> Defs = [];
  list<Predicate> Predicates = [];
  int Size = 0;
  string DecoderNamespace = "";
  int CodeSize = 0;
  int AddedComplexity = 0;
  bit isReturn = 0;
  bit isBranch = 0;
  bit isIndirectBranch = 0;
  bit isCompare = 0;
  bit isMoveImm = 0;
  bit isBitcast = 0;
  bit isSelect = 0;
  bit isBarrier = 0;
  bit isCall = 0;
  bit canFoldAsLoad = 0;
  bit mayLoad = ?;
  bit mayStore = ?;
  bit isConvertibleToThreeAddress = 0;
  bit isCommutable = 0;
  bit isTerminator = 0;
  bit isReMaterializable = 0;
  bit isPredicable = 0;
  bit hasDelaySlot = 0;
  bit usesCustomInserter = 0;
  bit hasPostISelHook = 0;
  bit hasCtrlDep = 0;
  bit isNotDuplicable = 0;
  bit isConvergent = 0;
  bit isAsCheapAsAMove = 0;
  bit hasExtraSrcRegAllocReq = 0;
  bit hasExtraDefRegAllocReq = 0;
  bit isRegSequence = 0;
  bit isPseudo = 1;
  bit isExtractSubreg = 0;
  bit isInsertSubreg = 0;
  bit hasSideEffects = 0;
  bit isCodeGenOnly = 1;
  bit isAsmParserOnly = 0;
  InstrItinClass Itinerary = NoItinerary;
  list<SchedReadWrite> SchedRW = ?;
  string Constraints = "";
  string DisableEncoding = "";
  string PostEncoderMethod = "";
  string DecoderMethod = "";
  bits<64> TSFlags = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string AsmMatchConverter = "";
  string TwoOperandAliasConstraint = "";
  bit UseNamedOperandTable = 0;
  string NAME = ?;
}
def DataRegs {	// DAGOperand RegisterClass
  RegAltNameIndex RegisterClass:idx = NoRegAltName;
  string Namespace = "TriCore";
  list<ValueType> RegTypes = [i32];
  int Size = 0;
  int Alignment = 32;
  int CopyCost = 1;
  dag MemberList = (add D15, D0, D1, D2, D3, D4, D5, D6, D7, D8, D9, D10, D11, D12, D13, D14);
  RegAltNameIndex altNameIndex = NoRegAltName;
  bit isAllocatable = 1;
  list<dag> AltOrders = [];
  string AltOrderSelect = "";
  int AllocationPriority = 0;
  string NAME = ?;
}
def DefaultAsmParser {	// AsmParser
  string AsmParserClassName = "AsmParser";
  string AsmParserInstCleanup = "";
  bit ShouldEmitMatchRegisterName = 1;
  bit MnemonicContainsDot = 0;
  string NAME = ?;
}
def DefaultAsmParserVariant {	// AsmParserVariant
  int Variant = 0;
  string Name = "";
  string CommentDelimiter = "";
  string RegisterPrefix = "";
  string NAME = ?;
}
def DefaultAsmWriter {	// AsmWriter
  string AsmWriterClassName = "InstPrinter";
  int PassSubtarget = 0;
  int Variant = 0;
  string NAME = ?;
}
def EH_LABEL {	// Instruction
  string Namespace = "TargetOpcode";
  dag OutOperandList = (outs);
  dag InOperandList = (ins i32imm:$id);
  string AsmString = "";
  list<dag> Pattern = ?;
  list<Register> Uses = [];
  list<Register> Defs = [];
  list<Predicate> Predicates = [];
  int Size = 0;
  string DecoderNamespace = "";
  int CodeSize = 0;
  int AddedComplexity = 0;
  bit isReturn = 0;
  bit isBranch = 0;
  bit isIndirectBranch = 0;
  bit isCompare = 0;
  bit isMoveImm = 0;
  bit isBitcast = 0;
  bit isSelect = 0;
  bit isBarrier = 0;
  bit isCall = 0;
  bit canFoldAsLoad = 0;
  bit mayLoad = ?;
  bit mayStore = ?;
  bit isConvertibleToThreeAddress = 0;
  bit isCommutable = 0;
  bit isTerminator = 0;
  bit isReMaterializable = 0;
  bit isPredicable = 0;
  bit hasDelaySlot = 0;
  bit usesCustomInserter = 0;
  bit hasPostISelHook = 0;
  bit hasCtrlDep = 1;
  bit isNotDuplicable = 1;
  bit isConvergent = 0;
  bit isAsCheapAsAMove = 0;
  bit hasExtraSrcRegAllocReq = 0;
  bit hasExtraDefRegAllocReq = 0;
  bit isRegSequence = 0;
  bit isPseudo = 1;
  bit isExtractSubreg = 0;
  bit isInsertSubreg = 0;
  bit hasSideEffects = ?;
  bit isCodeGenOnly = 1;
  bit isAsmParserOnly = 0;
  InstrItinClass Itinerary = NoItinerary;
  list<SchedReadWrite> SchedRW = ?;
  string Constraints = "";
  string DisableEncoding = "";
  string PostEncoderMethod = "";
  string DecoderMethod = "";
  bits<64> TSFlags = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string AsmMatchConverter = "";
  string TwoOperandAliasConstraint = "";
  bit UseNamedOperandTable = 0;
  string NAME = ?;
}
def EXTRACT_SUBREG {	// Instruction
  string Namespace = "TargetOpcode";
  dag OutOperandList = (outs unknown:$dst);
  dag InOperandList = (ins unknown:$supersrc, i32imm:$subidx);
  string AsmString = "";
  list<dag> Pattern = ?;
  list<Register> Uses = [];
  list<Register> Defs = [];
  list<Predicate> Predicates = [];
  int Size = 0;
  string DecoderNamespace = "";
  int CodeSize = 0;
  int AddedComplexity = 0;
  bit isReturn = 0;
  bit isBranch = 0;
  bit isIndirectBranch = 0;
  bit isCompare = 0;
  bit isMoveImm = 0;
  bit isBitcast = 0;
  bit isSelect = 0;
  bit isBarrier = 0;
  bit isCall = 0;
  bit canFoldAsLoad = 0;
  bit mayLoad = ?;
  bit mayStore = ?;
  bit isConvertibleToThreeAddress = 0;
  bit isCommutable = 0;
  bit isTerminator = 0;
  bit isReMaterializable = 0;
  bit isPredicable = 0;
  bit hasDelaySlot = 0;
  bit usesCustomInserter = 0;
  bit hasPostISelHook = 0;
  bit hasCtrlDep = 0;
  bit isNotDuplicable = 0;
  bit isConvergent = 0;
  bit isAsCheapAsAMove = 0;
  bit hasExtraSrcRegAllocReq = 0;
  bit hasExtraDefRegAllocReq = 0;
  bit isRegSequence = 0;
  bit isPseudo = 1;
  bit isExtractSubreg = 0;
  bit isInsertSubreg = 0;
  bit hasSideEffects = 0;
  bit isCodeGenOnly = 1;
  bit isAsmParserOnly = 0;
  InstrItinClass Itinerary = NoItinerary;
  list<SchedReadWrite> SchedRW = ?;
  string Constraints = "";
  string DisableEncoding = "";
  string PostEncoderMethod = "";
  string DecoderMethod = "";
  bits<64> TSFlags = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string AsmMatchConverter = "";
  string TwoOperandAliasConstraint = "";
  bit UseNamedOperandTable = 0;
  string NAME = ?;
}
def EponymousProcResourceKind {	// ProcResourceKind
  string NAME = ?;
}
def FAULTING_LOAD_OP {	// Instruction
  string Namespace = "TargetOpcode";
  dag OutOperandList = (outs unknown:$dst);
  dag InOperandList = (ins variable_ops);
  string AsmString = "";
  list<dag> Pattern = ?;
  list<Register> Uses = [];
  list<Register> Defs = [];
  list<Predicate> Predicates = [];
  int Size = 0;
  string DecoderNamespace = "";
  int CodeSize = 0;
  int AddedComplexity = 0;
  bit isReturn = 0;
  bit isBranch = 0;
  bit isIndirectBranch = 0;
  bit isCompare = 0;
  bit isMoveImm = 0;
  bit isBitcast = 0;
  bit isSelect = 0;
  bit isBarrier = 0;
  bit isCall = 0;
  bit canFoldAsLoad = 0;
  bit mayLoad = 1;
  bit mayStore = ?;
  bit isConvertibleToThreeAddress = 0;
  bit isCommutable = 0;
  bit isTerminator = 0;
  bit isReMaterializable = 0;
  bit isPredicable = 0;
  bit hasDelaySlot = 0;
  bit usesCustomInserter = 1;
  bit hasPostISelHook = 0;
  bit hasCtrlDep = 0;
  bit isNotDuplicable = 0;
  bit isConvergent = 0;
  bit isAsCheapAsAMove = 0;
  bit hasExtraSrcRegAllocReq = 0;
  bit hasExtraDefRegAllocReq = 0;
  bit isRegSequence = 0;
  bit isPseudo = 1;
  bit isExtractSubreg = 0;
  bit isInsertSubreg = 0;
  bit hasSideEffects = ?;
  bit isCodeGenOnly = 1;
  bit isAsmParserOnly = 0;
  InstrItinClass Itinerary = NoItinerary;
  list<SchedReadWrite> SchedRW = ?;
  string Constraints = "";
  string DisableEncoding = "";
  string PostEncoderMethod = "";
  string DecoderMethod = "";
  bits<64> TSFlags = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string AsmMatchConverter = "";
  string TwoOperandAliasConstraint = "";
  bit UseNamedOperandTable = 0;
  string NAME = ?;
}
def FlagVT {	// ValueType
  string Namespace = "MVT";
  int Size = 0;
  int Value = 56;
  string NAME = ?;
}
def GC_LABEL {	// Instruction
  string Namespace = "TargetOpcode";
  dag OutOperandList = (outs);
  dag InOperandList = (ins i32imm:$id);
  string AsmString = "";
  list<dag> Pattern = ?;
  list<Register> Uses = [];
  list<Register> Defs = [];
  list<Predicate> Predicates = [];
  int Size = 0;
  string DecoderNamespace = "";
  int CodeSize = 0;
  int AddedComplexity = 0;
  bit isReturn = 0;
  bit isBranch = 0;
  bit isIndirectBranch = 0;
  bit isCompare = 0;
  bit isMoveImm = 0;
  bit isBitcast = 0;
  bit isSelect = 0;
  bit isBarrier = 0;
  bit isCall = 0;
  bit canFoldAsLoad = 0;
  bit mayLoad = ?;
  bit mayStore = ?;
  bit isConvertibleToThreeAddress = 0;
  bit isCommutable = 0;
  bit isTerminator = 0;
  bit isReMaterializable = 0;
  bit isPredicable = 0;
  bit hasDelaySlot = 0;
  bit usesCustomInserter = 0;
  bit hasPostISelHook = 0;
  bit hasCtrlDep = 1;
  bit isNotDuplicable = 1;
  bit isConvergent = 0;
  bit isAsCheapAsAMove = 0;
  bit hasExtraSrcRegAllocReq = 0;
  bit hasExtraDefRegAllocReq = 0;
  bit isRegSequence = 0;
  bit isPseudo = 1;
  bit isExtractSubreg = 0;
  bit isInsertSubreg = 0;
  bit hasSideEffects = ?;
  bit isCodeGenOnly = 1;
  bit isAsmParserOnly = 0;
  InstrItinClass Itinerary = NoItinerary;
  list<SchedReadWrite> SchedRW = ?;
  string Constraints = "";
  string DisableEncoding = "";
  string PostEncoderMethod = "";
  string DecoderMethod = "";
  bits<64> TSFlags = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string AsmMatchConverter = "";
  string TwoOperandAliasConstraint = "";
  bit UseNamedOperandTable = 0;
  string NAME = ?;
}
def IMPLICIT_DEF {	// Instruction
  string Namespace = "TargetOpcode";
  dag OutOperandList = (outs unknown:$dst);
  dag InOperandList = (ins);
  string AsmString = "";
  list<dag> Pattern = ?;
  list<Register> Uses = [];
  list<Register> Defs = [];
  list<Predicate> Predicates = [];
  int Size = 0;
  string DecoderNamespace = "";
  int CodeSize = 0;
  int AddedComplexity = 0;
  bit isReturn = 0;
  bit isBranch = 0;
  bit isIndirectBranch = 0;
  bit isCompare = 0;
  bit isMoveImm = 0;
  bit isBitcast = 0;
  bit isSelect = 0;
  bit isBarrier = 0;
  bit isCall = 0;
  bit canFoldAsLoad = 0;
  bit mayLoad = ?;
  bit mayStore = ?;
  bit isConvertibleToThreeAddress = 0;
  bit isCommutable = 0;
  bit isTerminator = 0;
  bit isReMaterializable = 1;
  bit isPredicable = 0;
  bit hasDelaySlot = 0;
  bit usesCustomInserter = 0;
  bit hasPostISelHook = 0;
  bit hasCtrlDep = 0;
  bit isNotDuplicable = 0;
  bit isConvergent = 0;
  bit isAsCheapAsAMove = 1;
  bit hasExtraSrcRegAllocReq = 0;
  bit hasExtraDefRegAllocReq = 0;
  bit isRegSequence = 0;
  bit isPseudo = 1;
  bit isExtractSubreg = 0;
  bit isInsertSubreg = 0;
  bit hasSideEffects = 0;
  bit isCodeGenOnly = 1;
  bit isAsmParserOnly = 0;
  InstrItinClass Itinerary = NoItinerary;
  list<SchedReadWrite> SchedRW = ?;
  string Constraints = "";
  string DisableEncoding = "";
  string PostEncoderMethod = "";
  string DecoderMethod = "";
  bits<64> TSFlags = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string AsmMatchConverter = "";
  string TwoOperandAliasConstraint = "";
  bit UseNamedOperandTable = 0;
  string NAME = ?;
}
def INLINEASM {	// Instruction
  string Namespace = "TargetOpcode";
  dag OutOperandList = (outs);
  dag InOperandList = (ins variable_ops);
  string AsmString = "";
  list<dag> Pattern = ?;
  list<Register> Uses = [];
  list<Register> Defs = [];
  list<Predicate> Predicates = [];
  int Size = 0;
  string DecoderNamespace = "";
  int CodeSize = 0;
  int AddedComplexity = 0;
  bit isReturn = 0;
  bit isBranch = 0;
  bit isIndirectBranch = 0;
  bit isCompare = 0;
  bit isMoveImm = 0;
  bit isBitcast = 0;
  bit isSelect = 0;
  bit isBarrier = 0;
  bit isCall = 0;
  bit canFoldAsLoad = 0;
  bit mayLoad = ?;
  bit mayStore = ?;
  bit isConvertibleToThreeAddress = 0;
  bit isCommutable = 0;
  bit isTerminator = 0;
  bit isReMaterializable = 0;
  bit isPredicable = 0;
  bit hasDelaySlot = 0;
  bit usesCustomInserter = 0;
  bit hasPostISelHook = 0;
  bit hasCtrlDep = 0;
  bit isNotDuplicable = 0;
  bit isConvergent = 0;
  bit isAsCheapAsAMove = 0;
  bit hasExtraSrcRegAllocReq = 0;
  bit hasExtraDefRegAllocReq = 0;
  bit isRegSequence = 0;
  bit isPseudo = 1;
  bit isExtractSubreg = 0;
  bit isInsertSubreg = 0;
  bit hasSideEffects = 0;
  bit isCodeGenOnly = 1;
  bit isAsmParserOnly = 0;
  InstrItinClass Itinerary = NoItinerary;
  list<SchedReadWrite> SchedRW = ?;
  string Constraints = "";
  string DisableEncoding = "";
  string PostEncoderMethod = "";
  string DecoderMethod = "";
  bits<64> TSFlags = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string AsmMatchConverter = "";
  string TwoOperandAliasConstraint = "";
  bit UseNamedOperandTable = 0;
  string NAME = ?;
}
def INSERT_SUBREG {	// Instruction
  string Namespace = "TargetOpcode";
  dag OutOperandList = (outs unknown:$dst);
  dag InOperandList = (ins unknown:$supersrc, unknown:$subsrc, i32imm:$subidx);
  string AsmString = "";
  list<dag> Pattern = ?;
  list<Register> Uses = [];
  list<Register> Defs = [];
  list<Predicate> Predicates = [];
  int Size = 0;
  string DecoderNamespace = "";
  int CodeSize = 0;
  int AddedComplexity = 0;
  bit isReturn = 0;
  bit isBranch = 0;
  bit isIndirectBranch = 0;
  bit isCompare = 0;
  bit isMoveImm = 0;
  bit isBitcast = 0;
  bit isSelect = 0;
  bit isBarrier = 0;
  bit isCall = 0;
  bit canFoldAsLoad = 0;
  bit mayLoad = ?;
  bit mayStore = ?;
  bit isConvertibleToThreeAddress = 0;
  bit isCommutable = 0;
  bit isTerminator = 0;
  bit isReMaterializable = 0;
  bit isPredicable = 0;
  bit hasDelaySlot = 0;
  bit usesCustomInserter = 0;
  bit hasPostISelHook = 0;
  bit hasCtrlDep = 0;
  bit isNotDuplicable = 0;
  bit isConvergent = 0;
  bit isAsCheapAsAMove = 0;
  bit hasExtraSrcRegAllocReq = 0;
  bit hasExtraDefRegAllocReq = 0;
  bit isRegSequence = 0;
  bit isPseudo = 1;
  bit isExtractSubreg = 0;
  bit isInsertSubreg = 0;
  bit hasSideEffects = 0;
  bit isCodeGenOnly = 1;
  bit isAsmParserOnly = 0;
  InstrItinClass Itinerary = NoItinerary;
  list<SchedReadWrite> SchedRW = ?;
  string Constraints = "$supersrc = $dst";
  string DisableEncoding = "";
  string PostEncoderMethod = "";
  string DecoderMethod = "";
  bits<64> TSFlags = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string AsmMatchConverter = "";
  string TwoOperandAliasConstraint = "";
  bit UseNamedOperandTable = 0;
  string NAME = ?;
}
def ImmAsmOperand {	// AsmOperandClass
  string Name = "Imm";
  list<AsmOperandClass> SuperClasses = [];
  string PredicateMethod = ?;
  string RenderMethod = ?;
  string ParserMethod = ?;
  string DiagnosticType = "";
  string NAME = ?;
}
def IntrConvergent {	// IntrinsicProperty
  string NAME = ?;
}
def IntrNoDuplicate {	// IntrinsicProperty
  string NAME = ?;
}
def IntrNoMem {	// IntrinsicProperty
  string NAME = ?;
}
def IntrNoReturn {	// IntrinsicProperty
  string NAME = ?;
}
def IntrReadArgMem {	// IntrinsicProperty
  string NAME = ?;
}
def IntrReadMem {	// IntrinsicProperty
  string NAME = ?;
}
def IntrReadWriteArgMem {	// IntrinsicProperty
  string NAME = ?;
}
def JEQbrc {	// Instruction InstTriCore T32 BRC brc
  field bits<32> Inst = { 0, dip15{14}, dip15{13}, dip15{12}, dip15{11}, dip15{10}, dip15{9}, dip15{8}, dip15{7}, dip15{6}, dip15{5}, dip15{4}, dip15{3}, dip15{2}, dip15{1}, dip15{0}, const4{3}, const4{2}, const4{1}, const4{0}, s1{3}, s1{2}, s1{1}, s1{0}, 1, 1, 0, 1, 1, 1, 1, 1 };
  string Namespace = "TriCore";
  dag OutOperandList = (outs);
  dag InOperandList = (ins cc:$cc1, jmptarget:$disp15, DataRegs:$s1, s4imm:$const4);
  string AsmString = "jeq $s1, $const4, $disp15";
  list<dag> Pattern = [];
  list<Register> Uses = [];
  list<Register> Defs = [];
  list<Predicate> Predicates = [];
  int Size = 4;
  string DecoderNamespace = "";
  int CodeSize = 0;
  int AddedComplexity = 0;
  bit isReturn = 0;
  bit isBranch = 1;
  bit isIndirectBranch = 0;
  bit isCompare = 0;
  bit isMoveImm = 0;
  bit isBitcast = 0;
  bit isSelect = 0;
  bit isBarrier = 0;
  bit isCall = 0;
  bit canFoldAsLoad = 0;
  bit mayLoad = ?;
  bit mayStore = ?;
  bit isConvertibleToThreeAddress = 0;
  bit isCommutable = 0;
  bit isTerminator = 1;
  bit isReMaterializable = 0;
  bit isPredicable = 0;
  bit hasDelaySlot = 0;
  bit usesCustomInserter = 0;
  bit hasPostISelHook = 0;
  bit hasCtrlDep = 0;
  bit isNotDuplicable = 0;
  bit isConvergent = 0;
  bit isAsCheapAsAMove = 0;
  bit hasExtraSrcRegAllocReq = 0;
  bit hasExtraDefRegAllocReq = 0;
  bit isRegSequence = 0;
  bit isPseudo = 0;
  bit isExtractSubreg = 0;
  bit isInsertSubreg = 0;
  bit hasSideEffects = ?;
  bit isCodeGenOnly = 0;
  bit isAsmParserOnly = 0;
  InstrItinClass Itinerary = NoItinerary;
  list<SchedReadWrite> SchedRW = ?;
  string Constraints = "";
  string DisableEncoding = "";
  string PostEncoderMethod = "";
  string DecoderMethod = "";
  bits<64> TSFlags = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string AsmMatchConverter = "";
  string TwoOperandAliasConstraint = "";
  bit UseNamedOperandTable = 0;
  bits<4> s1 = { ?, ?, ?, ? };
  bits<4> const4 = { ?, ?, ?, ? };
  bits<15> dip15 = { ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? };
  string NAME = "JEQ";
}
def JEQbrr {	// Instruction InstTriCore T32 BRR brr
  field bits<32> Inst = { 0, dip15{14}, dip15{13}, dip15{12}, dip15{11}, dip15{10}, dip15{9}, dip15{8}, dip15{7}, dip15{6}, dip15{5}, dip15{4}, dip15{3}, dip15{2}, dip15{1}, dip15{0}, s1{3}, s1{2}, s1{1}, s1{0}, s1{3}, s1{2}, s1{1}, s1{0}, 0, 1, 0, 1, 1, 1, 1, 1 };
  string Namespace = "TriCore";
  dag OutOperandList = (outs);
  dag InOperandList = (ins cc:$cc1, DataRegs:$s1, DataRegs:$s2, jmptarget:$disp15);
  string AsmString = "jeq $s1, $s2, $disp15";
  list<dag> Pattern = [];
  list<Register> Uses = [];
  list<Register> Defs = [];
  list<Predicate> Predicates = [];
  int Size = 4;
  string DecoderNamespace = "";
  int CodeSize = 0;
  int AddedComplexity = 0;
  bit isReturn = 0;
  bit isBranch = 1;
  bit isIndirectBranch = 0;
  bit isCompare = 0;
  bit isMoveImm = 0;
  bit isBitcast = 0;
  bit isSelect = 0;
  bit isBarrier = 0;
  bit isCall = 0;
  bit canFoldAsLoad = 0;
  bit mayLoad = ?;
  bit mayStore = ?;
  bit isConvertibleToThreeAddress = 0;
  bit isCommutable = 0;
  bit isTerminator = 1;
  bit isReMaterializable = 0;
  bit isPredicable = 0;
  bit hasDelaySlot = 0;
  bit usesCustomInserter = 0;
  bit hasPostISelHook = 0;
  bit hasCtrlDep = 0;
  bit isNotDuplicable = 0;
  bit isConvergent = 0;
  bit isAsCheapAsAMove = 0;
  bit hasExtraSrcRegAllocReq = 0;
  bit hasExtraDefRegAllocReq = 0;
  bit isRegSequence = 0;
  bit isPseudo = 0;
  bit isExtractSubreg = 0;
  bit isInsertSubreg = 0;
  bit hasSideEffects = ?;
  bit isCodeGenOnly = 0;
  bit isAsmParserOnly = 0;
  InstrItinClass Itinerary = NoItinerary;
  list<SchedReadWrite> SchedRW = ?;
  string Constraints = "";
  string DisableEncoding = "";
  string PostEncoderMethod = "";
  string DecoderMethod = "";
  bits<64> TSFlags = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string AsmMatchConverter = "";
  string TwoOperandAliasConstraint = "";
  bit UseNamedOperandTable = 0;
  bits<4> s1 = { ?, ?, ?, ? };
  bits<4> s2 = { ?, ?, ?, ? };
  bits<15> dip15 = { ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? };
  string NAME = "JEQ";
}
def JGEbrc {	// Instruction InstTriCore T32 BRC brc
  field bits<32> Inst = { 0, dip15{14}, dip15{13}, dip15{12}, dip15{11}, dip15{10}, dip15{9}, dip15{8}, dip15{7}, dip15{6}, dip15{5}, dip15{4}, dip15{3}, dip15{2}, dip15{1}, dip15{0}, const4{3}, const4{2}, const4{1}, const4{0}, s1{3}, s1{2}, s1{1}, s1{0}, 1, 1, 1, 1, 1, 1, 1, 1 };
  string Namespace = "TriCore";
  dag OutOperandList = (outs);
  dag InOperandList = (ins cc:$cc1, jmptarget:$disp15, DataRegs:$s1, s4imm:$const4);
  string AsmString = "jge $s1, $const4, $disp15";
  list<dag> Pattern = [];
  list<Register> Uses = [];
  list<Register> Defs = [];
  list<Predicate> Predicates = [];
  int Size = 4;
  string DecoderNamespace = "";
  int CodeSize = 0;
  int AddedComplexity = 0;
  bit isReturn = 0;
  bit isBranch = 1;
  bit isIndirectBranch = 0;
  bit isCompare = 0;
  bit isMoveImm = 0;
  bit isBitcast = 0;
  bit isSelect = 0;
  bit isBarrier = 0;
  bit isCall = 0;
  bit canFoldAsLoad = 0;
  bit mayLoad = ?;
  bit mayStore = ?;
  bit isConvertibleToThreeAddress = 0;
  bit isCommutable = 0;
  bit isTerminator = 1;
  bit isReMaterializable = 0;
  bit isPredicable = 0;
  bit hasDelaySlot = 0;
  bit usesCustomInserter = 0;
  bit hasPostISelHook = 0;
  bit hasCtrlDep = 0;
  bit isNotDuplicable = 0;
  bit isConvergent = 0;
  bit isAsCheapAsAMove = 0;
  bit hasExtraSrcRegAllocReq = 0;
  bit hasExtraDefRegAllocReq = 0;
  bit isRegSequence = 0;
  bit isPseudo = 0;
  bit isExtractSubreg = 0;
  bit isInsertSubreg = 0;
  bit hasSideEffects = ?;
  bit isCodeGenOnly = 0;
  bit isAsmParserOnly = 0;
  InstrItinClass Itinerary = NoItinerary;
  list<SchedReadWrite> SchedRW = ?;
  string Constraints = "";
  string DisableEncoding = "";
  string PostEncoderMethod = "";
  string DecoderMethod = "";
  bits<64> TSFlags = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string AsmMatchConverter = "";
  string TwoOperandAliasConstraint = "";
  bit UseNamedOperandTable = 0;
  bits<4> s1 = { ?, ?, ?, ? };
  bits<4> const4 = { ?, ?, ?, ? };
  bits<15> dip15 = { ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? };
  string NAME = "JGE";
}
def JGEbrr {	// Instruction InstTriCore T32 BRR brr
  field bits<32> Inst = { 0, dip15{14}, dip15{13}, dip15{12}, dip15{11}, dip15{10}, dip15{9}, dip15{8}, dip15{7}, dip15{6}, dip15{5}, dip15{4}, dip15{3}, dip15{2}, dip15{1}, dip15{0}, s1{3}, s1{2}, s1{1}, s1{0}, s1{3}, s1{2}, s1{1}, s1{0}, 0, 1, 1, 1, 1, 1, 1, 1 };
  string Namespace = "TriCore";
  dag OutOperandList = (outs);
  dag InOperandList = (ins cc:$cc1, DataRegs:$s1, DataRegs:$s2, jmptarget:$disp15);
  string AsmString = "jge $s1, $s2, $disp15";
  list<dag> Pattern = [];
  list<Register> Uses = [];
  list<Register> Defs = [];
  list<Predicate> Predicates = [];
  int Size = 4;
  string DecoderNamespace = "";
  int CodeSize = 0;
  int AddedComplexity = 0;
  bit isReturn = 0;
  bit isBranch = 1;
  bit isIndirectBranch = 0;
  bit isCompare = 0;
  bit isMoveImm = 0;
  bit isBitcast = 0;
  bit isSelect = 0;
  bit isBarrier = 0;
  bit isCall = 0;
  bit canFoldAsLoad = 0;
  bit mayLoad = ?;
  bit mayStore = ?;
  bit isConvertibleToThreeAddress = 0;
  bit isCommutable = 0;
  bit isTerminator = 1;
  bit isReMaterializable = 0;
  bit isPredicable = 0;
  bit hasDelaySlot = 0;
  bit usesCustomInserter = 0;
  bit hasPostISelHook = 0;
  bit hasCtrlDep = 0;
  bit isNotDuplicable = 0;
  bit isConvergent = 0;
  bit isAsCheapAsAMove = 0;
  bit hasExtraSrcRegAllocReq = 0;
  bit hasExtraDefRegAllocReq = 0;
  bit isRegSequence = 0;
  bit isPseudo = 0;
  bit isExtractSubreg = 0;
  bit isInsertSubreg = 0;
  bit hasSideEffects = ?;
  bit isCodeGenOnly = 0;
  bit isAsmParserOnly = 0;
  InstrItinClass Itinerary = NoItinerary;
  list<SchedReadWrite> SchedRW = ?;
  string Constraints = "";
  string DisableEncoding = "";
  string PostEncoderMethod = "";
  string DecoderMethod = "";
  bits<64> TSFlags = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string AsmMatchConverter = "";
  string TwoOperandAliasConstraint = "";
  bit UseNamedOperandTable = 0;
  bits<4> s1 = { ?, ?, ?, ? };
  bits<4> s2 = { ?, ?, ?, ? };
  bits<15> dip15 = { ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? };
  string NAME = "JGE";
}
def JLTbrc {	// Instruction InstTriCore T32 BRC brc
  field bits<32> Inst = { 0, dip15{14}, dip15{13}, dip15{12}, dip15{11}, dip15{10}, dip15{9}, dip15{8}, dip15{7}, dip15{6}, dip15{5}, dip15{4}, dip15{3}, dip15{2}, dip15{1}, dip15{0}, const4{3}, const4{2}, const4{1}, const4{0}, s1{3}, s1{2}, s1{1}, s1{0}, 1, 0, 1, 1, 1, 1, 1, 1 };
  string Namespace = "TriCore";
  dag OutOperandList = (outs);
  dag InOperandList = (ins cc:$cc1, jmptarget:$disp15, DataRegs:$s1, s4imm:$const4);
  string AsmString = "jlt $s1, $const4, $disp15";
  list<dag> Pattern = [];
  list<Register> Uses = [];
  list<Register> Defs = [];
  list<Predicate> Predicates = [];
  int Size = 4;
  string DecoderNamespace = "";
  int CodeSize = 0;
  int AddedComplexity = 0;
  bit isReturn = 0;
  bit isBranch = 1;
  bit isIndirectBranch = 0;
  bit isCompare = 0;
  bit isMoveImm = 0;
  bit isBitcast = 0;
  bit isSelect = 0;
  bit isBarrier = 0;
  bit isCall = 0;
  bit canFoldAsLoad = 0;
  bit mayLoad = ?;
  bit mayStore = ?;
  bit isConvertibleToThreeAddress = 0;
  bit isCommutable = 0;
  bit isTerminator = 1;
  bit isReMaterializable = 0;
  bit isPredicable = 0;
  bit hasDelaySlot = 0;
  bit usesCustomInserter = 0;
  bit hasPostISelHook = 0;
  bit hasCtrlDep = 0;
  bit isNotDuplicable = 0;
  bit isConvergent = 0;
  bit isAsCheapAsAMove = 0;
  bit hasExtraSrcRegAllocReq = 0;
  bit hasExtraDefRegAllocReq = 0;
  bit isRegSequence = 0;
  bit isPseudo = 0;
  bit isExtractSubreg = 0;
  bit isInsertSubreg = 0;
  bit hasSideEffects = ?;
  bit isCodeGenOnly = 0;
  bit isAsmParserOnly = 0;
  InstrItinClass Itinerary = NoItinerary;
  list<SchedReadWrite> SchedRW = ?;
  string Constraints = "";
  string DisableEncoding = "";
  string PostEncoderMethod = "";
  string DecoderMethod = "";
  bits<64> TSFlags = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string AsmMatchConverter = "";
  string TwoOperandAliasConstraint = "";
  bit UseNamedOperandTable = 0;
  bits<4> s1 = { ?, ?, ?, ? };
  bits<4> const4 = { ?, ?, ?, ? };
  bits<15> dip15 = { ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? };
  string NAME = "JLT";
}
def JLTbrr {	// Instruction InstTriCore T32 BRR brr
  field bits<32> Inst = { 0, dip15{14}, dip15{13}, dip15{12}, dip15{11}, dip15{10}, dip15{9}, dip15{8}, dip15{7}, dip15{6}, dip15{5}, dip15{4}, dip15{3}, dip15{2}, dip15{1}, dip15{0}, s1{3}, s1{2}, s1{1}, s1{0}, s1{3}, s1{2}, s1{1}, s1{0}, 0, 0, 1, 1, 1, 1, 1, 1 };
  string Namespace = "TriCore";
  dag OutOperandList = (outs);
  dag InOperandList = (ins cc:$cc1, DataRegs:$s1, DataRegs:$s2, jmptarget:$disp15);
  string AsmString = "jlt $s1, $s2, $disp15";
  list<dag> Pattern = [];
  list<Register> Uses = [];
  list<Register> Defs = [];
  list<Predicate> Predicates = [];
  int Size = 4;
  string DecoderNamespace = "";
  int CodeSize = 0;
  int AddedComplexity = 0;
  bit isReturn = 0;
  bit isBranch = 1;
  bit isIndirectBranch = 0;
  bit isCompare = 0;
  bit isMoveImm = 0;
  bit isBitcast = 0;
  bit isSelect = 0;
  bit isBarrier = 0;
  bit isCall = 0;
  bit canFoldAsLoad = 0;
  bit mayLoad = ?;
  bit mayStore = ?;
  bit isConvertibleToThreeAddress = 0;
  bit isCommutable = 0;
  bit isTerminator = 1;
  bit isReMaterializable = 0;
  bit isPredicable = 0;
  bit hasDelaySlot = 0;
  bit usesCustomInserter = 0;
  bit hasPostISelHook = 0;
  bit hasCtrlDep = 0;
  bit isNotDuplicable = 0;
  bit isConvergent = 0;
  bit isAsCheapAsAMove = 0;
  bit hasExtraSrcRegAllocReq = 0;
  bit hasExtraDefRegAllocReq = 0;
  bit isRegSequence = 0;
  bit isPseudo = 0;
  bit isExtractSubreg = 0;
  bit isInsertSubreg = 0;
  bit hasSideEffects = ?;
  bit isCodeGenOnly = 0;
  bit isAsmParserOnly = 0;
  InstrItinClass Itinerary = NoItinerary;
  list<SchedReadWrite> SchedRW = ?;
  string Constraints = "";
  string DisableEncoding = "";
  string PostEncoderMethod = "";
  string DecoderMethod = "";
  bits<64> TSFlags = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string AsmMatchConverter = "";
  string TwoOperandAliasConstraint = "";
  bit UseNamedOperandTable = 0;
  bits<4> s1 = { ?, ?, ?, ? };
  bits<4> s2 = { ?, ?, ?, ? };
  bits<15> dip15 = { ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? };
  string NAME = "JLT";
}
def JMP {	// Instruction InstTriCore T32 B
  field bits<32> Inst = { disp24{15}, disp24{14}, disp24{13}, disp24{12}, disp24{11}, disp24{10}, disp24{9}, disp24{8}, disp24{7}, disp24{6}, disp24{5}, disp24{4}, disp24{3}, disp24{2}, disp24{1}, disp24{0}, disp24{23}, disp24{22}, disp24{21}, disp24{20}, disp24{19}, disp24{18}, disp24{17}, disp24{16}, 0, 0, 0, 1, 1, 1, 0, 1 };
  string Namespace = "TriCore";
  dag OutOperandList = (outs);
  dag InOperandList = (ins jmptarget:$dst);
  string AsmString = "j $dst";
  list<dag> Pattern = [(br bb:$dst)];
  list<Register> Uses = [];
  list<Register> Defs = [];
  list<Predicate> Predicates = [];
  int Size = 4;
  string DecoderNamespace = "";
  int CodeSize = 0;
  int AddedComplexity = 0;
  bit isReturn = 0;
  bit isBranch = 1;
  bit isIndirectBranch = 0;
  bit isCompare = 0;
  bit isMoveImm = 0;
  bit isBitcast = 0;
  bit isSelect = 0;
  bit isBarrier = 1;
  bit isCall = 0;
  bit canFoldAsLoad = 0;
  bit mayLoad = ?;
  bit mayStore = ?;
  bit isConvertibleToThreeAddress = 0;
  bit isCommutable = 0;
  bit isTerminator = 1;
  bit isReMaterializable = 0;
  bit isPredicable = 0;
  bit hasDelaySlot = 0;
  bit usesCustomInserter = 0;
  bit hasPostISelHook = 0;
  bit hasCtrlDep = 0;
  bit isNotDuplicable = 0;
  bit isConvergent = 0;
  bit isAsCheapAsAMove = 0;
  bit hasExtraSrcRegAllocReq = 0;
  bit hasExtraDefRegAllocReq = 0;
  bit isRegSequence = 0;
  bit isPseudo = 0;
  bit isExtractSubreg = 0;
  bit isInsertSubreg = 0;
  bit hasSideEffects = ?;
  bit isCodeGenOnly = 0;
  bit isAsmParserOnly = 0;
  InstrItinClass Itinerary = NoItinerary;
  list<SchedReadWrite> SchedRW = ?;
  string Constraints = "";
  string DisableEncoding = "";
  string PostEncoderMethod = "";
  string DecoderMethod = "";
  bits<64> TSFlags = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string AsmMatchConverter = "";
  string TwoOperandAliasConstraint = "";
  bit UseNamedOperandTable = 0;
  bits<24> disp24 = { ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? };
  string NAME = ?;
}
def JNEbrc {	// Instruction InstTriCore T32 BRC brc
  field bits<32> Inst = { 1, dip15{14}, dip15{13}, dip15{12}, dip15{11}, dip15{10}, dip15{9}, dip15{8}, dip15{7}, dip15{6}, dip15{5}, dip15{4}, dip15{3}, dip15{2}, dip15{1}, dip15{0}, const4{3}, const4{2}, const4{1}, const4{0}, s1{3}, s1{2}, s1{1}, s1{0}, 1, 1, 0, 1, 1, 1, 1, 1 };
  string Namespace = "TriCore";
  dag OutOperandList = (outs);
  dag InOperandList = (ins cc:$cc1, jmptarget:$disp15, DataRegs:$s1, s4imm:$const4);
  string AsmString = "jne $s1, $const4, $disp15";
  list<dag> Pattern = [];
  list<Register> Uses = [];
  list<Register> Defs = [];
  list<Predicate> Predicates = [];
  int Size = 4;
  string DecoderNamespace = "";
  int CodeSize = 0;
  int AddedComplexity = 0;
  bit isReturn = 0;
  bit isBranch = 1;
  bit isIndirectBranch = 0;
  bit isCompare = 0;
  bit isMoveImm = 0;
  bit isBitcast = 0;
  bit isSelect = 0;
  bit isBarrier = 0;
  bit isCall = 0;
  bit canFoldAsLoad = 0;
  bit mayLoad = ?;
  bit mayStore = ?;
  bit isConvertibleToThreeAddress = 0;
  bit isCommutable = 0;
  bit isTerminator = 1;
  bit isReMaterializable = 0;
  bit isPredicable = 0;
  bit hasDelaySlot = 0;
  bit usesCustomInserter = 0;
  bit hasPostISelHook = 0;
  bit hasCtrlDep = 0;
  bit isNotDuplicable = 0;
  bit isConvergent = 0;
  bit isAsCheapAsAMove = 0;
  bit hasExtraSrcRegAllocReq = 0;
  bit hasExtraDefRegAllocReq = 0;
  bit isRegSequence = 0;
  bit isPseudo = 0;
  bit isExtractSubreg = 0;
  bit isInsertSubreg = 0;
  bit hasSideEffects = ?;
  bit isCodeGenOnly = 0;
  bit isAsmParserOnly = 0;
  InstrItinClass Itinerary = NoItinerary;
  list<SchedReadWrite> SchedRW = ?;
  string Constraints = "";
  string DisableEncoding = "";
  string PostEncoderMethod = "";
  string DecoderMethod = "";
  bits<64> TSFlags = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string AsmMatchConverter = "";
  string TwoOperandAliasConstraint = "";
  bit UseNamedOperandTable = 0;
  bits<4> s1 = { ?, ?, ?, ? };
  bits<4> const4 = { ?, ?, ?, ? };
  bits<15> dip15 = { ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? };
  string NAME = "JNE";
}
def JNEbrr {	// Instruction InstTriCore T32 BRR brr
  field bits<32> Inst = { 1, dip15{14}, dip15{13}, dip15{12}, dip15{11}, dip15{10}, dip15{9}, dip15{8}, dip15{7}, dip15{6}, dip15{5}, dip15{4}, dip15{3}, dip15{2}, dip15{1}, dip15{0}, s1{3}, s1{2}, s1{1}, s1{0}, s1{3}, s1{2}, s1{1}, s1{0}, 0, 1, 0, 1, 1, 1, 1, 1 };
  string Namespace = "TriCore";
  dag OutOperandList = (outs);
  dag InOperandList = (ins cc:$cc1, DataRegs:$s1, DataRegs:$s2, jmptarget:$disp15);
  string AsmString = "jne $s1, $s2, $disp15";
  list<dag> Pattern = [];
  list<Register> Uses = [];
  list<Register> Defs = [];
  list<Predicate> Predicates = [];
  int Size = 4;
  string DecoderNamespace = "";
  int CodeSize = 0;
  int AddedComplexity = 0;
  bit isReturn = 0;
  bit isBranch = 1;
  bit isIndirectBranch = 0;
  bit isCompare = 0;
  bit isMoveImm = 0;
  bit isBitcast = 0;
  bit isSelect = 0;
  bit isBarrier = 0;
  bit isCall = 0;
  bit canFoldAsLoad = 0;
  bit mayLoad = ?;
  bit mayStore = ?;
  bit isConvertibleToThreeAddress = 0;
  bit isCommutable = 0;
  bit isTerminator = 1;
  bit isReMaterializable = 0;
  bit isPredicable = 0;
  bit hasDelaySlot = 0;
  bit usesCustomInserter = 0;
  bit hasPostISelHook = 0;
  bit hasCtrlDep = 0;
  bit isNotDuplicable = 0;
  bit isConvergent = 0;
  bit isAsCheapAsAMove = 0;
  bit hasExtraSrcRegAllocReq = 0;
  bit hasExtraDefRegAllocReq = 0;
  bit isRegSequence = 0;
  bit isPseudo = 0;
  bit isExtractSubreg = 0;
  bit isInsertSubreg = 0;
  bit hasSideEffects = ?;
  bit isCodeGenOnly = 0;
  bit isAsmParserOnly = 0;
  InstrItinClass Itinerary = NoItinerary;
  list<SchedReadWrite> SchedRW = ?;
  string Constraints = "";
  string DisableEncoding = "";
  string PostEncoderMethod = "";
  string DecoderMethod = "";
  bits<64> TSFlags = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string AsmMatchConverter = "";
  string TwoOperandAliasConstraint = "";
  bit UseNamedOperandTable = 0;
  bits<4> s1 = { ?, ?, ?, ? };
  bits<4> s2 = { ?, ?, ?, ? };
  bits<15> dip15 = { ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? };
  string NAME = "JNE";
}
def KILL {	// Instruction
  string Namespace = "TargetOpcode";
  dag OutOperandList = (outs);
  dag InOperandList = (ins variable_ops);
  string AsmString = "";
  list<dag> Pattern = ?;
  list<Register> Uses = [];
  list<Register> Defs = [];
  list<Predicate> Predicates = [];
  int Size = 0;
  string DecoderNamespace = "";
  int CodeSize = 0;
  int AddedComplexity = 0;
  bit isReturn = 0;
  bit isBranch = 0;
  bit isIndirectBranch = 0;
  bit isCompare = 0;
  bit isMoveImm = 0;
  bit isBitcast = 0;
  bit isSelect = 0;
  bit isBarrier = 0;
  bit isCall = 0;
  bit canFoldAsLoad = 0;
  bit mayLoad = ?;
  bit mayStore = ?;
  bit isConvertibleToThreeAddress = 0;
  bit isCommutable = 0;
  bit isTerminator = 0;
  bit isReMaterializable = 0;
  bit isPredicable = 0;
  bit hasDelaySlot = 0;
  bit usesCustomInserter = 0;
  bit hasPostISelHook = 0;
  bit hasCtrlDep = 0;
  bit isNotDuplicable = 0;
  bit isConvergent = 0;
  bit isAsCheapAsAMove = 0;
  bit hasExtraSrcRegAllocReq = 0;
  bit hasExtraDefRegAllocReq = 0;
  bit isRegSequence = 0;
  bit isPseudo = 1;
  bit isExtractSubreg = 0;
  bit isInsertSubreg = 0;
  bit hasSideEffects = 0;
  bit isCodeGenOnly = 1;
  bit isAsmParserOnly = 0;
  InstrItinClass Itinerary = NoItinerary;
  list<SchedReadWrite> SchedRW = ?;
  string Constraints = "";
  string DisableEncoding = "";
  string PostEncoderMethod = "";
  string DecoderMethod = "";
  bits<64> TSFlags = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string AsmMatchConverter = "";
  string TwoOperandAliasConstraint = "";
  bit UseNamedOperandTable = 0;
  string NAME = ?;
}
def LDR {	// Instruction InstTriCore T32 BOL
  field bits<32> Inst = { off16{9}, off16{8}, off16{7}, off16{6}, off16{15}, off16{14}, off16{13}, off16{12}, off16{11}, off16{10}, off16{5}, off16{4}, off16{3}, off16{2}, off16{1}, off16{0}, s2{3}, s2{2}, s2{1}, s2{0}, s1_d{3}, s1_d{2}, s1_d{1}, s1_d{0}, 0, 1, 1, 0, 0, 0, 1, 0 };
  string Namespace = "TriCore";
  dag OutOperandList = (outs DataRegs:$s1_d);
  dag InOperandList = (ins memsrc:$off16);
  string AsmString = "ldr $s1_d, $off16";
  list<dag> Pattern = [(set DataRegs:$s1_d, (load addr:$off16))];
  list<Register> Uses = [];
  list<Register> Defs = [];
  list<Predicate> Predicates = [];
  int Size = 4;
  string DecoderNamespace = "";
  int CodeSize = 0;
  int AddedComplexity = 0;
  bit isReturn = 0;
  bit isBranch = 0;
  bit isIndirectBranch = 0;
  bit isCompare = 0;
  bit isMoveImm = 0;
  bit isBitcast = 0;
  bit isSelect = 0;
  bit isBarrier = 0;
  bit isCall = 0;
  bit canFoldAsLoad = 0;
  bit mayLoad = 1;
  bit mayStore = ?;
  bit isConvertibleToThreeAddress = 0;
  bit isCommutable = 0;
  bit isTerminator = 0;
  bit isReMaterializable = 0;
  bit isPredicable = 0;
  bit hasDelaySlot = 0;
  bit usesCustomInserter = 0;
  bit hasPostISelHook = 0;
  bit hasCtrlDep = 0;
  bit isNotDuplicable = 0;
  bit isConvergent = 0;
  bit isAsCheapAsAMove = 0;
  bit hasExtraSrcRegAllocReq = 0;
  bit hasExtraDefRegAllocReq = 0;
  bit isRegSequence = 0;
  bit isPseudo = 0;
  bit isExtractSubreg = 0;
  bit isInsertSubreg = 0;
  bit hasSideEffects = ?;
  bit isCodeGenOnly = 0;
  bit isAsmParserOnly = 0;
  InstrItinClass Itinerary = NoItinerary;
  list<SchedReadWrite> SchedRW = ?;
  string Constraints = "";
  string DisableEncoding = "";
  string PostEncoderMethod = "";
  string DecoderMethod = "";
  bits<64> TSFlags = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string AsmMatchConverter = "";
  string TwoOperandAliasConstraint = "";
  bit UseNamedOperandTable = 0;
  bits<16> off16 = { ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? };
  bits<4> s2 = { ?, ?, ?, ? };
  bits<4> s1_d = { ?, ?, ?, ? };
  string NAME = ?;
}
def LIFETIME_END {	// Instruction
  string Namespace = "TargetOpcode";
  dag OutOperandList = (outs);
  dag InOperandList = (ins i32imm:$id);
  string AsmString = "LIFETIME_END";
  list<dag> Pattern = ?;
  list<Register> Uses = [];
  list<Register> Defs = [];
  list<Predicate> Predicates = [];
  int Size = 0;
  string DecoderNamespace = "";
  int CodeSize = 0;
  int AddedComplexity = 0;
  bit isReturn = 0;
  bit isBranch = 0;
  bit isIndirectBranch = 0;
  bit isCompare = 0;
  bit isMoveImm = 0;
  bit isBitcast = 0;
  bit isSelect = 0;
  bit isBarrier = 0;
  bit isCall = 0;
  bit canFoldAsLoad = 0;
  bit mayLoad = ?;
  bit mayStore = ?;
  bit isConvertibleToThreeAddress = 0;
  bit isCommutable = 0;
  bit isTerminator = 0;
  bit isReMaterializable = 0;
  bit isPredicable = 0;
  bit hasDelaySlot = 0;
  bit usesCustomInserter = 0;
  bit hasPostISelHook = 0;
  bit hasCtrlDep = 0;
  bit isNotDuplicable = 0;
  bit isConvergent = 0;
  bit isAsCheapAsAMove = 0;
  bit hasExtraSrcRegAllocReq = 0;
  bit hasExtraDefRegAllocReq = 0;
  bit isRegSequence = 0;
  bit isPseudo = 1;
  bit isExtractSubreg = 0;
  bit isInsertSubreg = 0;
  bit hasSideEffects = 0;
  bit isCodeGenOnly = 1;
  bit isAsmParserOnly = 0;
  InstrItinClass Itinerary = NoItinerary;
  list<SchedReadWrite> SchedRW = ?;
  string Constraints = "";
  string DisableEncoding = "";
  string PostEncoderMethod = "";
  string DecoderMethod = "";
  bits<64> TSFlags = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string AsmMatchConverter = "";
  string TwoOperandAliasConstraint = "";
  bit UseNamedOperandTable = 0;
  string NAME = ?;
}
def LIFETIME_START {	// Instruction
  string Namespace = "TargetOpcode";
  dag OutOperandList = (outs);
  dag InOperandList = (ins i32imm:$id);
  string AsmString = "LIFETIME_START";
  list<dag> Pattern = ?;
  list<Register> Uses = [];
  list<Register> Defs = [];
  list<Predicate> Predicates = [];
  int Size = 0;
  string DecoderNamespace = "";
  int CodeSize = 0;
  int AddedComplexity = 0;
  bit isReturn = 0;
  bit isBranch = 0;
  bit isIndirectBranch = 0;
  bit isCompare = 0;
  bit isMoveImm = 0;
  bit isBitcast = 0;
  bit isSelect = 0;
  bit isBarrier = 0;
  bit isCall = 0;
  bit canFoldAsLoad = 0;
  bit mayLoad = ?;
  bit mayStore = ?;
  bit isConvertibleToThreeAddress = 0;
  bit isCommutable = 0;
  bit isTerminator = 0;
  bit isReMaterializable = 0;
  bit isPredicable = 0;
  bit hasDelaySlot = 0;
  bit usesCustomInserter = 0;
  bit hasPostISelHook = 0;
  bit hasCtrlDep = 0;
  bit isNotDuplicable = 0;
  bit isConvergent = 0;
  bit isAsCheapAsAMove = 0;
  bit hasExtraSrcRegAllocReq = 0;
  bit hasExtraDefRegAllocReq = 0;
  bit isRegSequence = 0;
  bit isPseudo = 1;
  bit isExtractSubreg = 0;
  bit isInsertSubreg = 0;
  bit hasSideEffects = 0;
  bit isCodeGenOnly = 1;
  bit isAsmParserOnly = 0;
  InstrItinClass Itinerary = NoItinerary;
  list<SchedReadWrite> SchedRW = ?;
  string Constraints = "";
  string DisableEncoding = "";
  string PostEncoderMethod = "";
  string DecoderMethod = "";
  bits<64> TSFlags = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string AsmMatchConverter = "";
  string TwoOperandAliasConstraint = "";
  bit UseNamedOperandTable = 0;
  string NAME = ?;
}
def LOAD_STACK_GUARD {	// Instruction
  string Namespace = "TargetOpcode";
  dag OutOperandList = (outs ptr_rc:$dst);
  dag InOperandList = (ins);
  string AsmString = "";
  list<dag> Pattern = ?;
  list<Register> Uses = [];
  list<Register> Defs = [];
  list<Predicate> Predicates = [];
  int Size = 0;
  string DecoderNamespace = "";
  int CodeSize = 0;
  int AddedComplexity = 0;
  bit isReturn = 0;
  bit isBranch = 0;
  bit isIndirectBranch = 0;
  bit isCompare = 0;
  bit isMoveImm = 0;
  bit isBitcast = 0;
  bit isSelect = 0;
  bit isBarrier = 0;
  bit isCall = 0;
  bit canFoldAsLoad = 0;
  bit mayLoad = 1;
  bit mayStore = ?;
  bit isConvertibleToThreeAddress = 0;
  bit isCommutable = 0;
  bit isTerminator = 0;
  bit isReMaterializable = 1;
  bit isPredicable = 0;
  bit hasDelaySlot = 0;
  bit usesCustomInserter = 0;
  bit hasPostISelHook = 0;
  bit hasCtrlDep = 0;
  bit isNotDuplicable = 0;
  bit isConvergent = 0;
  bit isAsCheapAsAMove = 0;
  bit hasExtraSrcRegAllocReq = 0;
  bit hasExtraDefRegAllocReq = 0;
  bit isRegSequence = 0;
  bit isPseudo = 1;
  bit isExtractSubreg = 0;
  bit isInsertSubreg = 0;
  bit hasSideEffects = 0;
  bit isCodeGenOnly = 1;
  bit isAsmParserOnly = 0;
  InstrItinClass Itinerary = NoItinerary;
  list<SchedReadWrite> SchedRW = ?;
  string Constraints = "";
  string DisableEncoding = "";
  string PostEncoderMethod = "";
  string DecoderMethod = "";
  bits<64> TSFlags = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string AsmMatchConverter = "";
  string TwoOperandAliasConstraint = "";
  bit UseNamedOperandTable = 0;
  string NAME = ?;
}
def LOCAL_ESCAPE {	// Instruction
  string Namespace = "TargetOpcode";
  dag OutOperandList = (outs);
  dag InOperandList = (ins ptr_rc:$symbol, i32imm:$id);
  string AsmString = "";
  list<dag> Pattern = ?;
  list<Register> Uses = [];
  list<Register> Defs = [];
  list<Predicate> Predicates = [];
  int Size = 0;
  string DecoderNamespace = "";
  int CodeSize = 0;
  int AddedComplexity = 0;
  bit isReturn = 0;
  bit isBranch = 0;
  bit isIndirectBranch = 0;
  bit isCompare = 0;
  bit isMoveImm = 0;
  bit isBitcast = 0;
  bit isSelect = 0;
  bit isBarrier = 0;
  bit isCall = 0;
  bit canFoldAsLoad = 0;
  bit mayLoad = ?;
  bit mayStore = ?;
  bit isConvertibleToThreeAddress = 0;
  bit isCommutable = 0;
  bit isTerminator = 0;
  bit isReMaterializable = 0;
  bit isPredicable = 0;
  bit hasDelaySlot = 0;
  bit usesCustomInserter = 0;
  bit hasPostISelHook = 0;
  bit hasCtrlDep = 1;
  bit isNotDuplicable = 0;
  bit isConvergent = 0;
  bit isAsCheapAsAMove = 0;
  bit hasExtraSrcRegAllocReq = 0;
  bit hasExtraDefRegAllocReq = 0;
  bit isRegSequence = 0;
  bit isPseudo = 1;
  bit isExtractSubreg = 0;
  bit isInsertSubreg = 0;
  bit hasSideEffects = 0;
  bit isCodeGenOnly = 1;
  bit isAsmParserOnly = 0;
  InstrItinClass Itinerary = NoItinerary;
  list<SchedReadWrite> SchedRW = ?;
  string Constraints = "";
  string DisableEncoding = "";
  string PostEncoderMethod = "";
  string DecoderMethod = "";
  bits<64> TSFlags = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string AsmMatchConverter = "";
  string TwoOperandAliasConstraint = "";
  bit UseNamedOperandTable = 0;
  string NAME = ?;
}
def MOVHIi16 {	// Instruction InstTriCore T32 RLC MOV
  field bits<32> Inst = { d{3}, d{2}, d{1}, d{0}, const16{15}, const16{14}, 1, const16{12}, const16{11}, const16{10}, const16{9}, 0, imm{15}, imm{14}, imm{13}, imm{12}, dst{3}, dst{2}, dst{1}, dst{0}, imm{11}, imm{10}, imm{9}, imm{8}, imm{7}, imm{6}, imm{5}, imm{4}, imm{3}, imm{2}, imm{1}, imm{0} };
  string Namespace = "TriCore";
  dag OutOperandList = (outs DataRegs:$dst);
  dag InOperandList = (ins DataRegs:$fakesrc, i32imm:$imm);
  string AsmString = "movh $dst, $imm";
  list<dag> Pattern = [];
  list<Register> Uses = [];
  list<Register> Defs = [];
  list<Predicate> Predicates = [];
  int Size = 4;
  string DecoderNamespace = "";
  int CodeSize = 0;
  int AddedComplexity = 0;
  bit isReturn = 0;
  bit isBranch = 0;
  bit isIndirectBranch = 0;
  bit isCompare = 0;
  bit isMoveImm = 0;
  bit isBitcast = 0;
  bit isSelect = 0;
  bit isBarrier = 0;
  bit isCall = 0;
  bit canFoldAsLoad = 0;
  bit mayLoad = ?;
  bit mayStore = ?;
  bit isConvertibleToThreeAddress = 0;
  bit isCommutable = 0;
  bit isTerminator = 0;
  bit isReMaterializable = 0;
  bit isPredicable = 0;
  bit hasDelaySlot = 0;
  bit usesCustomInserter = 0;
  bit hasPostISelHook = 0;
  bit hasCtrlDep = 0;
  bit isNotDuplicable = 0;
  bit isConvergent = 0;
  bit isAsCheapAsAMove = 0;
  bit hasExtraSrcRegAllocReq = 0;
  bit hasExtraDefRegAllocReq = 0;
  bit isRegSequence = 0;
  bit isPseudo = 0;
  bit isExtractSubreg = 0;
  bit isInsertSubreg = 0;
  bit hasSideEffects = ?;
  bit isCodeGenOnly = 0;
  bit isAsmParserOnly = 0;
  InstrItinClass Itinerary = NoItinerary;
  list<SchedReadWrite> SchedRW = ?;
  string Constraints = "$fakesrc = $dst";
  string DisableEncoding = "";
  string PostEncoderMethod = "";
  string DecoderMethod = "";
  bits<64> TSFlags = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string AsmMatchConverter = "";
  string TwoOperandAliasConstraint = "";
  bit UseNamedOperandTable = 0;
  bits<4> s1 = { ?, ?, ?, ? };
  bits<16> const16 = { ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? };
  bits<4> d = { ?, ?, ?, ? };
  bits<4> dst = { ?, ?, ?, ? };
  bits<16> imm = { ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? };
  string NAME = ?;
}
def MOVaaRR {	// Instruction InstTriCore T32 RR
  field bits<32> Inst = { d{3}, d{2}, d{1}, d{0}, 0, 1, 1, 0, 0, 0, 1, 1, ?, ?, n{1}, n{0}, s2{3}, s2{2}, s2{1}, s2{0}, s1{3}, s1{2}, s1{1}, s1{0}, 0, 0, 0, 0, 0, 0, 0, 1 };
  string Namespace = "TriCore";
  dag OutOperandList = (outs AddrRegs:$d);
  dag InOperandList = (ins AddrRegs:$s2);
  string AsmString = "mov.aa $d, $s2";
  list<dag> Pattern = [];
  list<Register> Uses = [];
  list<Register> Defs = [];
  list<Predicate> Predicates = [];
  int Size = 4;
  string DecoderNamespace = "";
  int CodeSize = 0;
  int AddedComplexity = 0;
  bit isReturn = 0;
  bit isBranch = 0;
  bit isIndirectBranch = 0;
  bit isCompare = 0;
  bit isMoveImm = 0;
  bit isBitcast = 0;
  bit isSelect = 0;
  bit isBarrier = 0;
  bit isCall = 0;
  bit canFoldAsLoad = 0;
  bit mayLoad = ?;
  bit mayStore = ?;
  bit isConvertibleToThreeAddress = 0;
  bit isCommutable = 0;
  bit isTerminator = 0;
  bit isReMaterializable = 0;
  bit isPredicable = 0;
  bit hasDelaySlot = 0;
  bit usesCustomInserter = 0;
  bit hasPostISelHook = 0;
  bit hasCtrlDep = 0;
  bit isNotDuplicable = 0;
  bit isConvergent = 0;
  bit isAsCheapAsAMove = 0;
  bit hasExtraSrcRegAllocReq = 0;
  bit hasExtraDefRegAllocReq = 0;
  bit isRegSequence = 0;
  bit isPseudo = 0;
  bit isExtractSubreg = 0;
  bit isInsertSubreg = 0;
  bit hasSideEffects = ?;
  bit isCodeGenOnly = 0;
  bit isAsmParserOnly = 0;
  InstrItinClass Itinerary = NoItinerary;
  list<SchedReadWrite> SchedRW = ?;
  string Constraints = "";
  string DisableEncoding = "";
  string PostEncoderMethod = "";
  string DecoderMethod = "";
  bits<64> TSFlags = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string AsmMatchConverter = "";
  string TwoOperandAliasConstraint = "";
  bit UseNamedOperandTable = 0;
  bits<4> s1 = { ?, ?, ?, ? };
  bits<4> s2 = { ?, ?, ?, ? };
  bits<4> d = { ?, ?, ?, ? };
  bits<2> n = { ?, ? };
  string NAME = ?;
}
def MOVdRR {	// Instruction InstTriCore T32 RR
  field bits<32> Inst = { d{3}, d{2}, d{1}, d{0}, 0, 1, 0, 0, 1, 1, 0, 0, ?, ?, n{1}, n{0}, s2{3}, s2{2}, s2{1}, s2{0}, s1{3}, s1{2}, s1{1}, s1{0}, 0, 0, 0, 0, 0, 0, 0, 1 };
  string Namespace = "TriCore";
  dag OutOperandList = (outs DataRegs:$d);
  dag InOperandList = (ins AddrRegs:$s2);
  string AsmString = "mov.d $d, $s2";
  list<dag> Pattern = [];
  list<Register> Uses = [];
  list<Register> Defs = [];
  list<Predicate> Predicates = [];
  int Size = 4;
  string DecoderNamespace = "";
  int CodeSize = 0;
  int AddedComplexity = 0;
  bit isReturn = 0;
  bit isBranch = 0;
  bit isIndirectBranch = 0;
  bit isCompare = 0;
  bit isMoveImm = 0;
  bit isBitcast = 0;
  bit isSelect = 0;
  bit isBarrier = 0;
  bit isCall = 0;
  bit canFoldAsLoad = 0;
  bit mayLoad = ?;
  bit mayStore = ?;
  bit isConvertibleToThreeAddress = 0;
  bit isCommutable = 0;
  bit isTerminator = 0;
  bit isReMaterializable = 0;
  bit isPredicable = 0;
  bit hasDelaySlot = 0;
  bit usesCustomInserter = 0;
  bit hasPostISelHook = 0;
  bit hasCtrlDep = 0;
  bit isNotDuplicable = 0;
  bit isConvergent = 0;
  bit isAsCheapAsAMove = 0;
  bit hasExtraSrcRegAllocReq = 0;
  bit hasExtraDefRegAllocReq = 0;
  bit isRegSequence = 0;
  bit isPseudo = 0;
  bit isExtractSubreg = 0;
  bit isInsertSubreg = 0;
  bit hasSideEffects = ?;
  bit isCodeGenOnly = 0;
  bit isAsmParserOnly = 0;
  InstrItinClass Itinerary = NoItinerary;
  list<SchedReadWrite> SchedRW = ?;
  string Constraints = "";
  string DisableEncoding = "";
  string PostEncoderMethod = "";
  string DecoderMethod = "";
  bits<64> TSFlags = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string AsmMatchConverter = "";
  string TwoOperandAliasConstraint = "";
  bit UseNamedOperandTable = 0;
  bits<4> s1 = { ?, ?, ?, ? };
  bits<4> s2 = { ?, ?, ?, ? };
  bits<4> d = { ?, ?, ?, ? };
  bits<2> n = { ?, ? };
  string NAME = ?;
}
def MOVi32 {	// Instruction InstTriCore
  string Namespace = "TriCore";
  dag OutOperandList = (outs DataRegs:$dst);
  dag InOperandList = (ins i32imm:$src);
  string AsmString = "";
  list<dag> Pattern = [(set i32:$dst, (movei32 imm:$src))];
  list<Register> Uses = [];
  list<Register> Defs = [];
  list<Predicate> Predicates = [];
  int Size = 0;
  string DecoderNamespace = "";
  int CodeSize = 0;
  int AddedComplexity = 0;
  bit isReturn = 0;
  bit isBranch = 0;
  bit isIndirectBranch = 0;
  bit isCompare = 0;
  bit isMoveImm = 0;
  bit isBitcast = 0;
  bit isSelect = 0;
  bit isBarrier = 0;
  bit isCall = 0;
  bit canFoldAsLoad = 0;
  bit mayLoad = ?;
  bit mayStore = ?;
  bit isConvertibleToThreeAddress = 0;
  bit isCommutable = 0;
  bit isTerminator = 0;
  bit isReMaterializable = 0;
  bit isPredicable = 0;
  bit hasDelaySlot = 0;
  bit usesCustomInserter = 0;
  bit hasPostISelHook = 0;
  bit hasCtrlDep = 0;
  bit isNotDuplicable = 0;
  bit isConvergent = 0;
  bit isAsCheapAsAMove = 0;
  bit hasExtraSrcRegAllocReq = 0;
  bit hasExtraDefRegAllocReq = 0;
  bit isRegSequence = 0;
  bit isPseudo = 1;
  bit isExtractSubreg = 0;
  bit isInsertSubreg = 0;
  bit hasSideEffects = ?;
  bit isCodeGenOnly = 0;
  bit isAsmParserOnly = 0;
  InstrItinClass Itinerary = NoItinerary;
  list<SchedReadWrite> SchedRW = ?;
  string Constraints = "";
  string DisableEncoding = "";
  string PostEncoderMethod = "";
  string DecoderMethod = "";
  bits<64> TSFlags = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string AsmMatchConverter = "";
  string TwoOperandAliasConstraint = "";
  bit UseNamedOperandTable = 0;
  string NAME = ?;
}
def MOVrlc {	// Instruction InstTriCore T32 RLC MOV
  field bits<32> Inst = { d{3}, d{2}, d{1}, d{0}, const16{15}, const16{14}, 1, const16{12}, const16{11}, const16{10}, const16{9}, 0, imm{15}, imm{14}, imm{13}, imm{12}, dst{3}, dst{2}, dst{1}, dst{0}, imm{11}, imm{10}, imm{9}, imm{8}, imm{7}, imm{6}, imm{5}, imm{4}, imm{3}, imm{2}, imm{1}, imm{0} };
  string Namespace = "TriCore";
  dag OutOperandList = (outs DataRegs:$dst);
  dag InOperandList = (ins i32imm:$imm);
  string AsmString = "movw $dst, $imm";
  list<dag> Pattern = [(set i32:$dst, i32imm_lo:$imm)];
  list<Register> Uses = [];
  list<Register> Defs = [];
  list<Predicate> Predicates = [];
  int Size = 4;
  string DecoderNamespace = "";
  int CodeSize = 0;
  int AddedComplexity = 0;
  bit isReturn = 0;
  bit isBranch = 0;
  bit isIndirectBranch = 0;
  bit isCompare = 0;
  bit isMoveImm = 0;
  bit isBitcast = 0;
  bit isSelect = 0;
  bit isBarrier = 0;
  bit isCall = 0;
  bit canFoldAsLoad = 0;
  bit mayLoad = ?;
  bit mayStore = ?;
  bit isConvertibleToThreeAddress = 0;
  bit isCommutable = 0;
  bit isTerminator = 0;
  bit isReMaterializable = 0;
  bit isPredicable = 0;
  bit hasDelaySlot = 0;
  bit usesCustomInserter = 0;
  bit hasPostISelHook = 0;
  bit hasCtrlDep = 0;
  bit isNotDuplicable = 0;
  bit isConvergent = 0;
  bit isAsCheapAsAMove = 0;
  bit hasExtraSrcRegAllocReq = 0;
  bit hasExtraDefRegAllocReq = 0;
  bit isRegSequence = 0;
  bit isPseudo = 0;
  bit isExtractSubreg = 0;
  bit isInsertSubreg = 0;
  bit hasSideEffects = ?;
  bit isCodeGenOnly = 0;
  bit isAsmParserOnly = 0;
  InstrItinClass Itinerary = NoItinerary;
  list<SchedReadWrite> SchedRW = ?;
  string Constraints = "";
  string DisableEncoding = "";
  string PostEncoderMethod = "";
  string DecoderMethod = "";
  bits<64> TSFlags = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string AsmMatchConverter = "";
  string TwoOperandAliasConstraint = "";
  bit UseNamedOperandTable = 0;
  bits<4> s1 = { ?, ?, ?, ? };
  bits<16> const16 = { ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? };
  bits<4> d = { ?, ?, ?, ? };
  bits<4> dst = { ?, ?, ?, ? };
  bits<16> imm = { ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? };
  string NAME = ?;
}
def MOVrr {	// Instruction InstTriCore T32 RR
  field bits<32> Inst = { d{3}, d{2}, d{1}, d{0}, 0, 0, 0, 1, 1, 1, 1, 1, ?, ?, n{1}, n{0}, s2{3}, s2{2}, s2{1}, s2{0}, s1{3}, s1{2}, s1{1}, s1{0}, 0, 0, 0, 0, 1, 0, 1, 1 };
  string Namespace = "TriCore";
  dag OutOperandList = (outs DataRegs:$d);
  dag InOperandList = (ins DataRegs:$s2);
  string AsmString = "mov $d, $s2";
  list<dag> Pattern = [];
  list<Register> Uses = [];
  list<Register> Defs = [];
  list<Predicate> Predicates = [];
  int Size = 4;
  string DecoderNamespace = "";
  int CodeSize = 0;
  int AddedComplexity = 0;
  bit isReturn = 0;
  bit isBranch = 0;
  bit isIndirectBranch = 0;
  bit isCompare = 0;
  bit isMoveImm = 0;
  bit isBitcast = 0;
  bit isSelect = 0;
  bit isBarrier = 0;
  bit isCall = 0;
  bit canFoldAsLoad = 0;
  bit mayLoad = ?;
  bit mayStore = ?;
  bit isConvertibleToThreeAddress = 0;
  bit isCommutable = 0;
  bit isTerminator = 0;
  bit isReMaterializable = 0;
  bit isPredicable = 0;
  bit hasDelaySlot = 0;
  bit usesCustomInserter = 0;
  bit hasPostISelHook = 0;
  bit hasCtrlDep = 0;
  bit isNotDuplicable = 0;
  bit isConvergent = 0;
  bit isAsCheapAsAMove = 0;
  bit hasExtraSrcRegAllocReq = 0;
  bit hasExtraDefRegAllocReq = 0;
  bit isRegSequence = 0;
  bit isPseudo = 0;
  bit isExtractSubreg = 0;
  bit isInsertSubreg = 0;
  bit hasSideEffects = ?;
  bit isCodeGenOnly = 0;
  bit isAsmParserOnly = 0;
  InstrItinClass Itinerary = NoItinerary;
  list<SchedReadWrite> SchedRW = ?;
  string Constraints = "";
  string DisableEncoding = "";
  string PostEncoderMethod = "";
  string DecoderMethod = "";
  bits<64> TSFlags = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string AsmMatchConverter = "";
  string TwoOperandAliasConstraint = "";
  bit UseNamedOperandTable = 0;
  bits<4> s1 = { ?, ?, ?, ? };
  bits<4> s2 = { ?, ?, ?, ? };
  bits<4> d = { ?, ?, ?, ? };
  bits<2> n = { ?, ? };
  string NAME = ?;
}
def MULri {	// Instruction InstTriCore T32 RC
  field bits<32> Inst = { d{3}, d{2}, d{1}, d{0}, 0, 0, 0, 0, 0, 0, 1, const9{8}, const9{7}, const9{6}, const9{5}, const9{4}, const9{3}, const9{2}, const9{1}, const9{0}, s1{3}, s1{2}, s1{1}, s1{0}, 0, 1, 0, 1, 0, 0, 1, 1 };
  string Namespace = "TriCore";
  dag OutOperandList = (outs DataRegs:$d);
  dag InOperandList = (ins DataRegs:$s1, s9imm:$const9);
  string AsmString = "mul $d, $s1, $const9";
  list<dag> Pattern = [(set DataRegs:$d, (add DataRegs:$s1, immSExt9:$const9))];
  list<Register> Uses = [];
  list<Register> Defs = [PSW];
  list<Predicate> Predicates = [];
  int Size = 4;
  string DecoderNamespace = "";
  int CodeSize = 0;
  int AddedComplexity = 0;
  bit isReturn = 0;
  bit isBranch = 0;
  bit isIndirectBranch = 0;
  bit isCompare = 0;
  bit isMoveImm = 0;
  bit isBitcast = 0;
  bit isSelect = 0;
  bit isBarrier = 0;
  bit isCall = 0;
  bit canFoldAsLoad = 0;
  bit mayLoad = ?;
  bit mayStore = ?;
  bit isConvertibleToThreeAddress = 0;
  bit isCommutable = 0;
  bit isTerminator = 0;
  bit isReMaterializable = 0;
  bit isPredicable = 0;
  bit hasDelaySlot = 0;
  bit usesCustomInserter = 0;
  bit hasPostISelHook = 0;
  bit hasCtrlDep = 0;
  bit isNotDuplicable = 0;
  bit isConvergent = 0;
  bit isAsCheapAsAMove = 0;
  bit hasExtraSrcRegAllocReq = 0;
  bit hasExtraDefRegAllocReq = 0;
  bit isRegSequence = 0;
  bit isPseudo = 0;
  bit isExtractSubreg = 0;
  bit isInsertSubreg = 0;
  bit hasSideEffects = ?;
  bit isCodeGenOnly = 0;
  bit isAsmParserOnly = 0;
  InstrItinClass Itinerary = NoItinerary;
  list<SchedReadWrite> SchedRW = ?;
  string Constraints = "";
  string DisableEncoding = "";
  string PostEncoderMethod = "";
  string DecoderMethod = "";
  bits<64> TSFlags = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string AsmMatchConverter = "";
  string TwoOperandAliasConstraint = "";
  bit UseNamedOperandTable = 0;
  bits<4> s1 = { ?, ?, ?, ? };
  bits<4> d = { ?, ?, ?, ? };
  bits<9> const9 = { ?, ?, ?, ?, ?, ?, ?, ?, ? };
  string NAME = ?;
}
def MULrr {	// Instruction InstTriCore T32 RR2
  field bits<32> Inst = { d{3}, d{2}, d{1}, d{0}, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, s2{3}, s2{2}, s2{1}, s2{0}, s1{3}, s1{2}, s1{1}, s1{0}, 0, 1, 1, 1, 0, 0, 1, 1 };
  string Namespace = "TriCore";
  dag OutOperandList = (outs DataRegs:$d);
  dag InOperandList = (ins DataRegs:$s2, DataRegs:$s1);
  string AsmString = "mul $d, $s2, $s1";
  list<dag> Pattern = [(set DataRegs:$d, (mul DataRegs:$s1, DataRegs:$s2))];
  list<Register> Uses = [];
  list<Register> Defs = [PSW];
  list<Predicate> Predicates = [];
  int Size = 4;
  string DecoderNamespace = "";
  int CodeSize = 0;
  int AddedComplexity = 0;
  bit isReturn = 0;
  bit isBranch = 0;
  bit isIndirectBranch = 0;
  bit isCompare = 0;
  bit isMoveImm = 0;
  bit isBitcast = 0;
  bit isSelect = 0;
  bit isBarrier = 0;
  bit isCall = 0;
  bit canFoldAsLoad = 0;
  bit mayLoad = ?;
  bit mayStore = ?;
  bit isConvertibleToThreeAddress = 0;
  bit isCommutable = 0;
  bit isTerminator = 0;
  bit isReMaterializable = 0;
  bit isPredicable = 0;
  bit hasDelaySlot = 0;
  bit usesCustomInserter = 0;
  bit hasPostISelHook = 0;
  bit hasCtrlDep = 0;
  bit isNotDuplicable = 0;
  bit isConvergent = 0;
  bit isAsCheapAsAMove = 0;
  bit hasExtraSrcRegAllocReq = 0;
  bit hasExtraDefRegAllocReq = 0;
  bit isRegSequence = 0;
  bit isPseudo = 0;
  bit isExtractSubreg = 0;
  bit isInsertSubreg = 0;
  bit hasSideEffects = ?;
  bit isCodeGenOnly = 0;
  bit isAsmParserOnly = 0;
  InstrItinClass Itinerary = NoItinerary;
  list<SchedReadWrite> SchedRW = ?;
  string Constraints = "";
  string DisableEncoding = "";
  string PostEncoderMethod = "";
  string DecoderMethod = "";
  bits<64> TSFlags = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string AsmMatchConverter = "";
  string TwoOperandAliasConstraint = "";
  bit UseNamedOperandTable = 0;
  bits<4> s1 = { ?, ?, ?, ? };
  bits<4> s2 = { ?, ?, ?, ? };
  bits<4> d = { ?, ?, ?, ? };
  bits<2> n = { ?, ? };
  string NAME = ?;
}
def MetadataVT {	// ValueType
  string Namespace = "MVT";
  int Size = 0;
  int Value = 250;
  string NAME = ?;
}
def MoveImm32Ty {	// SDTypeProfile
  int NumResults = 1;
  int NumOperands = 1;
  list<SDTypeConstraint> Constraints = [anonymous_473, anonymous_474];
  string NAME = ?;
}
def NANDrc {	// Instruction InstTriCore T32 RC rc
  field bits<32> Inst = { d{3}, d{2}, d{1}, d{0}, 0, 0, 0, 1, 0, 0, 1, const9{8}, const9{7}, const9{6}, const9{5}, const9{4}, const9{3}, const9{2}, const9{1}, const9{0}, s1{3}, s1{2}, s1{1}, s1{0}, 1, 0, 0, 0, 1, 1, 1, 1 };
  string Namespace = "TriCore";
  dag OutOperandList = (outs DataRegs:$d);
  dag InOperandList = (ins DataRegs:$s1, u9imm:$const9);
  string AsmString = "nand $d, $s1, $const9";
  list<dag> Pattern = [(set i32:$d, (not (and i32:$s1, immZExt9:$const9)))];
  list<Register> Uses = [];
  list<Register> Defs = [];
  list<Predicate> Predicates = [];
  int Size = 4;
  string DecoderNamespace = "";
  int CodeSize = 0;
  int AddedComplexity = 0;
  bit isReturn = 0;
  bit isBranch = 0;
  bit isIndirectBranch = 0;
  bit isCompare = 0;
  bit isMoveImm = 0;
  bit isBitcast = 0;
  bit isSelect = 0;
  bit isBarrier = 0;
  bit isCall = 0;
  bit canFoldAsLoad = 0;
  bit mayLoad = ?;
  bit mayStore = ?;
  bit isConvertibleToThreeAddress = 0;
  bit isCommutable = 0;
  bit isTerminator = 0;
  bit isReMaterializable = 0;
  bit isPredicable = 0;
  bit hasDelaySlot = 0;
  bit usesCustomInserter = 0;
  bit hasPostISelHook = 0;
  bit hasCtrlDep = 0;
  bit isNotDuplicable = 0;
  bit isConvergent = 0;
  bit isAsCheapAsAMove = 0;
  bit hasExtraSrcRegAllocReq = 0;
  bit hasExtraDefRegAllocReq = 0;
  bit isRegSequence = 0;
  bit isPseudo = 0;
  bit isExtractSubreg = 0;
  bit isInsertSubreg = 0;
  bit hasSideEffects = ?;
  bit isCodeGenOnly = 0;
  bit isAsmParserOnly = 0;
  InstrItinClass Itinerary = NoItinerary;
  list<SchedReadWrite> SchedRW = ?;
  string Constraints = "";
  string DisableEncoding = "";
  string PostEncoderMethod = "";
  string DecoderMethod = "";
  bits<64> TSFlags = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string AsmMatchConverter = "";
  string TwoOperandAliasConstraint = "";
  bit UseNamedOperandTable = 0;
  bits<4> s1 = { ?, ?, ?, ? };
  bits<4> d = { ?, ?, ?, ? };
  bits<9> const9 = { ?, ?, ?, ?, ?, ?, ?, ?, ? };
  bit Logical32_1::isComm = 0;
  string NAME = "NAND";
}
def NANDrr {	// Instruction InstTriCore T32 RR rr
  field bits<32> Inst = { d{3}, d{2}, d{1}, d{0}, 0, 0, 0, 0, 1, 0, 0, 1, ?, ?, n{1}, n{0}, s2{3}, s2{2}, s2{1}, s2{0}, s1{3}, s1{2}, s1{1}, s1{0}, 0, 0, 0, 0, 1, 1, 1, 1 };
  string Namespace = "TriCore";
  dag OutOperandList = (outs DataRegs:$d);
  dag InOperandList = (ins DataRegs:$s1, DataRegs:$s2);
  string AsmString = "nand $d, $s1, $s2";
  list<dag> Pattern = [(set i32:$d, (not (and i32:$s1, i32:$s2)))];
  list<Register> Uses = [];
  list<Register> Defs = [];
  list<Predicate> Predicates = [];
  int Size = 4;
  string DecoderNamespace = "";
  int CodeSize = 0;
  int AddedComplexity = 0;
  bit isReturn = 0;
  bit isBranch = 0;
  bit isIndirectBranch = 0;
  bit isCompare = 0;
  bit isMoveImm = 0;
  bit isBitcast = 0;
  bit isSelect = 0;
  bit isBarrier = 0;
  bit isCall = 0;
  bit canFoldAsLoad = 0;
  bit mayLoad = ?;
  bit mayStore = ?;
  bit isConvertibleToThreeAddress = 0;
  bit isCommutable = 0;
  bit isTerminator = 0;
  bit isReMaterializable = 0;
  bit isPredicable = 0;
  bit hasDelaySlot = 0;
  bit usesCustomInserter = 0;
  bit hasPostISelHook = 0;
  bit hasCtrlDep = 0;
  bit isNotDuplicable = 0;
  bit isConvergent = 0;
  bit isAsCheapAsAMove = 0;
  bit hasExtraSrcRegAllocReq = 0;
  bit hasExtraDefRegAllocReq = 0;
  bit isRegSequence = 0;
  bit isPseudo = 0;
  bit isExtractSubreg = 0;
  bit isInsertSubreg = 0;
  bit hasSideEffects = ?;
  bit isCodeGenOnly = 0;
  bit isAsmParserOnly = 0;
  InstrItinClass Itinerary = NoItinerary;
  list<SchedReadWrite> SchedRW = ?;
  string Constraints = "";
  string DisableEncoding = "";
  string PostEncoderMethod = "";
  string DecoderMethod = "";
  bits<64> TSFlags = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string AsmMatchConverter = "";
  string TwoOperandAliasConstraint = "";
  bit UseNamedOperandTable = 0;
  bits<4> s1 = { ?, ?, ?, ? };
  bits<4> s2 = { ?, ?, ?, ? };
  bits<4> d = { ?, ?, ?, ? };
  bits<2> n = { ?, ? };
  bit Logical32_1::isComm = 0;
  string NAME = "NAND";
}
def NOOP_SDNodeXForm {	// SDNodeXForm
  SDNode Opcode = imm;
  string XFormFunction = "";
  string NAME = ?;
}
def NORrc {	// Instruction InstTriCore T32 RC rc
  field bits<32> Inst = { d{3}, d{2}, d{1}, d{0}, 0, 0, 0, 1, 0, 1, 1, const9{8}, const9{7}, const9{6}, const9{5}, const9{4}, const9{3}, const9{2}, const9{1}, const9{0}, s1{3}, s1{2}, s1{1}, s1{0}, 1, 0, 0, 0, 1, 1, 1, 1 };
  string Namespace = "TriCore";
  dag OutOperandList = (outs DataRegs:$d);
  dag InOperandList = (ins DataRegs:$s1, u9imm:$const9);
  string AsmString = "nor $d, $s1, $const9";
  list<dag> Pattern = [(set i32:$d, (not (or i32:$s1, immZExt9:$const9)))];
  list<Register> Uses = [];
  list<Register> Defs = [];
  list<Predicate> Predicates = [];
  int Size = 4;
  string DecoderNamespace = "";
  int CodeSize = 0;
  int AddedComplexity = 0;
  bit isReturn = 0;
  bit isBranch = 0;
  bit isIndirectBranch = 0;
  bit isCompare = 0;
  bit isMoveImm = 0;
  bit isBitcast = 0;
  bit isSelect = 0;
  bit isBarrier = 0;
  bit isCall = 0;
  bit canFoldAsLoad = 0;
  bit mayLoad = ?;
  bit mayStore = ?;
  bit isConvertibleToThreeAddress = 0;
  bit isCommutable = 0;
  bit isTerminator = 0;
  bit isReMaterializable = 0;
  bit isPredicable = 0;
  bit hasDelaySlot = 0;
  bit usesCustomInserter = 0;
  bit hasPostISelHook = 0;
  bit hasCtrlDep = 0;
  bit isNotDuplicable = 0;
  bit isConvergent = 0;
  bit isAsCheapAsAMove = 0;
  bit hasExtraSrcRegAllocReq = 0;
  bit hasExtraDefRegAllocReq = 0;
  bit isRegSequence = 0;
  bit isPseudo = 0;
  bit isExtractSubreg = 0;
  bit isInsertSubreg = 0;
  bit hasSideEffects = ?;
  bit isCodeGenOnly = 0;
  bit isAsmParserOnly = 0;
  InstrItinClass Itinerary = NoItinerary;
  list<SchedReadWrite> SchedRW = ?;
  string Constraints = "";
  string DisableEncoding = "";
  string PostEncoderMethod = "";
  string DecoderMethod = "";
  bits<64> TSFlags = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string AsmMatchConverter = "";
  string TwoOperandAliasConstraint = "";
  bit UseNamedOperandTable = 0;
  bits<4> s1 = { ?, ?, ?, ? };
  bits<4> d = { ?, ?, ?, ? };
  bits<9> const9 = { ?, ?, ?, ?, ?, ?, ?, ?, ? };
  bit Logical32_1::isComm = 0;
  string NAME = "NOR";
}
def NORrr {	// Instruction InstTriCore T32 RR rr
  field bits<32> Inst = { d{3}, d{2}, d{1}, d{0}, 0, 0, 0, 0, 1, 0, 1, 1, ?, ?, n{1}, n{0}, s2{3}, s2{2}, s2{1}, s2{0}, s1{3}, s1{2}, s1{1}, s1{0}, 0, 0, 0, 0, 1, 1, 1, 1 };
  string Namespace = "TriCore";
  dag OutOperandList = (outs DataRegs:$d);
  dag InOperandList = (ins DataRegs:$s1, DataRegs:$s2);
  string AsmString = "nor $d, $s1, $s2";
  list<dag> Pattern = [(set i32:$d, (not (or i32:$s1, i32:$s2)))];
  list<Register> Uses = [];
  list<Register> Defs = [];
  list<Predicate> Predicates = [];
  int Size = 4;
  string DecoderNamespace = "";
  int CodeSize = 0;
  int AddedComplexity = 0;
  bit isReturn = 0;
  bit isBranch = 0;
  bit isIndirectBranch = 0;
  bit isCompare = 0;
  bit isMoveImm = 0;
  bit isBitcast = 0;
  bit isSelect = 0;
  bit isBarrier = 0;
  bit isCall = 0;
  bit canFoldAsLoad = 0;
  bit mayLoad = ?;
  bit mayStore = ?;
  bit isConvertibleToThreeAddress = 0;
  bit isCommutable = 0;
  bit isTerminator = 0;
  bit isReMaterializable = 0;
  bit isPredicable = 0;
  bit hasDelaySlot = 0;
  bit usesCustomInserter = 0;
  bit hasPostISelHook = 0;
  bit hasCtrlDep = 0;
  bit isNotDuplicable = 0;
  bit isConvergent = 0;
  bit isAsCheapAsAMove = 0;
  bit hasExtraSrcRegAllocReq = 0;
  bit hasExtraDefRegAllocReq = 0;
  bit isRegSequence = 0;
  bit isPseudo = 0;
  bit isExtractSubreg = 0;
  bit isInsertSubreg = 0;
  bit hasSideEffects = ?;
  bit isCodeGenOnly = 0;
  bit isAsmParserOnly = 0;
  InstrItinClass Itinerary = NoItinerary;
  list<SchedReadWrite> SchedRW = ?;
  string Constraints = "";
  string DisableEncoding = "";
  string PostEncoderMethod = "";
  string DecoderMethod = "";
  bits<64> TSFlags = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string AsmMatchConverter = "";
  string TwoOperandAliasConstraint = "";
  bit UseNamedOperandTable = 0;
  bits<4> s1 = { ?, ?, ?, ? };
  bits<4> s2 = { ?, ?, ?, ? };
  bits<4> d = { ?, ?, ?, ? };
  bits<2> n = { ?, ? };
  bit Logical32_1::isComm = 0;
  string NAME = "NOR";
}
def NOTsr {	// Instruction InstTriCore T16 SR
  field bits<16> Inst = { op2{3}, op2{2}, op2{1}, op2{0}, s1{3}, s1{2}, s1{1}, s1{0}, 0, 1, 0, 0, 0, 1, 1, 0 };
  string Namespace = "TriCore";
  dag OutOperandList = (outs DataRegs:$d);
  dag InOperandList = (ins DataRegs:$s1);
  string AsmString = "not $d";
  list<dag> Pattern = [(set DataRegs:$d, (not DataRegs:$s1))];
  list<Register> Uses = [];
  list<Register> Defs = [];
  list<Predicate> Predicates = [];
  int Size = 2;
  string DecoderNamespace = "";
  int CodeSize = 0;
  int AddedComplexity = 0;
  bit isReturn = 0;
  bit isBranch = 0;
  bit isIndirectBranch = 0;
  bit isCompare = 0;
  bit isMoveImm = 0;
  bit isBitcast = 0;
  bit isSelect = 0;
  bit isBarrier = 0;
  bit isCall = 0;
  bit canFoldAsLoad = 0;
  bit mayLoad = ?;
  bit mayStore = ?;
  bit isConvertibleToThreeAddress = 0;
  bit isCommutable = 0;
  bit isTerminator = 0;
  bit isReMaterializable = 0;
  bit isPredicable = 0;
  bit hasDelaySlot = 0;
  bit usesCustomInserter = 0;
  bit hasPostISelHook = 0;
  bit hasCtrlDep = 0;
  bit isNotDuplicable = 0;
  bit isConvergent = 0;
  bit isAsCheapAsAMove = 0;
  bit hasExtraSrcRegAllocReq = 0;
  bit hasExtraDefRegAllocReq = 0;
  bit isRegSequence = 0;
  bit isPseudo = 0;
  bit isExtractSubreg = 0;
  bit isInsertSubreg = 0;
  bit hasSideEffects = ?;
  bit isCodeGenOnly = 0;
  bit isAsmParserOnly = 0;
  InstrItinClass Itinerary = NoItinerary;
  list<SchedReadWrite> SchedRW = ?;
  string Constraints = "$s1 = $d";
  string DisableEncoding = "";
  string PostEncoderMethod = "";
  string DecoderMethod = "";
  bits<64> TSFlags = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string AsmMatchConverter = "";
  string TwoOperandAliasConstraint = "";
  bit UseNamedOperandTable = 0;
  bits<4> op2 = { ?, ?, ?, ? };
  bits<4> s1 = { ?, ?, ?, ? };
  bits<4> d = { ?, ?, ?, ? };
  string NAME = ?;
}
def NoBypass {	// Bypass
  string NAME = ?;
}
def NoHonorSignDependentRounding {	// Predicate
  string CondString = "!TM.Options.HonorSignDependentRoundingFPMath()";
  bit AssemblerMatcherPredicate = 0;
  string AssemblerCondString = "";
  string PredicateName = "";
  string NAME = ?;
}
def NoItineraries {	// ProcessorItineraries
  list<FuncUnit> FU = [];
  list<Bypass> BP = [];
  list<InstrItinData> IID = [];
  string NAME = ?;
}
def NoItinerary {	// InstrItinClass
  string NAME = ?;
}
def NoReadAdvance {	// SchedReadWrite SchedRead ProcReadAdvance SchedReadAdvance
  list<SchedWrite> SchedReadAdvance:writes = [];
  int Cycles = 0;
  list<SchedWrite> ValidWrites = [];
  bit Unsupported = 0;
  SchedMachineModel SchedModel = ?;
  string NAME = ?;
}
def NoRegAltName {	// RegAltNameIndex
  string Namespace = "";
  string NAME = ?;
}
def NoSchedModel {	// SchedMachineModel
  int IssueWidth = -1;
  int MinLatency = -1;
  int MicroOpBufferSize = -1;
  int LoopMicroOpBufferSize = -1;
  int LoadLatency = -1;
  int HighLatency = -1;
  int MispredictPenalty = -1;
  ProcessorItineraries Itineraries = NoItineraries;
  bit PostRAScheduler = 0;
  bit CompleteModel = 1;
  bit NoModel = 1;
  string NAME = ?;
}
def NoSchedPred {	// SchedPredicate
  SchedMachineModel SchedModel = ?;
  string Predicate = "true";
  string NAME = ?;
}
def NoWrite {	// SchedReadWrite SchedWrite
  string NAME = ?;
}
def ORrc {	// Instruction InstTriCore T32 RC rc
  field bits<32> Inst = { d{3}, d{2}, d{1}, d{0}, 0, 0, 0, 1, 0, 1, 0, const9{8}, const9{7}, const9{6}, const9{5}, const9{4}, const9{3}, const9{2}, const9{1}, const9{0}, s1{3}, s1{2}, s1{1}, s1{0}, 1, 0, 0, 0, 1, 1, 1, 1 };
  string Namespace = "TriCore";
  dag OutOperandList = (outs DataRegs:$d);
  dag InOperandList = (ins DataRegs:$s1, u9imm:$const9);
  string AsmString = "or $d, $s1, $const9";
  list<dag> Pattern = [(set DataRegs:$d, (or DataRegs:$s1, immZExt9:$const9))];
  list<Register> Uses = [];
  list<Register> Defs = [];
  list<Predicate> Predicates = [];
  int Size = 4;
  string DecoderNamespace = "";
  int CodeSize = 0;
  int AddedComplexity = 0;
  bit isReturn = 0;
  bit isBranch = 0;
  bit isIndirectBranch = 0;
  bit isCompare = 0;
  bit isMoveImm = 0;
  bit isBitcast = 0;
  bit isSelect = 0;
  bit isBarrier = 0;
  bit isCall = 0;
  bit canFoldAsLoad = 0;
  bit mayLoad = ?;
  bit mayStore = ?;
  bit isConvertibleToThreeAddress = 0;
  bit isCommutable = 0;
  bit isTerminator = 0;
  bit isReMaterializable = 0;
  bit isPredicable = 0;
  bit hasDelaySlot = 0;
  bit usesCustomInserter = 0;
  bit hasPostISelHook = 0;
  bit hasCtrlDep = 0;
  bit isNotDuplicable = 0;
  bit isConvergent = 0;
  bit isAsCheapAsAMove = 0;
  bit hasExtraSrcRegAllocReq = 0;
  bit hasExtraDefRegAllocReq = 0;
  bit isRegSequence = 0;
  bit isPseudo = 0;
  bit isExtractSubreg = 0;
  bit isInsertSubreg = 0;
  bit hasSideEffects = ?;
  bit isCodeGenOnly = 0;
  bit isAsmParserOnly = 0;
  InstrItinClass Itinerary = NoItinerary;
  list<SchedReadWrite> SchedRW = ?;
  string Constraints = "";
  string DisableEncoding = "";
  string PostEncoderMethod = "";
  string DecoderMethod = "";
  bits<64> TSFlags = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string AsmMatchConverter = "";
  string TwoOperandAliasConstraint = "";
  bit UseNamedOperandTable = 0;
  bits<4> s1 = { ?, ?, ?, ? };
  bits<4> d = { ?, ?, ?, ? };
  bits<9> const9 = { ?, ?, ?, ?, ?, ?, ?, ?, ? };
  bit Logical32_0::isComm = 0;
  string NAME = "OR";
}
def ORrr {	// Instruction InstTriCore T32 RR rr
  field bits<32> Inst = { d{3}, d{2}, d{1}, d{0}, 0, 0, 0, 0, 1, 0, 1, 0, ?, ?, n{1}, n{0}, s2{3}, s2{2}, s2{1}, s2{0}, s1{3}, s1{2}, s1{1}, s1{0}, 0, 0, 0, 0, 1, 1, 1, 1 };
  string Namespace = "TriCore";
  dag OutOperandList = (outs DataRegs:$d);
  dag InOperandList = (ins DataRegs:$s1, DataRegs:$s2);
  string AsmString = "or $d, $s1, $s2";
  list<dag> Pattern = [(set DataRegs:$d, (or DataRegs:$s1, DataRegs:$s2))];
  list<Register> Uses = [];
  list<Register> Defs = [];
  list<Predicate> Predicates = [];
  int Size = 4;
  string DecoderNamespace = "";
  int CodeSize = 0;
  int AddedComplexity = 0;
  bit isReturn = 0;
  bit isBranch = 0;
  bit isIndirectBranch = 0;
  bit isCompare = 0;
  bit isMoveImm = 0;
  bit isBitcast = 0;
  bit isSelect = 0;
  bit isBarrier = 0;
  bit isCall = 0;
  bit canFoldAsLoad = 0;
  bit mayLoad = ?;
  bit mayStore = ?;
  bit isConvertibleToThreeAddress = 0;
  bit isCommutable = 0;
  bit isTerminator = 0;
  bit isReMaterializable = 0;
  bit isPredicable = 0;
  bit hasDelaySlot = 0;
  bit usesCustomInserter = 0;
  bit hasPostISelHook = 0;
  bit hasCtrlDep = 0;
  bit isNotDuplicable = 0;
  bit isConvergent = 0;
  bit isAsCheapAsAMove = 0;
  bit hasExtraSrcRegAllocReq = 0;
  bit hasExtraDefRegAllocReq = 0;
  bit isRegSequence = 0;
  bit isPseudo = 0;
  bit isExtractSubreg = 0;
  bit isInsertSubreg = 0;
  bit hasSideEffects = ?;
  bit isCodeGenOnly = 0;
  bit isAsmParserOnly = 0;
  InstrItinClass Itinerary = NoItinerary;
  list<SchedReadWrite> SchedRW = ?;
  string Constraints = "";
  string DisableEncoding = "";
  string PostEncoderMethod = "";
  string DecoderMethod = "";
  bits<64> TSFlags = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string AsmMatchConverter = "";
  string TwoOperandAliasConstraint = "";
  bit UseNamedOperandTable = 0;
  bits<4> s1 = { ?, ?, ?, ? };
  bits<4> s2 = { ?, ?, ?, ? };
  bits<4> d = { ?, ?, ?, ? };
  bits<2> n = { ?, ? };
  bit Logical32_0::isComm = 0;
  string NAME = "OR";
}
def ORsc {	// Instruction InstTriCore T16 SC sc
  field bits<16> Inst = { const8{7}, const8{6}, const8{5}, const8{4}, const8{3}, const8{2}, const8{1}, const8{0}, 1, 0, 0, 1, 0, 1, 1, 0 };
  string Namespace = "TriCore";
  dag OutOperandList = (outs DataRegs:$d);
  dag InOperandList = (ins DataRegs:$s1, u8imm:$const8);
  string AsmString = "or $d, $s1, $const8";
  list<dag> Pattern = [(set DataRegs:$d, (or DataRegs:$s1, immZExt8:$const8))];
  list<Register> Uses = [];
  list<Register> Defs = [];
  list<Predicate> Predicates = [];
  int Size = 2;
  string DecoderNamespace = "";
  int CodeSize = 0;
  int AddedComplexity = 0;
  bit isReturn = 0;
  bit isBranch = 0;
  bit isIndirectBranch = 0;
  bit isCompare = 0;
  bit isMoveImm = 0;
  bit isBitcast = 0;
  bit isSelect = 0;
  bit isBarrier = 0;
  bit isCall = 0;
  bit canFoldAsLoad = 0;
  bit mayLoad = ?;
  bit mayStore = ?;
  bit isConvertibleToThreeAddress = 0;
  bit isCommutable = 0;
  bit isTerminator = 0;
  bit isReMaterializable = 0;
  bit isPredicable = 0;
  bit hasDelaySlot = 0;
  bit usesCustomInserter = 0;
  bit hasPostISelHook = 0;
  bit hasCtrlDep = 0;
  bit isNotDuplicable = 0;
  bit isConvergent = 0;
  bit isAsCheapAsAMove = 0;
  bit hasExtraSrcRegAllocReq = 0;
  bit hasExtraDefRegAllocReq = 0;
  bit isRegSequence = 0;
  bit isPseudo = 0;
  bit isExtractSubreg = 0;
  bit isInsertSubreg = 0;
  bit hasSideEffects = ?;
  bit isCodeGenOnly = 0;
  bit isAsmParserOnly = 0;
  InstrItinClass Itinerary = NoItinerary;
  list<SchedReadWrite> SchedRW = ?;
  string Constraints = "";
  string DisableEncoding = "";
  string PostEncoderMethod = "";
  string DecoderMethod = "";
  bits<64> TSFlags = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string AsmMatchConverter = "";
  string TwoOperandAliasConstraint = "";
  bit UseNamedOperandTable = 0;
  bits<8> const8 = { ?, ?, ?, ?, ?, ?, ?, ? };
  bit Logical16::isComm = 0;
  string NAME = "OR";
}
def ORsrr {	// Instruction InstTriCore T16 SRR srr
  field bits<16> Inst = { s2{3}, s2{2}, s2{1}, s2{0}, s1{3}, s1{2}, s1{1}, s1{0}, 1, 0, 1, 0, 0, 1, 1, 0 };
  string Namespace = "TriCore";
  dag OutOperandList = (outs DataRegs:$d);
  dag InOperandList = (ins DataRegs:$s1, DataRegs:$s2);
  string AsmString = "or $d, $s1, $s2";
  list<dag> Pattern = [(set DataRegs:$d, (or DataRegs:$s1, DataRegs:$s2))];
  list<Register> Uses = [];
  list<Register> Defs = [];
  list<Predicate> Predicates = [];
  int Size = 2;
  string DecoderNamespace = "";
  int CodeSize = 0;
  int AddedComplexity = 0;
  bit isReturn = 0;
  bit isBranch = 0;
  bit isIndirectBranch = 0;
  bit isCompare = 0;
  bit isMoveImm = 0;
  bit isBitcast = 0;
  bit isSelect = 0;
  bit isBarrier = 0;
  bit isCall = 0;
  bit canFoldAsLoad = 0;
  bit mayLoad = ?;
  bit mayStore = ?;
  bit isConvertibleToThreeAddress = 0;
  bit isCommutable = 0;
  bit isTerminator = 0;
  bit isReMaterializable = 0;
  bit isPredicable = 0;
  bit hasDelaySlot = 0;
  bit usesCustomInserter = 0;
  bit hasPostISelHook = 0;
  bit hasCtrlDep = 0;
  bit isNotDuplicable = 0;
  bit isConvergent = 0;
  bit isAsCheapAsAMove = 0;
  bit hasExtraSrcRegAllocReq = 0;
  bit hasExtraDefRegAllocReq = 0;
  bit isRegSequence = 0;
  bit isPseudo = 0;
  bit isExtractSubreg = 0;
  bit isInsertSubreg = 0;
  bit hasSideEffects = ?;
  bit isCodeGenOnly = 0;
  bit isAsmParserOnly = 0;
  InstrItinClass Itinerary = NoItinerary;
  list<SchedReadWrite> SchedRW = ?;
  string Constraints = "$s1 = $d";
  string DisableEncoding = "";
  string PostEncoderMethod = "";
  string DecoderMethod = "";
  bits<64> TSFlags = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string AsmMatchConverter = "";
  string TwoOperandAliasConstraint = "";
  bit UseNamedOperandTable = 0;
  bits<4> s1 = { ?, ?, ?, ? };
  bits<4> s2 = { ?, ?, ?, ? };
  bit Logical16::isComm = 0;
  string NAME = "OR";
}
def OtherVT {	// ValueType
  string Namespace = "MVT";
  int Size = 0;
  int Value = 0;
  string NAME = ?;
}
def PATCHPOINT {	// Instruction
  string Namespace = "TargetOpcode";
  dag OutOperandList = (outs unknown:$dst);
  dag InOperandList = (ins i64imm:$id, i32imm:$nbytes, unknown:$callee, i32imm:$nargs, i32imm:$cc, variable_ops);
  string AsmString = "";
  list<dag> Pattern = ?;
  list<Register> Uses = [];
  list<Register> Defs = [];
  list<Predicate> Predicates = [];
  int Size = 0;
  string DecoderNamespace = "";
  int CodeSize = 0;
  int AddedComplexity = 0;
  bit isReturn = 0;
  bit isBranch = 0;
  bit isIndirectBranch = 0;
  bit isCompare = 0;
  bit isMoveImm = 0;
  bit isBitcast = 0;
  bit isSelect = 0;
  bit isBarrier = 0;
  bit isCall = 1;
  bit canFoldAsLoad = 0;
  bit mayLoad = 1;
  bit mayStore = ?;
  bit isConvertibleToThreeAddress = 0;
  bit isCommutable = 0;
  bit isTerminator = 0;
  bit isReMaterializable = 0;
  bit isPredicable = 0;
  bit hasDelaySlot = 0;
  bit usesCustomInserter = 1;
  bit hasPostISelHook = 0;
  bit hasCtrlDep = 0;
  bit isNotDuplicable = 0;
  bit isConvergent = 0;
  bit isAsCheapAsAMove = 0;
  bit hasExtraSrcRegAllocReq = 0;
  bit hasExtraDefRegAllocReq = 0;
  bit isRegSequence = 0;
  bit isPseudo = 1;
  bit isExtractSubreg = 0;
  bit isInsertSubreg = 0;
  bit hasSideEffects = ?;
  bit isCodeGenOnly = 1;
  bit isAsmParserOnly = 0;
  InstrItinClass Itinerary = NoItinerary;
  list<SchedReadWrite> SchedRW = ?;
  string Constraints = "";
  string DisableEncoding = "";
  string PostEncoderMethod = "";
  string DecoderMethod = "";
  bits<64> TSFlags = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string AsmMatchConverter = "";
  string TwoOperandAliasConstraint = "";
  bit UseNamedOperandTable = 0;
  string NAME = ?;
}
def PC {	// Register TriCoreReg TriCorePSReg DwarfRegNum
  field bits<4> Num = { 0, 0, 1, 0 };
  list<string> Register:altNames = [];
  string Namespace = "TriCore";
  string AsmName = "PC";
  list<string> AltNames = [];
  list<Register> Aliases = [];
  list<Register> SubRegs = [];
  list<SubRegIndex> SubRegIndices = [];
  list<RegAltNameIndex> RegAltNameIndices = [];
  list<int> DwarfNumbers = [42];
  int CostPerUse = 0;
  bit CoveredBySubRegs = 0;
  bits<16> HWEncoding = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string NAME = ?;
}
def PCXI {	// Register TriCoreReg TriCorePSReg DwarfRegNum
  field bits<4> Num = { 0, 0, 0, 1 };
  list<string> Register:altNames = [];
  string Namespace = "TriCore";
  string AsmName = "PCXI";
  list<string> AltNames = [];
  list<Register> Aliases = [];
  list<Register> SubRegs = [];
  list<SubRegIndex> SubRegIndices = [];
  list<RegAltNameIndex> RegAltNameIndices = [];
  list<int> DwarfNumbers = [41];
  int CostPerUse = 0;
  bit CoveredBySubRegs = 0;
  bits<16> HWEncoding = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string NAME = ?;
}
def PHI {	// Instruction
  string Namespace = "TargetOpcode";
  dag OutOperandList = (outs);
  dag InOperandList = (ins variable_ops);
  string AsmString = "PHINODE";
  list<dag> Pattern = ?;
  list<Register> Uses = [];
  list<Register> Defs = [];
  list<Predicate> Predicates = [];
  int Size = 0;
  string DecoderNamespace = "";
  int CodeSize = 0;
  int AddedComplexity = 0;
  bit isReturn = 0;
  bit isBranch = 0;
  bit isIndirectBranch = 0;
  bit isCompare = 0;
  bit isMoveImm = 0;
  bit isBitcast = 0;
  bit isSelect = 0;
  bit isBarrier = 0;
  bit isCall = 0;
  bit canFoldAsLoad = 0;
  bit mayLoad = ?;
  bit mayStore = ?;
  bit isConvertibleToThreeAddress = 0;
  bit isCommutable = 0;
  bit isTerminator = 0;
  bit isReMaterializable = 0;
  bit isPredicable = 0;
  bit hasDelaySlot = 0;
  bit usesCustomInserter = 0;
  bit hasPostISelHook = 0;
  bit hasCtrlDep = 0;
  bit isNotDuplicable = 0;
  bit isConvergent = 0;
  bit isAsCheapAsAMove = 0;
  bit hasExtraSrcRegAllocReq = 0;
  bit hasExtraDefRegAllocReq = 0;
  bit isRegSequence = 0;
  bit isPseudo = 1;
  bit isExtractSubreg = 0;
  bit isInsertSubreg = 0;
  bit hasSideEffects = ?;
  bit isCodeGenOnly = 1;
  bit isAsmParserOnly = 0;
  InstrItinClass Itinerary = NoItinerary;
  list<SchedReadWrite> SchedRW = ?;
  string Constraints = "";
  string DisableEncoding = "";
  string PostEncoderMethod = "";
  string DecoderMethod = "";
  bits<64> TSFlags = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string AsmMatchConverter = "";
  string TwoOperandAliasConstraint = "";
  bit UseNamedOperandTable = 0;
  string NAME = ?;
}
def PSRegs {	// DAGOperand RegisterClass
  RegAltNameIndex RegisterClass:idx = NoRegAltName;
  string Namespace = "TriCore";
  list<ValueType> RegTypes = [i32];
  int Size = 0;
  int Alignment = 32;
  int CopyCost = 1;
  dag MemberList = (add PSW, PCXI, PC);
  RegAltNameIndex altNameIndex = NoRegAltName;
  bit isAllocatable = 1;
  list<dag> AltOrders = [];
  string AltOrderSelect = "";
  int AllocationPriority = 0;
  string NAME = ?;
}
def PSW {	// Register TriCoreReg TriCorePSReg DwarfRegNum
  field bits<4> Num = { 0, 0, 0, 0 };
  list<string> Register:altNames = [];
  string Namespace = "TriCore";
  string AsmName = "PSW";
  list<string> AltNames = [];
  list<Register> Aliases = [];
  list<Register> SubRegs = [];
  list<SubRegIndex> SubRegIndices = [];
  list<RegAltNameIndex> RegAltNameIndices = [];
  list<int> DwarfNumbers = [40];
  int CostPerUse = 0;
  bit CoveredBySubRegs = 0;
  bits<16> HWEncoding = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string NAME = ?;
}
def REG_SEQUENCE {	// Instruction
  string Namespace = "TargetOpcode";
  dag OutOperandList = (outs unknown:$dst);
  dag InOperandList = (ins unknown:$supersrc, variable_ops);
  string AsmString = "";
  list<dag> Pattern = ?;
  list<Register> Uses = [];
  list<Register> Defs = [];
  list<Predicate> Predicates = [];
  int Size = 0;
  string DecoderNamespace = "";
  int CodeSize = 0;
  int AddedComplexity = 0;
  bit isReturn = 0;
  bit isBranch = 0;
  bit isIndirectBranch = 0;
  bit isCompare = 0;
  bit isMoveImm = 0;
  bit isBitcast = 0;
  bit isSelect = 0;
  bit isBarrier = 0;
  bit isCall = 0;
  bit canFoldAsLoad = 0;
  bit mayLoad = ?;
  bit mayStore = ?;
  bit isConvertibleToThreeAddress = 0;
  bit isCommutable = 0;
  bit isTerminator = 0;
  bit isReMaterializable = 0;
  bit isPredicable = 0;
  bit hasDelaySlot = 0;
  bit usesCustomInserter = 0;
  bit hasPostISelHook = 0;
  bit hasCtrlDep = 0;
  bit isNotDuplicable = 0;
  bit isConvergent = 0;
  bit isAsCheapAsAMove = 1;
  bit hasExtraSrcRegAllocReq = 0;
  bit hasExtraDefRegAllocReq = 0;
  bit isRegSequence = 0;
  bit isPseudo = 1;
  bit isExtractSubreg = 0;
  bit isInsertSubreg = 0;
  bit hasSideEffects = 0;
  bit isCodeGenOnly = 1;
  bit isAsmParserOnly = 0;
  InstrItinClass Itinerary = NoItinerary;
  list<SchedReadWrite> SchedRW = ?;
  string Constraints = "";
  string DisableEncoding = "";
  string PostEncoderMethod = "";
  string DecoderMethod = "";
  bits<64> TSFlags = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string AsmMatchConverter = "";
  string TwoOperandAliasConstraint = "";
  bit UseNamedOperandTable = 0;
  string NAME = ?;
}
def RET {	// Instruction InstTriCore T32
  field bits<32> Inst = { ?, ?, ?, ?, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0 };
  string Namespace = "TriCore";
  dag OutOperandList = (outs);
  dag InOperandList = (ins variable_ops);
  string AsmString = "ret";
  list<dag> Pattern = [(TriCoreRetFlag)];
  list<Register> Uses = [A11];
  list<Register> Defs = [];
  list<Predicate> Predicates = [];
  int Size = 4;
  string DecoderNamespace = "";
  int CodeSize = 0;
  int AddedComplexity = 0;
  bit isReturn = 1;
  bit isBranch = 0;
  bit isIndirectBranch = 0;
  bit isCompare = 0;
  bit isMoveImm = 0;
  bit isBitcast = 0;
  bit isSelect = 0;
  bit isBarrier = 1;
  bit isCall = 0;
  bit canFoldAsLoad = 0;
  bit mayLoad = ?;
  bit mayStore = ?;
  bit isConvertibleToThreeAddress = 0;
  bit isCommutable = 0;
  bit isTerminator = 1;
  bit isReMaterializable = 0;
  bit isPredicable = 0;
  bit hasDelaySlot = 0;
  bit usesCustomInserter = 0;
  bit hasPostISelHook = 0;
  bit hasCtrlDep = 0;
  bit isNotDuplicable = 0;
  bit isConvergent = 0;
  bit isAsCheapAsAMove = 0;
  bit hasExtraSrcRegAllocReq = 0;
  bit hasExtraDefRegAllocReq = 0;
  bit isRegSequence = 0;
  bit isPseudo = 0;
  bit isExtractSubreg = 0;
  bit isInsertSubreg = 0;
  bit hasSideEffects = ?;
  bit isCodeGenOnly = 0;
  bit isAsmParserOnly = 0;
  InstrItinClass Itinerary = NoItinerary;
  list<SchedReadWrite> SchedRW = ?;
  string Constraints = "";
  string DisableEncoding = "";
  string PostEncoderMethod = "";
  string DecoderMethod = "";
  bits<64> TSFlags = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string AsmMatchConverter = "";
  string TwoOperandAliasConstraint = "";
  bit UseNamedOperandTable = 0;
  string NAME = ?;
}
def ReadDefault {	// SchedReadWrite SchedRead
  string NAME = ?;
}
def Required {	// ReservationKind
  int Value = 0;
  string NAME = ?;
}
def Reserved {	// ReservationKind
  int Value = 1;
  string NAME = ?;
}
def RetCC_TriCore {	// CallingConv
  list<CCAction> Actions = [anonymous_489, anonymous_491, anonymous_493];
  bit Custom = 0;
  string NAME = ?;
}
def SDNPAssociative {	// SDNodeProperty
  string NAME = ?;
}
def SDNPCommutative {	// SDNodeProperty
  string NAME = ?;
}
def SDNPHasChain {	// SDNodeProperty
  string NAME = ?;
}
def SDNPInGlue {	// SDNodeProperty
  string NAME = ?;
}
def SDNPMayLoad {	// SDNodeProperty
  string NAME = ?;
}
def SDNPMayStore {	// SDNodeProperty
  string NAME = ?;
}
def SDNPMemOperand {	// SDNodeProperty
  string NAME = ?;
}
def SDNPOptInGlue {	// SDNodeProperty
  string NAME = ?;
}
def SDNPOutGlue {	// SDNodeProperty
  string NAME = ?;
}
def SDNPSideEffect {	// SDNodeProperty
  string NAME = ?;
}
def SDNPVariadic {	// SDNodeProperty
  string NAME = ?;
}
def SDNPWantParent {	// SDNodeProperty
  string NAME = ?;
}
def SDNPWantRoot {	// SDNodeProperty
  string NAME = ?;
}
def SDTAtomic2 {	// SDTypeProfile
  int NumResults = 1;
  int NumOperands = 2;
  list<SDTypeConstraint> Constraints = [anonymous_439, anonymous_440, anonymous_441];
  string NAME = ?;
}
def SDTAtomic3 {	// SDTypeProfile
  int NumResults = 1;
  int NumOperands = 3;
  list<SDTypeConstraint> Constraints = [anonymous_435, anonymous_436, anonymous_437, anonymous_438];
  string NAME = ?;
}
def SDTAtomicFence {	// SDTypeProfile
  int NumResults = 0;
  int NumOperands = 2;
  list<SDTypeConstraint> Constraints = [anonymous_433, anonymous_434];
  string NAME = ?;
}
def SDTAtomicLoad {	// SDTypeProfile
  int NumResults = 1;
  int NumOperands = 1;
  list<SDTypeConstraint> Constraints = [anonymous_444, anonymous_445];
  string NAME = ?;
}
def SDTAtomicStore {	// SDTypeProfile
  int NumResults = 0;
  int NumOperands = 2;
  list<SDTypeConstraint> Constraints = [anonymous_442, anonymous_443];
  string NAME = ?;
}
def SDTBr {	// SDTypeProfile
  int NumResults = 0;
  int NumOperands = 1;
  list<SDTypeConstraint> Constraints = [anonymous_380];
  string NAME = ?;
}
def SDTBrCC {	// SDTypeProfile
  int NumResults = 0;
  int NumOperands = 4;
  list<SDTypeConstraint> Constraints = [anonymous_381, anonymous_382, anonymous_383];
  string NAME = ?;
}
def SDTBrcond {	// SDTypeProfile
  int NumResults = 0;
  int NumOperands = 2;
  list<SDTypeConstraint> Constraints = [anonymous_384, anonymous_385];
  string NAME = ?;
}
def SDTBrind {	// SDTypeProfile
  int NumResults = 0;
  int NumOperands = 1;
  list<SDTypeConstraint> Constraints = [anonymous_386];
  string NAME = ?;
}
def SDTConvertOp {	// SDTypeProfile
  int NumResults = 1;
  int NumOperands = 5;
  list<SDTypeConstraint> Constraints = [anonymous_446, anonymous_447, anonymous_448, anonymous_449];
  string NAME = ?;
}
def SDTExtInreg {	// SDTypeProfile
  int NumResults = 1;
  int NumOperands = 2;
  list<SDTypeConstraint> Constraints = [anonymous_363, anonymous_364, anonymous_365, anonymous_366];
  string NAME = ?;
}
def SDTFPBinOp {	// SDTypeProfile
  int NumResults = 1;
  int NumOperands = 2;
  list<SDTypeConstraint> Constraints = [anonymous_333, anonymous_334, anonymous_335];
  string NAME = ?;
}
def SDTFPExtendOp {	// SDTypeProfile
  int NumResults = 1;
  int NumOperands = 1;
  list<SDTypeConstraint> Constraints = [anonymous_356, anonymous_357, anonymous_358];
  string NAME = ?;
}
def SDTFPLeaf {	// SDTypeProfile
  int NumResults = 1;
  int NumOperands = 0;
  list<SDTypeConstraint> Constraints = [anonymous_320];
  string NAME = ?;
}
def SDTFPRoundOp {	// SDTypeProfile
  int NumResults = 1;
  int NumOperands = 1;
  list<SDTypeConstraint> Constraints = [anonymous_353, anonymous_354, anonymous_355];
  string NAME = ?;
}
def SDTFPSignOp {	// SDTypeProfile
  int NumResults = 1;
  int NumOperands = 2;
  list<SDTypeConstraint> Constraints = [anonymous_336, anonymous_337, anonymous_338];
  string NAME = ?;
}
def SDTFPTernaryOp {	// SDTypeProfile
  int NumResults = 1;
  int NumOperands = 3;
  list<SDTypeConstraint> Constraints = [anonymous_339, anonymous_340, anonymous_341, anonymous_342];
  string NAME = ?;
}
def SDTFPToIntOp {	// SDTypeProfile
  int NumResults = 1;
  int NumOperands = 1;
  list<SDTypeConstraint> Constraints = [anonymous_361, anonymous_362];
  string NAME = ?;
}
def SDTFPUnaryOp {	// SDTypeProfile
  int NumResults = 1;
  int NumOperands = 1;
  list<SDTypeConstraint> Constraints = [anonymous_351, anonymous_352];
  string NAME = ?;
}
def SDTIStore {	// SDTypeProfile
  int NumResults = 1;
  int NumOperands = 3;
  list<SDTypeConstraint> Constraints = [anonymous_389, anonymous_390, anonymous_391];
  string NAME = ?;
}
def SDTIntBinHiLoOp {	// SDTypeProfile
  int NumResults = 2;
  int NumOperands = 2;
  list<SDTypeConstraint> Constraints = [anonymous_329, anonymous_330, anonymous_331, anonymous_332];
  string NAME = ?;
}
def SDTIntBinOp {	// SDTypeProfile
  int NumResults = 1;
  int NumOperands = 2;
  list<SDTypeConstraint> Constraints = [anonymous_323, anonymous_324, anonymous_325];
  string NAME = ?;
}
def SDTIntExtendOp {	// SDTypeProfile
  int NumResults = 1;
  int NumOperands = 1;
  list<SDTypeConstraint> Constraints = [anonymous_345, anonymous_346, anonymous_347];
  string NAME = ?;
}
def SDTIntLeaf {	// SDTypeProfile
  int NumResults = 1;
  int NumOperands = 0;
  list<SDTypeConstraint> Constraints = [anonymous_319];
  string NAME = ?;
}
def SDTIntShiftOp {	// SDTypeProfile
  int NumResults = 1;
  int NumOperands = 2;
  list<SDTypeConstraint> Constraints = [anonymous_326, anonymous_327, anonymous_328];
  string NAME = ?;
}
def SDTIntToFPOp {	// SDTypeProfile
  int NumResults = 1;
  int NumOperands = 1;
  list<SDTypeConstraint> Constraints = [anonymous_359, anonymous_360];
  string NAME = ?;
}
def SDTIntTruncOp {	// SDTypeProfile
  int NumResults = 1;
  int NumOperands = 1;
  list<SDTypeConstraint> Constraints = [anonymous_348, anonymous_349, anonymous_350];
  string NAME = ?;
}
def SDTIntUnaryOp {	// SDTypeProfile
  int NumResults = 1;
  int NumOperands = 1;
  list<SDTypeConstraint> Constraints = [anonymous_343, anonymous_344];
  string NAME = ?;
}
def SDTLoad {	// SDTypeProfile
  int NumResults = 1;
  int NumOperands = 1;
  list<SDTypeConstraint> Constraints = [anonymous_387];
  string NAME = ?;
}
def SDTMaskedGather {	// SDTypeProfile
  int NumResults = 2;
  int NumOperands = 3;
  list<SDTypeConstraint> Constraints = [anonymous_399, anonymous_400, anonymous_401, anonymous_402, anonymous_403, anonymous_404, anonymous_405];
  string NAME = ?;
}
def SDTMaskedLoad {	// SDTypeProfile
  int NumResults = 1;
  int NumOperands = 3;
  list<SDTypeConstraint> Constraints = [anonymous_395, anonymous_396, anonymous_397, anonymous_398];
  string NAME = ?;
}
def SDTMaskedScatter {	// SDTypeProfile
  int NumResults = 1;
  int NumOperands = 3;
  list<SDTypeConstraint> Constraints = [anonymous_406, anonymous_407, anonymous_408, anonymous_409, anonymous_410, anonymous_411];
  string NAME = ?;
}
def SDTMaskedStore {	// SDTypeProfile
  int NumResults = 0;
  int NumOperands = 3;
  list<SDTypeConstraint> Constraints = [anonymous_392, anonymous_393, anonymous_394];
  string NAME = ?;
}
def SDTMemBarrier {	// SDTypeProfile
  int NumResults = 0;
  int NumOperands = 5;
  list<SDTypeConstraint> Constraints = [anonymous_428, anonymous_429, anonymous_430, anonymous_431, anonymous_432];
  string NAME = ?;
}
def SDTNone {	// SDTypeProfile
  int NumResults = 0;
  int NumOperands = 0;
  list<SDTypeConstraint> Constraints = [];
  string NAME = ?;
}
def SDTOther {	// SDTypeProfile
  int NumResults = 1;
  int NumOperands = 0;
  list<SDTypeConstraint> Constraints = [anonymous_322];
  string NAME = ?;
}
def SDTPrefetch {	// SDTypeProfile
  int NumResults = 0;
  int NumOperands = 4;
  list<SDTypeConstraint> Constraints = [anonymous_424, anonymous_425, anonymous_426, anonymous_427];
  string NAME = ?;
}
def SDTPtrLeaf {	// SDTypeProfile
  int NumResults = 1;
  int NumOperands = 0;
  list<SDTypeConstraint> Constraints = [anonymous_321];
  string NAME = ?;
}
def SDTSelect {	// SDTypeProfile
  int NumResults = 1;
  int NumOperands = 3;
  list<SDTypeConstraint> Constraints = [anonymous_370, anonymous_371, anonymous_372];
  string NAME = ?;
}
def SDTSelectCC {	// SDTypeProfile
  int NumResults = 1;
  int NumOperands = 5;
  list<SDTypeConstraint> Constraints = [anonymous_376, anonymous_377, anonymous_378, anonymous_379];
  string NAME = ?;
}
def SDTSetCC {	// SDTypeProfile
  int NumResults = 1;
  int NumOperands = 3;
  list<SDTypeConstraint> Constraints = [anonymous_367, anonymous_368, anonymous_369];
  string NAME = ?;
}
def SDTStore {	// SDTypeProfile
  int NumResults = 0;
  int NumOperands = 2;
  list<SDTypeConstraint> Constraints = [anonymous_388];
  string NAME = ?;
}
def SDTSubVecExtract {	// SDTypeProfile
  int NumResults = 1;
  int NumOperands = 2;
  list<SDTypeConstraint> Constraints = [anonymous_419, anonymous_420];
  string NAME = ?;
}
def SDTSubVecInsert {	// SDTypeProfile
  int NumResults = 1;
  int NumOperands = 3;
  list<SDTypeConstraint> Constraints = [anonymous_421, anonymous_422, anonymous_423];
  string NAME = ?;
}
def SDTUNDEF {	// SDTypeProfile
  int NumResults = 1;
  int NumOperands = 0;
  list<SDTypeConstraint> Constraints = [];
  string NAME = ?;
}
def SDTUnaryOp {	// SDTypeProfile
  int NumResults = 1;
  int NumOperands = 1;
  list<SDTypeConstraint> Constraints = [];
  string NAME = ?;
}
def SDTVSelect {	// SDTypeProfile
  int NumResults = 1;
  int NumOperands = 3;
  list<SDTypeConstraint> Constraints = [anonymous_373, anonymous_374, anonymous_375];
  string NAME = ?;
}
def SDTVecExtract {	// SDTypeProfile
  int NumResults = 1;
  int NumOperands = 2;
  list<SDTypeConstraint> Constraints = [anonymous_414, anonymous_415];
  string NAME = ?;
}
def SDTVecInsert {	// SDTypeProfile
  int NumResults = 1;
  int NumOperands = 3;
  list<SDTypeConstraint> Constraints = [anonymous_416, anonymous_417, anonymous_418];
  string NAME = ?;
}
def SDTVecShuffle {	// SDTypeProfile
  int NumResults = 1;
  int NumOperands = 2;
  list<SDTypeConstraint> Constraints = [anonymous_412, anonymous_413];
  string NAME = ?;
}
def SDT_TriCoreBrCC {	// SDTypeProfile
  int NumResults = 0;
  int NumOperands = 3;
  list<SDTypeConstraint> Constraints = [anonymous_480, anonymous_481, anonymous_482];
  string NAME = ?;
}
def SDT_TriCoreBrCC_new {	// SDTypeProfile
  int NumResults = 0;
  int NumOperands = 4;
  list<SDTypeConstraint> Constraints = [anonymous_483, anonymous_484, anonymous_485, anonymous_486];
  string NAME = ?;
}
def SDT_TriCoreCall {	// SDTypeProfile
  int NumResults = 0;
  int NumOperands = -1;
  list<SDTypeConstraint> Constraints = [anonymous_478];
  string NAME = ?;
}
def SDT_TriCoreCallSeqEnd {	// SDTypeProfile SDCallSeqEnd
  int NumResults = 0;
  int NumOperands = 2;
  list<SDTypeConstraint> Constraints = [anonymous_476, anonymous_477];
  string NAME = ?;
}
def SDT_TriCoreCallSeqStart {	// SDTypeProfile SDCallSeqStart
  int NumResults = 0;
  int NumOperands = 1;
  list<SDTypeConstraint> Constraints = [anonymous_475];
  string NAME = ?;
}
def SDT_TriCoreCmp {	// SDTypeProfile
  int NumResults = 0;
  int NumOperands = 2;
  list<SDTypeConstraint> Constraints = [anonymous_479];
  string NAME = ?;
}
def SDT_assertext {	// SDTypeProfile
  int NumResults = 1;
  int NumOperands = 1;
  list<SDTypeConstraint> Constraints = [anonymous_470, anonymous_471, anonymous_472];
  string NAME = ?;
}
def SETEQ {	// CondCode
  string NAME = ?;
}
def SETGE {	// CondCode
  string NAME = ?;
}
def SETGT {	// CondCode
  string NAME = ?;
}
def SETLE {	// CondCode
  string NAME = ?;
}
def SETLT {	// CondCode
  string NAME = ?;
}
def SETNE {	// CondCode
  string NAME = ?;
}
def SETO {	// CondCode
  string NAME = ?;
}
def SETOEQ {	// CondCode
  string NAME = ?;
}
def SETOGE {	// CondCode
  string NAME = ?;
}
def SETOGT {	// CondCode
  string NAME = ?;
}
def SETOLE {	// CondCode
  string NAME = ?;
}
def SETOLT {	// CondCode
  string NAME = ?;
}
def SETONE {	// CondCode
  string NAME = ?;
}
def SETUEQ {	// CondCode
  string NAME = ?;
}
def SETUGE {	// CondCode
  string NAME = ?;
}
def SETUGT {	// CondCode
  string NAME = ?;
}
def SETULE {	// CondCode
  string NAME = ?;
}
def SETULT {	// CondCode
  string NAME = ?;
}
def SETUNE {	// CondCode
  string NAME = ?;
}
def SETUO {	// CondCode
  string NAME = ?;
}
def STACKMAP {	// Instruction
  string Namespace = "TargetOpcode";
  dag OutOperandList = (outs);
  dag InOperandList = (ins i64imm:$id, i32imm:$nbytes, variable_ops);
  string AsmString = "";
  list<dag> Pattern = ?;
  list<Register> Uses = [];
  list<Register> Defs = [];
  list<Predicate> Predicates = [];
  int Size = 0;
  string DecoderNamespace = "";
  int CodeSize = 0;
  int AddedComplexity = 0;
  bit isReturn = 0;
  bit isBranch = 0;
  bit isIndirectBranch = 0;
  bit isCompare = 0;
  bit isMoveImm = 0;
  bit isBitcast = 0;
  bit isSelect = 0;
  bit isBarrier = 0;
  bit isCall = 1;
  bit canFoldAsLoad = 0;
  bit mayLoad = 1;
  bit mayStore = ?;
  bit isConvertibleToThreeAddress = 0;
  bit isCommutable = 0;
  bit isTerminator = 0;
  bit isReMaterializable = 0;
  bit isPredicable = 0;
  bit hasDelaySlot = 0;
  bit usesCustomInserter = 1;
  bit hasPostISelHook = 0;
  bit hasCtrlDep = 0;
  bit isNotDuplicable = 0;
  bit isConvergent = 0;
  bit isAsCheapAsAMove = 0;
  bit hasExtraSrcRegAllocReq = 0;
  bit hasExtraDefRegAllocReq = 0;
  bit isRegSequence = 0;
  bit isPseudo = 1;
  bit isExtractSubreg = 0;
  bit isInsertSubreg = 0;
  bit hasSideEffects = ?;
  bit isCodeGenOnly = 1;
  bit isAsmParserOnly = 0;
  InstrItinClass Itinerary = NoItinerary;
  list<SchedReadWrite> SchedRW = ?;
  string Constraints = "";
  string DisableEncoding = "";
  string PostEncoderMethod = "";
  string DecoderMethod = "";
  bits<64> TSFlags = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string AsmMatchConverter = "";
  string TwoOperandAliasConstraint = "";
  bit UseNamedOperandTable = 0;
  string NAME = ?;
}
def STATEPOINT {	// Instruction
  string Namespace = "TargetOpcode";
  dag OutOperandList = (outs);
  dag InOperandList = (ins variable_ops);
  string AsmString = "";
  list<dag> Pattern = ?;
  list<Register> Uses = [];
  list<Register> Defs = [];
  list<Predicate> Predicates = [];
  int Size = 0;
  string DecoderNamespace = "";
  int CodeSize = 0;
  int AddedComplexity = 0;
  bit isReturn = 0;
  bit isBranch = 0;
  bit isIndirectBranch = 0;
  bit isCompare = 0;
  bit isMoveImm = 0;
  bit isBitcast = 0;
  bit isSelect = 0;
  bit isBarrier = 0;
  bit isCall = 1;
  bit canFoldAsLoad = 0;
  bit mayLoad = 1;
  bit mayStore = 1;
  bit isConvertibleToThreeAddress = 0;
  bit isCommutable = 0;
  bit isTerminator = 0;
  bit isReMaterializable = 0;
  bit isPredicable = 0;
  bit hasDelaySlot = 0;
  bit usesCustomInserter = 1;
  bit hasPostISelHook = 0;
  bit hasCtrlDep = 0;
  bit isNotDuplicable = 0;
  bit isConvergent = 0;
  bit isAsCheapAsAMove = 0;
  bit hasExtraSrcRegAllocReq = 0;
  bit hasExtraDefRegAllocReq = 0;
  bit isRegSequence = 0;
  bit isPseudo = 1;
  bit isExtractSubreg = 0;
  bit isInsertSubreg = 0;
  bit hasSideEffects = 1;
  bit isCodeGenOnly = 1;
  bit isAsmParserOnly = 0;
  InstrItinClass Itinerary = NoItinerary;
  list<SchedReadWrite> SchedRW = ?;
  string Constraints = "";
  string DisableEncoding = "";
  string PostEncoderMethod = "";
  string DecoderMethod = "";
  bits<64> TSFlags = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string AsmMatchConverter = "";
  string TwoOperandAliasConstraint = "";
  bit UseNamedOperandTable = 0;
  string NAME = ?;
}
def STR {	// Instruction InstTriCore T32 BOL
  field bits<32> Inst = { off16{9}, off16{8}, off16{7}, off16{6}, off16{15}, off16{14}, off16{13}, off16{12}, off16{11}, off16{10}, off16{5}, off16{4}, off16{3}, off16{2}, off16{1}, off16{0}, s2{3}, s2{2}, s2{1}, s2{0}, s1_d{3}, s1_d{2}, s1_d{1}, s1_d{0}, 0, 1, 1, 0, 0, 0, 1, 1 };
  string Namespace = "TriCore";
  dag OutOperandList = (outs);
  dag InOperandList = (ins DataRegs:$s1_d, memsrc:$off16);
  string AsmString = "str $off16, $s1_d";
  list<dag> Pattern = [(store DataRegs:$s1_d, addr:$off16)];
  list<Register> Uses = [];
  list<Register> Defs = [];
  list<Predicate> Predicates = [];
  int Size = 4;
  string DecoderNamespace = "";
  int CodeSize = 0;
  int AddedComplexity = 0;
  bit isReturn = 0;
  bit isBranch = 0;
  bit isIndirectBranch = 0;
  bit isCompare = 0;
  bit isMoveImm = 0;
  bit isBitcast = 0;
  bit isSelect = 0;
  bit isBarrier = 0;
  bit isCall = 0;
  bit canFoldAsLoad = 0;
  bit mayLoad = ?;
  bit mayStore = ?;
  bit isConvertibleToThreeAddress = 0;
  bit isCommutable = 0;
  bit isTerminator = 0;
  bit isReMaterializable = 0;
  bit isPredicable = 0;
  bit hasDelaySlot = 0;
  bit usesCustomInserter = 0;
  bit hasPostISelHook = 0;
  bit hasCtrlDep = 0;
  bit isNotDuplicable = 0;
  bit isConvergent = 0;
  bit isAsCheapAsAMove = 0;
  bit hasExtraSrcRegAllocReq = 0;
  bit hasExtraDefRegAllocReq = 0;
  bit isRegSequence = 0;
  bit isPseudo = 0;
  bit isExtractSubreg = 0;
  bit isInsertSubreg = 0;
  bit hasSideEffects = ?;
  bit isCodeGenOnly = 0;
  bit isAsmParserOnly = 0;
  InstrItinClass Itinerary = NoItinerary;
  list<SchedReadWrite> SchedRW = ?;
  string Constraints = "";
  string DisableEncoding = "";
  string PostEncoderMethod = "";
  string DecoderMethod = "";
  bits<64> TSFlags = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string AsmMatchConverter = "";
  string TwoOperandAliasConstraint = "";
  bit UseNamedOperandTable = 0;
  bits<16> off16 = { ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? };
  bits<4> s2 = { ?, ?, ?, ? };
  bits<4> s1_d = { ?, ?, ?, ? };
  string NAME = ?;
}
def SUBREG_TO_REG {	// Instruction
  string Namespace = "TargetOpcode";
  dag OutOperandList = (outs unknown:$dst);
  dag InOperandList = (ins unknown:$implsrc, unknown:$subsrc, i32imm:$subidx);
  string AsmString = "";
  list<dag> Pattern = ?;
  list<Register> Uses = [];
  list<Register> Defs = [];
  list<Predicate> Predicates = [];
  int Size = 0;
  string DecoderNamespace = "";
  int CodeSize = 0;
  int AddedComplexity = 0;
  bit isReturn = 0;
  bit isBranch = 0;
  bit isIndirectBranch = 0;
  bit isCompare = 0;
  bit isMoveImm = 0;
  bit isBitcast = 0;
  bit isSelect = 0;
  bit isBarrier = 0;
  bit isCall = 0;
  bit canFoldAsLoad = 0;
  bit mayLoad = ?;
  bit mayStore = ?;
  bit isConvertibleToThreeAddress = 0;
  bit isCommutable = 0;
  bit isTerminator = 0;
  bit isReMaterializable = 0;
  bit isPredicable = 0;
  bit hasDelaySlot = 0;
  bit usesCustomInserter = 0;
  bit hasPostISelHook = 0;
  bit hasCtrlDep = 0;
  bit isNotDuplicable = 0;
  bit isConvergent = 0;
  bit isAsCheapAsAMove = 0;
  bit hasExtraSrcRegAllocReq = 0;
  bit hasExtraDefRegAllocReq = 0;
  bit isRegSequence = 0;
  bit isPseudo = 1;
  bit isExtractSubreg = 0;
  bit isInsertSubreg = 0;
  bit hasSideEffects = 0;
  bit isCodeGenOnly = 1;
  bit isAsmParserOnly = 0;
  InstrItinClass Itinerary = NoItinerary;
  list<SchedReadWrite> SchedRW = ?;
  string Constraints = "";
  string DisableEncoding = "";
  string PostEncoderMethod = "";
  string DecoderMethod = "";
  bits<64> TSFlags = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string AsmMatchConverter = "";
  string TwoOperandAliasConstraint = "";
  bit UseNamedOperandTable = 0;
  string NAME = ?;
}
def SUBri {	// Instruction InstTriCore T16 SC
  field bits<16> Inst = { const8{7}, const8{6}, const8{5}, const8{4}, const8{3}, const8{2}, const8{1}, const8{0}, 1, 0, 0, 0, 1, 0, 1, 1 };
  string Namespace = "TriCore";
  dag OutOperandList = (outs AddrRegs:$d);
  dag InOperandList = (ins DataRegs:$src1, u8imm:$imm);
  string AsmString = "sub.aa $d, $src1, $imm";
  list<dag> Pattern = [(set AddrRegs:$d, (sub DataRegs:$src1, immZExt8:$imm))];
  list<Register> Uses = [];
  list<Register> Defs = [];
  list<Predicate> Predicates = [];
  int Size = 2;
  string DecoderNamespace = "";
  int CodeSize = 0;
  int AddedComplexity = 0;
  bit isReturn = 0;
  bit isBranch = 0;
  bit isIndirectBranch = 0;
  bit isCompare = 0;
  bit isMoveImm = 0;
  bit isBitcast = 0;
  bit isSelect = 0;
  bit isBarrier = 0;
  bit isCall = 0;
  bit canFoldAsLoad = 0;
  bit mayLoad = ?;
  bit mayStore = ?;
  bit isConvertibleToThreeAddress = 0;
  bit isCommutable = 0;
  bit isTerminator = 0;
  bit isReMaterializable = 0;
  bit isPredicable = 0;
  bit hasDelaySlot = 0;
  bit usesCustomInserter = 0;
  bit hasPostISelHook = 0;
  bit hasCtrlDep = 0;
  bit isNotDuplicable = 0;
  bit isConvergent = 0;
  bit isAsCheapAsAMove = 0;
  bit hasExtraSrcRegAllocReq = 0;
  bit hasExtraDefRegAllocReq = 0;
  bit isRegSequence = 0;
  bit isPseudo = 0;
  bit isExtractSubreg = 0;
  bit isInsertSubreg = 0;
  bit hasSideEffects = ?;
  bit isCodeGenOnly = 0;
  bit isAsmParserOnly = 0;
  InstrItinClass Itinerary = NoItinerary;
  list<SchedReadWrite> SchedRW = ?;
  string Constraints = "";
  string DisableEncoding = "";
  string PostEncoderMethod = "";
  string DecoderMethod = "";
  bits<64> TSFlags = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string AsmMatchConverter = "";
  string TwoOperandAliasConstraint = "";
  bit UseNamedOperandTable = 0;
  bits<8> const8 = { ?, ?, ?, ?, ?, ?, ?, ? };
  string NAME = ?;
}
def SUBria {	// Instruction InstTriCore T16 SC
  field bits<16> Inst = { const8{7}, const8{6}, const8{5}, const8{4}, const8{3}, const8{2}, const8{1}, const8{0}, 1, 0, 0, 0, 1, 0, 1, 1 };
  string Namespace = "TriCore";
  dag OutOperandList = (outs AddrRegs:$d);
  dag InOperandList = (ins AddrRegs:$src1, u8imm:$imm);
  string AsmString = "sub.a $d, $imm";
  list<dag> Pattern = [(set AddrRegs:$d, (sub AddrRegs:$src1, immZExt8:$imm))];
  list<Register> Uses = [];
  list<Register> Defs = [];
  list<Predicate> Predicates = [];
  int Size = 2;
  string DecoderNamespace = "";
  int CodeSize = 0;
  int AddedComplexity = 0;
  bit isReturn = 0;
  bit isBranch = 0;
  bit isIndirectBranch = 0;
  bit isCompare = 0;
  bit isMoveImm = 0;
  bit isBitcast = 0;
  bit isSelect = 0;
  bit isBarrier = 0;
  bit isCall = 0;
  bit canFoldAsLoad = 0;
  bit mayLoad = ?;
  bit mayStore = ?;
  bit isConvertibleToThreeAddress = 0;
  bit isCommutable = 0;
  bit isTerminator = 0;
  bit isReMaterializable = 0;
  bit isPredicable = 0;
  bit hasDelaySlot = 0;
  bit usesCustomInserter = 0;
  bit hasPostISelHook = 0;
  bit hasCtrlDep = 0;
  bit isNotDuplicable = 0;
  bit isConvergent = 0;
  bit isAsCheapAsAMove = 0;
  bit hasExtraSrcRegAllocReq = 0;
  bit hasExtraDefRegAllocReq = 0;
  bit isRegSequence = 0;
  bit isPseudo = 0;
  bit isExtractSubreg = 0;
  bit isInsertSubreg = 0;
  bit hasSideEffects = ?;
  bit isCodeGenOnly = 0;
  bit isAsmParserOnly = 0;
  InstrItinClass Itinerary = NoItinerary;
  list<SchedReadWrite> SchedRW = ?;
  string Constraints = "$src1 = $d";
  string DisableEncoding = "";
  string PostEncoderMethod = "";
  string DecoderMethod = "";
  bits<64> TSFlags = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string AsmMatchConverter = "";
  string TwoOperandAliasConstraint = "";
  bit UseNamedOperandTable = 0;
  bits<8> const8 = { ?, ?, ?, ?, ?, ?, ?, ? };
  string NAME = ?;
}
def SUBrr {	// Instruction InstTriCore T32 RR
  field bits<32> Inst = { d{3}, d{2}, d{1}, d{0}, 0, 0, 0, 0, 0, 0, 1, 0, ?, ?, n{1}, n{0}, s2{3}, s2{2}, s2{1}, s2{0}, s1{3}, s1{2}, s1{1}, s1{0}, 0, 0, 0, 0, 0, 0, 0, 1 };
  string Namespace = "TriCore";
  dag OutOperandList = (outs AddrRegs:$d);
  dag InOperandList = (ins AddrRegs:$src1, AddrRegs:$src2);
  string AsmString = "sub.a $d, $src1, $src2";
  list<dag> Pattern = [(set AddrRegs:$d, (sub AddrRegs:$src1, AddrRegs:$src2))];
  list<Register> Uses = [];
  list<Register> Defs = [];
  list<Predicate> Predicates = [];
  int Size = 4;
  string DecoderNamespace = "";
  int CodeSize = 0;
  int AddedComplexity = 0;
  bit isReturn = 0;
  bit isBranch = 0;
  bit isIndirectBranch = 0;
  bit isCompare = 0;
  bit isMoveImm = 0;
  bit isBitcast = 0;
  bit isSelect = 0;
  bit isBarrier = 0;
  bit isCall = 0;
  bit canFoldAsLoad = 0;
  bit mayLoad = ?;
  bit mayStore = ?;
  bit isConvertibleToThreeAddress = 0;
  bit isCommutable = 0;
  bit isTerminator = 0;
  bit isReMaterializable = 0;
  bit isPredicable = 0;
  bit hasDelaySlot = 0;
  bit usesCustomInserter = 0;
  bit hasPostISelHook = 0;
  bit hasCtrlDep = 0;
  bit isNotDuplicable = 0;
  bit isConvergent = 0;
  bit isAsCheapAsAMove = 0;
  bit hasExtraSrcRegAllocReq = 0;
  bit hasExtraDefRegAllocReq = 0;
  bit isRegSequence = 0;
  bit isPseudo = 0;
  bit isExtractSubreg = 0;
  bit isInsertSubreg = 0;
  bit hasSideEffects = ?;
  bit isCodeGenOnly = 0;
  bit isAsmParserOnly = 0;
  InstrItinClass Itinerary = NoItinerary;
  list<SchedReadWrite> SchedRW = ?;
  string Constraints = "";
  string DisableEncoding = "";
  string PostEncoderMethod = "";
  string DecoderMethod = "";
  bits<64> TSFlags = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string AsmMatchConverter = "";
  string TwoOperandAliasConstraint = "";
  bit UseNamedOperandTable = 0;
  bits<4> s1 = { ?, ?, ?, ? };
  bits<4> s2 = { ?, ?, ?, ? };
  bits<4> d = { ?, ?, ?, ? };
  bits<2> n = { ?, ? };
  string NAME = ?;
}
def Throws {	// IntrinsicProperty
  string NAME = ?;
}
def TriCore {	// Target
  InstrInfo InstructionSet = TriCoreInstrInfo;
  list<AsmParser> AssemblyParsers = [DefaultAsmParser];
  list<AsmParserVariant> AssemblyParserVariants = [DefaultAsmParserVariant];
  list<AsmWriter> AssemblyWriters = [DefaultAsmWriter];
  string NAME = ?;
}
def TriCoreInstrInfo {	// InstrInfo
  bit isLittleEndianEncoding = 0;
  bit guessInstructionProperties = 1;
  bit decodePositionallyEncodedOperands = 0;
  bit noNamedPositionallyEncodedOperands = 0;
  string NAME = ?;
}
def TriCoreRetFlag {	// SDPatternOperator SDNode
  string SDNode:sdclass = "SDNode";
  string Opcode = "TriCoreISD::RET_FLAG";
  string SDClass = "SDNode";
  list<SDNodeProperty> Properties = [SDNPHasChain, SDNPOptInGlue, SDNPVariadic];
  SDTypeProfile TypeProfile = SDTNone;
  string NAME = ?;
}
def TriCorebrcc {	// SDPatternOperator SDNode
  string SDNode:sdclass = "SDNode";
  string Opcode = "TriCoreISD::BR_CC";
  string SDClass = "SDNode";
  list<SDNodeProperty> Properties = [SDNPHasChain];
  SDTypeProfile TypeProfile = SDT_TriCoreBrCC;
  string NAME = ?;
}
def TriCorebrcc_new {	// SDPatternOperator SDNode
  string SDNode:sdclass = "SDNode";
  string Opcode = "TriCoreISD::BR_CC_new";
  string SDClass = "SDNode";
  list<SDNodeProperty> Properties = [SDNPHasChain];
  SDTypeProfile TypeProfile = SDT_TriCoreBrCC_new;
  string NAME = ?;
}
def TriCorecmp {	// SDPatternOperator SDNode
  string SDNode:sdclass = "SDNode";
  string Opcode = "TriCoreISD::CMP";
  string SDClass = "SDNode";
  list<SDNodeProperty> Properties = [SDNPOutGlue];
  SDTypeProfile TypeProfile = SDT_TriCoreCmp;
  string NAME = ?;
}
def TriCorecmpb {	// SDPatternOperator SDNode
  string SDNode:sdclass = "SDNode";
  string Opcode = "TriCoreISD::CMPB";
  string SDClass = "SDNode";
  list<SDNodeProperty> Properties = [];
  SDTypeProfile TypeProfile = SDTIntBinOp;
  string NAME = ?;
}
def TriCoreimm8 {	// DAGOperand Operand SDPatternOperator PatFrag ImmLeaf
  ValueType Type = i32;
  string PrintMethod = "printOperand";
  string EncoderMethod = "";
  string DecoderMethod = "";
  string OperandType = "OPERAND_UNKNOWN";
  dag MIOperandInfo = (ops);
  string MCOperandPredicate = ?;
  AsmOperandClass ParserMatchClass = ImmAsmOperand;
  SDNodeXForm ImmLeaf:xform = NOOP_SDNodeXForm;
  dag Operands = (ops);
  dag Fragment = (i32 imm);
  string PredicateCode = "";
  string ImmediateCode = "
  return Imm >= 0 && Imm < 256;
";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  bit FastIselShouldIgnore = 0;
  string NAME = ?;
}
def XNORrc {	// Instruction InstTriCore T32 RC rc
  field bits<32> Inst = { d{3}, d{2}, d{1}, d{0}, 0, 0, 0, 1, 0, 1, 1, const9{8}, const9{7}, const9{6}, const9{5}, const9{4}, const9{3}, const9{2}, const9{1}, const9{0}, s1{3}, s1{2}, s1{1}, s1{0}, 1, 0, 0, 0, 1, 1, 1, 1 };
  string Namespace = "TriCore";
  dag OutOperandList = (outs DataRegs:$d);
  dag InOperandList = (ins DataRegs:$s1, u9imm:$const9);
  string AsmString = "nxor $d, $s1, $const9";
  list<dag> Pattern = [(set i32:$d, (not (xor i32:$s1, immZExt9:$const9)))];
  list<Register> Uses = [];
  list<Register> Defs = [];
  list<Predicate> Predicates = [];
  int Size = 4;
  string DecoderNamespace = "";
  int CodeSize = 0;
  int AddedComplexity = 0;
  bit isReturn = 0;
  bit isBranch = 0;
  bit isIndirectBranch = 0;
  bit isCompare = 0;
  bit isMoveImm = 0;
  bit isBitcast = 0;
  bit isSelect = 0;
  bit isBarrier = 0;
  bit isCall = 0;
  bit canFoldAsLoad = 0;
  bit mayLoad = ?;
  bit mayStore = ?;
  bit isConvertibleToThreeAddress = 0;
  bit isCommutable = 0;
  bit isTerminator = 0;
  bit isReMaterializable = 0;
  bit isPredicable = 0;
  bit hasDelaySlot = 0;
  bit usesCustomInserter = 0;
  bit hasPostISelHook = 0;
  bit hasCtrlDep = 0;
  bit isNotDuplicable = 0;
  bit isConvergent = 0;
  bit isAsCheapAsAMove = 0;
  bit hasExtraSrcRegAllocReq = 0;
  bit hasExtraDefRegAllocReq = 0;
  bit isRegSequence = 0;
  bit isPseudo = 0;
  bit isExtractSubreg = 0;
  bit isInsertSubreg = 0;
  bit hasSideEffects = ?;
  bit isCodeGenOnly = 0;
  bit isAsmParserOnly = 0;
  InstrItinClass Itinerary = NoItinerary;
  list<SchedReadWrite> SchedRW = ?;
  string Constraints = "";
  string DisableEncoding = "";
  string PostEncoderMethod = "";
  string DecoderMethod = "";
  bits<64> TSFlags = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string AsmMatchConverter = "";
  string TwoOperandAliasConstraint = "";
  bit UseNamedOperandTable = 0;
  bits<4> s1 = { ?, ?, ?, ? };
  bits<4> d = { ?, ?, ?, ? };
  bits<9> const9 = { ?, ?, ?, ?, ?, ?, ?, ?, ? };
  bit Logical32_1::isComm = 0;
  string NAME = "XNOR";
}
def XNORrr {	// Instruction InstTriCore T32 RR rr
  field bits<32> Inst = { d{3}, d{2}, d{1}, d{0}, 0, 0, 0, 0, 1, 0, 1, 1, ?, ?, n{1}, n{0}, s2{3}, s2{2}, s2{1}, s2{0}, s1{3}, s1{2}, s1{1}, s1{0}, 0, 0, 0, 0, 1, 1, 1, 1 };
  string Namespace = "TriCore";
  dag OutOperandList = (outs DataRegs:$d);
  dag InOperandList = (ins DataRegs:$s1, DataRegs:$s2);
  string AsmString = "nxor $d, $s1, $s2";
  list<dag> Pattern = [(set i32:$d, (not (xor i32:$s1, i32:$s2)))];
  list<Register> Uses = [];
  list<Register> Defs = [];
  list<Predicate> Predicates = [];
  int Size = 4;
  string DecoderNamespace = "";
  int CodeSize = 0;
  int AddedComplexity = 0;
  bit isReturn = 0;
  bit isBranch = 0;
  bit isIndirectBranch = 0;
  bit isCompare = 0;
  bit isMoveImm = 0;
  bit isBitcast = 0;
  bit isSelect = 0;
  bit isBarrier = 0;
  bit isCall = 0;
  bit canFoldAsLoad = 0;
  bit mayLoad = ?;
  bit mayStore = ?;
  bit isConvertibleToThreeAddress = 0;
  bit isCommutable = 0;
  bit isTerminator = 0;
  bit isReMaterializable = 0;
  bit isPredicable = 0;
  bit hasDelaySlot = 0;
  bit usesCustomInserter = 0;
  bit hasPostISelHook = 0;
  bit hasCtrlDep = 0;
  bit isNotDuplicable = 0;
  bit isConvergent = 0;
  bit isAsCheapAsAMove = 0;
  bit hasExtraSrcRegAllocReq = 0;
  bit hasExtraDefRegAllocReq = 0;
  bit isRegSequence = 0;
  bit isPseudo = 0;
  bit isExtractSubreg = 0;
  bit isInsertSubreg = 0;
  bit hasSideEffects = ?;
  bit isCodeGenOnly = 0;
  bit isAsmParserOnly = 0;
  InstrItinClass Itinerary = NoItinerary;
  list<SchedReadWrite> SchedRW = ?;
  string Constraints = "";
  string DisableEncoding = "";
  string PostEncoderMethod = "";
  string DecoderMethod = "";
  bits<64> TSFlags = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string AsmMatchConverter = "";
  string TwoOperandAliasConstraint = "";
  bit UseNamedOperandTable = 0;
  bits<4> s1 = { ?, ?, ?, ? };
  bits<4> s2 = { ?, ?, ?, ? };
  bits<4> d = { ?, ?, ?, ? };
  bits<2> n = { ?, ? };
  bit Logical32_1::isComm = 0;
  string NAME = "XNOR";
}
def XORrc {	// Instruction InstTriCore T32 RC rc
  field bits<32> Inst = { d{3}, d{2}, d{1}, d{0}, 0, 0, 0, 1, 1, 0, 0, const9{8}, const9{7}, const9{6}, const9{5}, const9{4}, const9{3}, const9{2}, const9{1}, const9{0}, s1{3}, s1{2}, s1{1}, s1{0}, 1, 0, 0, 0, 1, 1, 1, 1 };
  string Namespace = "TriCore";
  dag OutOperandList = (outs DataRegs:$d);
  dag InOperandList = (ins DataRegs:$s1, u9imm:$const9);
  string AsmString = "xor $d, $s1, $const9";
  list<dag> Pattern = [(set DataRegs:$d, (xor DataRegs:$s1, immZExt9:$const9))];
  list<Register> Uses = [];
  list<Register> Defs = [];
  list<Predicate> Predicates = [];
  int Size = 4;
  string DecoderNamespace = "";
  int CodeSize = 0;
  int AddedComplexity = 0;
  bit isReturn = 0;
  bit isBranch = 0;
  bit isIndirectBranch = 0;
  bit isCompare = 0;
  bit isMoveImm = 0;
  bit isBitcast = 0;
  bit isSelect = 0;
  bit isBarrier = 0;
  bit isCall = 0;
  bit canFoldAsLoad = 0;
  bit mayLoad = ?;
  bit mayStore = ?;
  bit isConvertibleToThreeAddress = 0;
  bit isCommutable = 0;
  bit isTerminator = 0;
  bit isReMaterializable = 0;
  bit isPredicable = 0;
  bit hasDelaySlot = 0;
  bit usesCustomInserter = 0;
  bit hasPostISelHook = 0;
  bit hasCtrlDep = 0;
  bit isNotDuplicable = 0;
  bit isConvergent = 0;
  bit isAsCheapAsAMove = 0;
  bit hasExtraSrcRegAllocReq = 0;
  bit hasExtraDefRegAllocReq = 0;
  bit isRegSequence = 0;
  bit isPseudo = 0;
  bit isExtractSubreg = 0;
  bit isInsertSubreg = 0;
  bit hasSideEffects = ?;
  bit isCodeGenOnly = 0;
  bit isAsmParserOnly = 0;
  InstrItinClass Itinerary = NoItinerary;
  list<SchedReadWrite> SchedRW = ?;
  string Constraints = "";
  string DisableEncoding = "";
  string PostEncoderMethod = "";
  string DecoderMethod = "";
  bits<64> TSFlags = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string AsmMatchConverter = "";
  string TwoOperandAliasConstraint = "";
  bit UseNamedOperandTable = 0;
  bits<4> s1 = { ?, ?, ?, ? };
  bits<4> d = { ?, ?, ?, ? };
  bits<9> const9 = { ?, ?, ?, ?, ?, ?, ?, ?, ? };
  bit Logical32_0::isComm = 0;
  string NAME = "XOR";
}
def XORrr {	// Instruction InstTriCore T32 RR rr
  field bits<32> Inst = { d{3}, d{2}, d{1}, d{0}, 0, 0, 0, 0, 1, 1, 0, 0, ?, ?, n{1}, n{0}, s2{3}, s2{2}, s2{1}, s2{0}, s1{3}, s1{2}, s1{1}, s1{0}, 0, 0, 0, 0, 1, 1, 1, 1 };
  string Namespace = "TriCore";
  dag OutOperandList = (outs DataRegs:$d);
  dag InOperandList = (ins DataRegs:$s1, DataRegs:$s2);
  string AsmString = "xor $d, $s1, $s2";
  list<dag> Pattern = [(set DataRegs:$d, (xor DataRegs:$s1, DataRegs:$s2))];
  list<Register> Uses = [];
  list<Register> Defs = [];
  list<Predicate> Predicates = [];
  int Size = 4;
  string DecoderNamespace = "";
  int CodeSize = 0;
  int AddedComplexity = 0;
  bit isReturn = 0;
  bit isBranch = 0;
  bit isIndirectBranch = 0;
  bit isCompare = 0;
  bit isMoveImm = 0;
  bit isBitcast = 0;
  bit isSelect = 0;
  bit isBarrier = 0;
  bit isCall = 0;
  bit canFoldAsLoad = 0;
  bit mayLoad = ?;
  bit mayStore = ?;
  bit isConvertibleToThreeAddress = 0;
  bit isCommutable = 0;
  bit isTerminator = 0;
  bit isReMaterializable = 0;
  bit isPredicable = 0;
  bit hasDelaySlot = 0;
  bit usesCustomInserter = 0;
  bit hasPostISelHook = 0;
  bit hasCtrlDep = 0;
  bit isNotDuplicable = 0;
  bit isConvergent = 0;
  bit isAsCheapAsAMove = 0;
  bit hasExtraSrcRegAllocReq = 0;
  bit hasExtraDefRegAllocReq = 0;
  bit isRegSequence = 0;
  bit isPseudo = 0;
  bit isExtractSubreg = 0;
  bit isInsertSubreg = 0;
  bit hasSideEffects = ?;
  bit isCodeGenOnly = 0;
  bit isAsmParserOnly = 0;
  InstrItinClass Itinerary = NoItinerary;
  list<SchedReadWrite> SchedRW = ?;
  string Constraints = "";
  string DisableEncoding = "";
  string PostEncoderMethod = "";
  string DecoderMethod = "";
  bits<64> TSFlags = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string AsmMatchConverter = "";
  string TwoOperandAliasConstraint = "";
  bit UseNamedOperandTable = 0;
  bits<4> s1 = { ?, ?, ?, ? };
  bits<4> s2 = { ?, ?, ?, ? };
  bits<4> d = { ?, ?, ?, ? };
  bits<2> n = { ?, ? };
  bit Logical32_0::isComm = 0;
  string NAME = "XOR";
}
def XORsrr {	// Instruction InstTriCore T16 SRR
  field bits<16> Inst = { s2{3}, s2{2}, s2{1}, s2{0}, s1{3}, s1{2}, s1{1}, s1{0}, 1, 1, 0, 0, 0, 1, 1, 0 };
  string Namespace = "TriCore";
  dag OutOperandList = (outs DataRegs:$d);
  dag InOperandList = (ins DataRegs:$s1, DataRegs:$s2);
  string AsmString = "xor $d, $s1, $s2";
  list<dag> Pattern = [(set DataRegs:$d, (xor DataRegs:$s1, DataRegs:$s2))];
  list<Register> Uses = [];
  list<Register> Defs = [];
  list<Predicate> Predicates = [];
  int Size = 2;
  string DecoderNamespace = "";
  int CodeSize = 0;
  int AddedComplexity = 0;
  bit isReturn = 0;
  bit isBranch = 0;
  bit isIndirectBranch = 0;
  bit isCompare = 0;
  bit isMoveImm = 0;
  bit isBitcast = 0;
  bit isSelect = 0;
  bit isBarrier = 0;
  bit isCall = 0;
  bit canFoldAsLoad = 0;
  bit mayLoad = ?;
  bit mayStore = ?;
  bit isConvertibleToThreeAddress = 0;
  bit isCommutable = 0;
  bit isTerminator = 0;
  bit isReMaterializable = 0;
  bit isPredicable = 0;
  bit hasDelaySlot = 0;
  bit usesCustomInserter = 0;
  bit hasPostISelHook = 0;
  bit hasCtrlDep = 0;
  bit isNotDuplicable = 0;
  bit isConvergent = 0;
  bit isAsCheapAsAMove = 0;
  bit hasExtraSrcRegAllocReq = 0;
  bit hasExtraDefRegAllocReq = 0;
  bit isRegSequence = 0;
  bit isPseudo = 0;
  bit isExtractSubreg = 0;
  bit isInsertSubreg = 0;
  bit hasSideEffects = ?;
  bit isCodeGenOnly = 0;
  bit isAsmParserOnly = 0;
  InstrItinClass Itinerary = NoItinerary;
  list<SchedReadWrite> SchedRW = ?;
  string Constraints = "$s1 = $d";
  string DisableEncoding = "";
  string PostEncoderMethod = "";
  string DecoderMethod = "";
  bits<64> TSFlags = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  string AsmMatchConverter = "";
  string TwoOperandAliasConstraint = "";
  bit UseNamedOperandTable = 0;
  bits<4> s1 = { ?, ?, ?, ? };
  bits<4> s2 = { ?, ?, ?, ? };
  string NAME = ?;
}
def add {	// SDPatternOperator SDNode
  string SDNode:sdclass = "SDNode";
  string Opcode = "ISD::ADD";
  string SDClass = "SDNode";
  list<SDNodeProperty> Properties = [SDNPCommutative, SDNPAssociative];
  SDTypeProfile TypeProfile = SDTIntBinOp;
  string NAME = ?;
}
def addc {	// SDPatternOperator SDNode
  string SDNode:sdclass = "SDNode";
  string Opcode = "ISD::ADDC";
  string SDClass = "SDNode";
  list<SDNodeProperty> Properties = [SDNPCommutative, SDNPOutGlue];
  SDTypeProfile TypeProfile = SDTIntBinOp;
  string NAME = ?;
}
def adde {	// SDPatternOperator SDNode
  string SDNode:sdclass = "SDNode";
  string Opcode = "ISD::ADDE";
  string SDClass = "SDNode";
  list<SDNodeProperty> Properties = [SDNPCommutative, SDNPOutGlue, SDNPInGlue];
  SDTypeProfile TypeProfile = SDTIntBinOp;
  string NAME = ?;
}
def addr {	// ComplexPattern
  ValueType Ty = iPTR;
  int NumOperands = 2;
  string SelectFunc = "SelectAddr";
  list<SDNode> RootNodes = [];
  list<SDNodeProperty> Properties = [];
  string NAME = ?;
}
def addrspacecast {	// SDPatternOperator SDNode
  list<SDNodeProperty> SDNode:props = [];
  string SDNode:sdclass = "SDNode";
  string Opcode = "ISD::ADDRSPACECAST";
  string SDClass = "SDNode";
  list<SDNodeProperty> Properties = [];
  SDTypeProfile TypeProfile = SDTUnaryOp;
  string NAME = ?;
}
def and {	// SDPatternOperator SDNode
  string SDNode:sdclass = "SDNode";
  string Opcode = "ISD::AND";
  string SDClass = "SDNode";
  list<SDNodeProperty> Properties = [SDNPCommutative, SDNPAssociative];
  SDTypeProfile TypeProfile = SDTIntBinOp;
  string NAME = ?;
}
def anonymous_0 {	// IntrinsicProperty NoCapture
  int ArgNo = 1;
  string NAME = ?;
}
def anonymous_1 {	// IntrinsicProperty NoCapture
  int ArgNo = 2;
  string NAME = ?;
}
def anonymous_10 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_100 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_101 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_102 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_103 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_104 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_105 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_106 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_107 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_108 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_109 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_11 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_110 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_111 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_112 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_113 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_114 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_115 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_116 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_117 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_118 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_119 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_12 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_120 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_121 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_122 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_123 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_124 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_125 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_126 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_127 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_128 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_129 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_13 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_130 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_131 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_132 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_133 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_134 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_135 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_136 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_137 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_138 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_139 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_14 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_140 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_141 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_142 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_143 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_144 {	// LLVMType LLVMMatchType LLVMTruncatedType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_145 {	// LLVMType LLVMMatchType LLVMExtendedType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_146 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_147 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_148 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_149 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_15 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_150 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_151 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_152 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 1;
  string NAME = ?;
}
def anonymous_153 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 1;
  string NAME = ?;
}
def anonymous_154 {	// LLVMType LLVMMatchType LLVMTruncatedType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_155 {	// LLVMType LLVMMatchType LLVMTruncatedType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_156 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_157 {	// LLVMType LLVMMatchType LLVMTruncatedType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_158 {	// LLVMType LLVMMatchType LLVMExtendedType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_159 {	// LLVMType LLVMMatchType LLVMExtendedType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_16 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_160 {	// LLVMType LLVMMatchType LLVMExtendedType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_161 {	// LLVMType LLVMMatchType LLVMTruncatedType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_162 {	// LLVMType LLVMMatchType LLVMTruncatedType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_163 {	// LLVMType LLVMMatchType LLVMHalfElementsVectorType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_164 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_165 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_166 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_167 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_168 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_169 {	// LLVMType LLVMMatchType LLVMHalfElementsVectorType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_17 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_170 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 1;
  string NAME = ?;
}
def anonymous_171 {	// LLVMType LLVMMatchType LLVMHalfElementsVectorType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_172 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_173 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_174 {	// LLVMType LLVMAnyPointerType
  ValueType VT = iPTRAny;
  LLVMType ElTy = anonymous_173;
  string NAME = ?;
}
def anonymous_175 {	// IntrinsicProperty NoCapture
  int ArgNo = 2;
  string NAME = ?;
}
def anonymous_176 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_177 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_178 {	// LLVMType LLVMAnyPointerType
  ValueType VT = iPTRAny;
  LLVMType ElTy = anonymous_177;
  string NAME = ?;
}
def anonymous_179 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_18 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_180 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_181 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_182 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_183 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_184 {	// LLVMType LLVMAnyPointerType
  ValueType VT = iPTRAny;
  LLVMType ElTy = anonymous_183;
  string NAME = ?;
}
def anonymous_185 {	// IntrinsicProperty NoCapture
  int ArgNo = 2;
  string NAME = ?;
}
def anonymous_186 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_187 {	// IntrinsicProperty NoCapture
  int ArgNo = 3;
  string NAME = ?;
}
def anonymous_188 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_189 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_19 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_190 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_191 {	// LLVMType LLVMAnyPointerType
  ValueType VT = iPTRAny;
  LLVMType ElTy = anonymous_190;
  string NAME = ?;
}
def anonymous_192 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_193 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_194 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_195 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_196 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_197 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_198 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_199 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_2 {	// IntrinsicProperty NoCapture
  int ArgNo = 0;
  string NAME = ?;
}
def anonymous_20 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_200 {	// LLVMType LLVMAnyPointerType
  ValueType VT = iPTRAny;
  LLVMType ElTy = anonymous_199;
  string NAME = ?;
}
def anonymous_201 {	// IntrinsicProperty NoCapture
  int ArgNo = 3;
  string NAME = ?;
}
def anonymous_202 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_203 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_204 {	// IntrinsicProperty NoCapture
  int ArgNo = 4;
  string NAME = ?;
}
def anonymous_205 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_206 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_207 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_208 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_209 {	// LLVMType LLVMAnyPointerType
  ValueType VT = iPTRAny;
  LLVMType ElTy = anonymous_208;
  string NAME = ?;
}
def anonymous_21 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_210 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_211 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_212 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_213 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_214 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_215 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_216 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_217 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_218 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_219 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_22 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_220 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_221 {	// LLVMType LLVMAnyPointerType
  ValueType VT = iPTRAny;
  LLVMType ElTy = anonymous_220;
  string NAME = ?;
}
def anonymous_222 {	// IntrinsicProperty NoCapture
  int ArgNo = 4;
  string NAME = ?;
}
def anonymous_223 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_224 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_225 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_226 {	// IntrinsicProperty NoCapture
  int ArgNo = 5;
  string NAME = ?;
}
def anonymous_227 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_228 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_229 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_23 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_230 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_231 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_232 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_233 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_234 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_235 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_236 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_237 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_238 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_239 {	// IntrinsicProperty NoCapture
  int ArgNo = 0;
  string NAME = ?;
}
def anonymous_24 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_240 {	// IntrinsicProperty NoCapture
  int ArgNo = 0;
  string NAME = ?;
}
def anonymous_241 {	// IntrinsicProperty NoCapture
  int ArgNo = 0;
  string NAME = ?;
}
def anonymous_242 {	// IntrinsicProperty NoCapture
  int ArgNo = 0;
  string NAME = ?;
}
def anonymous_243 {	// IntrinsicProperty NoCapture
  int ArgNo = 0;
  string NAME = ?;
}
def anonymous_244 {	// IntrinsicProperty NoCapture
  int ArgNo = 0;
  string NAME = ?;
}
def anonymous_245 {	// IntrinsicProperty NoCapture
  int ArgNo = 0;
  string NAME = ?;
}
def anonymous_246 {	// IntrinsicProperty NoCapture
  int ArgNo = 0;
  string NAME = ?;
}
def anonymous_247 {	// IntrinsicProperty NoCapture
  int ArgNo = 0;
  string NAME = ?;
}
def anonymous_248 {	// IntrinsicProperty NoCapture
  int ArgNo = 0;
  string NAME = ?;
}
def anonymous_249 {	// IntrinsicProperty NoCapture
  int ArgNo = 0;
  string NAME = ?;
}
def anonymous_25 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_250 {	// IntrinsicProperty NoCapture
  int ArgNo = 0;
  string NAME = ?;
}
def anonymous_251 {	// IntrinsicProperty NoCapture
  int ArgNo = 0;
  string NAME = ?;
}
def anonymous_252 {	// IntrinsicProperty NoCapture
  int ArgNo = 0;
  string NAME = ?;
}
def anonymous_253 {	// IntrinsicProperty NoCapture
  int ArgNo = 0;
  string NAME = ?;
}
def anonymous_254 {	// IntrinsicProperty NoCapture
  int ArgNo = 0;
  string NAME = ?;
}
def anonymous_255 {	// IntrinsicProperty NoCapture
  int ArgNo = 0;
  string NAME = ?;
}
def anonymous_256 {	// IntrinsicProperty NoCapture
  int ArgNo = 0;
  string NAME = ?;
}
def anonymous_257 {	// IntrinsicProperty NoCapture
  int ArgNo = 0;
  string NAME = ?;
}
def anonymous_258 {	// IntrinsicProperty NoCapture
  int ArgNo = 0;
  string NAME = ?;
}
def anonymous_259 {	// IntrinsicProperty NoCapture
  int ArgNo = 0;
  string NAME = ?;
}
def anonymous_26 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_260 {	// IntrinsicProperty NoCapture
  int ArgNo = 0;
  string NAME = ?;
}
def anonymous_261 {	// IntrinsicProperty NoCapture
  int ArgNo = 0;
  string NAME = ?;
}
def anonymous_262 {	// IntrinsicProperty NoCapture
  int ArgNo = 0;
  string NAME = ?;
}
def anonymous_263 {	// IntrinsicProperty NoCapture
  int ArgNo = 1;
  string NAME = ?;
}
def anonymous_264 {	// IntrinsicProperty NoCapture
  int ArgNo = 0;
  string NAME = ?;
}
def anonymous_265 {	// IntrinsicProperty NoCapture
  int ArgNo = 1;
  string NAME = ?;
}
def anonymous_266 {	// IntrinsicProperty NoCapture
  int ArgNo = 0;
  string NAME = ?;
}
def anonymous_267 {	// IntrinsicProperty NoCapture
  int ArgNo = 0;
  string NAME = ?;
}
def anonymous_268 {	// IntrinsicProperty NoCapture
  int ArgNo = 0;
  string NAME = ?;
}
def anonymous_269 {	// IntrinsicProperty NoCapture
  int ArgNo = 0;
  string NAME = ?;
}
def anonymous_27 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_270 {	// IntrinsicProperty NoCapture
  int ArgNo = 0;
  string NAME = ?;
}
def anonymous_271 {	// IntrinsicProperty NoCapture
  int ArgNo = 0;
  string NAME = ?;
}
def anonymous_272 {	// IntrinsicProperty NoCapture
  int ArgNo = 0;
  string NAME = ?;
}
def anonymous_273 {	// IntrinsicProperty NoCapture
  int ArgNo = 0;
  string NAME = ?;
}
def anonymous_274 {	// IntrinsicProperty NoCapture
  int ArgNo = 0;
  string NAME = ?;
}
def anonymous_275 {	// IntrinsicProperty NoCapture
  int ArgNo = 0;
  string NAME = ?;
}
def anonymous_276 {	// IntrinsicProperty NoCapture
  int ArgNo = 0;
  string NAME = ?;
}
def anonymous_277 {	// IntrinsicProperty NoCapture
  int ArgNo = 0;
  string NAME = ?;
}
def anonymous_278 {	// IntrinsicProperty NoCapture
  int ArgNo = 0;
  string NAME = ?;
}
def anonymous_279 {	// IntrinsicProperty NoCapture
  int ArgNo = 0;
  string NAME = ?;
}
def anonymous_28 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_280 {	// IntrinsicProperty NoCapture
  int ArgNo = 0;
  string NAME = ?;
}
def anonymous_281 {	// LLVMType LLVMAnyPointerType
  ValueType VT = iPTRAny;
  LLVMType ElTy = llvm_float_ty;
  string NAME = ?;
}
def anonymous_282 {	// IntrinsicProperty NoCapture
  int ArgNo = 0;
  string NAME = ?;
}
def anonymous_283 {	// LLVMType LLVMAnyPointerType
  ValueType VT = iPTRAny;
  LLVMType ElTy = llvm_i32_ty;
  string NAME = ?;
}
def anonymous_284 {	// IntrinsicProperty NoCapture
  int ArgNo = 0;
  string NAME = ?;
}
def anonymous_285 {	// LLVMType LLVMAnyPointerType
  ValueType VT = iPTRAny;
  LLVMType ElTy = llvm_i32_ty;
  string NAME = ?;
}
def anonymous_286 {	// IntrinsicProperty NoCapture
  int ArgNo = 0;
  string NAME = ?;
}
def anonymous_287 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_288 {	// LLVMType LLVMAnyPointerType
  ValueType VT = iPTRAny;
  LLVMType ElTy = anonymous_287;
  string NAME = ?;
}
def anonymous_289 {	// IntrinsicProperty NoCapture
  int ArgNo = 0;
  string NAME = ?;
}
def anonymous_29 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_290 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_291 {	// LLVMType LLVMAnyPointerType
  ValueType VT = iPTRAny;
  LLVMType ElTy = anonymous_290;
  string NAME = ?;
}
def anonymous_292 {	// IntrinsicProperty NoCapture
  int ArgNo = 0;
  string NAME = ?;
}
def anonymous_293 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_294 {	// LLVMType LLVMAnyPointerType
  ValueType VT = iPTRAny;
  LLVMType ElTy = anonymous_293;
  string NAME = ?;
}
def anonymous_295 {	// IntrinsicProperty NoCapture
  int ArgNo = 0;
  string NAME = ?;
}
def anonymous_296 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_297 {	// LLVMType LLVMAnyPointerType
  ValueType VT = iPTRAny;
  LLVMType ElTy = anonymous_296;
  string NAME = ?;
}
def anonymous_298 {	// IntrinsicProperty NoCapture
  int ArgNo = 0;
  string NAME = ?;
}
def anonymous_299 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_3 {	// IntrinsicProperty NoCapture
  int ArgNo = 0;
  string NAME = ?;
}
def anonymous_30 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_300 {	// LLVMType LLVMAnyPointerType
  ValueType VT = iPTRAny;
  LLVMType ElTy = anonymous_299;
  string NAME = ?;
}
def anonymous_301 {	// IntrinsicProperty NoCapture
  int ArgNo = 0;
  string NAME = ?;
}
def anonymous_302 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_303 {	// LLVMType LLVMAnyPointerType
  ValueType VT = iPTRAny;
  LLVMType ElTy = anonymous_302;
  string NAME = ?;
}
def anonymous_304 {	// IntrinsicProperty NoCapture
  int ArgNo = 0;
  string NAME = ?;
}
def anonymous_305 {	// IntrinsicProperty NoCapture
  int ArgNo = 0;
  string NAME = ?;
}
def anonymous_306 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_307 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_308 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_309 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_31 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_310 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_311 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_312 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_313 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_314 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_315 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_316 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_317 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_318 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_319 {	// SDTypeConstraint SDTCisInt
  int OperandNum = 0;
  string NAME = ?;
}
def anonymous_32 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_320 {	// SDTypeConstraint SDTCisFP
  int OperandNum = 0;
  string NAME = ?;
}
def anonymous_321 {	// SDTypeConstraint SDTCisPtrTy
  int OperandNum = 0;
  string NAME = ?;
}
def anonymous_322 {	// SDTypeConstraint SDTCisVT
  int OperandNum = 0;
  ValueType VT = OtherVT;
  string NAME = ?;
}
def anonymous_323 {	// SDTypeConstraint SDTCisSameAs
  int OperandNum = 0;
  int OtherOperandNum = 1;
  string NAME = ?;
}
def anonymous_324 {	// SDTypeConstraint SDTCisSameAs
  int OperandNum = 0;
  int OtherOperandNum = 2;
  string NAME = ?;
}
def anonymous_325 {	// SDTypeConstraint SDTCisInt
  int OperandNum = 0;
  string NAME = ?;
}
def anonymous_326 {	// SDTypeConstraint SDTCisSameAs
  int OperandNum = 0;
  int OtherOperandNum = 1;
  string NAME = ?;
}
def anonymous_327 {	// SDTypeConstraint SDTCisInt
  int OperandNum = 0;
  string NAME = ?;
}
def anonymous_328 {	// SDTypeConstraint SDTCisInt
  int OperandNum = 2;
  string NAME = ?;
}
def anonymous_329 {	// SDTypeConstraint SDTCisSameAs
  int OperandNum = 0;
  int OtherOperandNum = 1;
  string NAME = ?;
}
def anonymous_33 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_330 {	// SDTypeConstraint SDTCisSameAs
  int OperandNum = 0;
  int OtherOperandNum = 2;
  string NAME = ?;
}
def anonymous_331 {	// SDTypeConstraint SDTCisSameAs
  int OperandNum = 0;
  int OtherOperandNum = 3;
  string NAME = ?;
}
def anonymous_332 {	// SDTypeConstraint SDTCisInt
  int OperandNum = 0;
  string NAME = ?;
}
def anonymous_333 {	// SDTypeConstraint SDTCisSameAs
  int OperandNum = 0;
  int OtherOperandNum = 1;
  string NAME = ?;
}
def anonymous_334 {	// SDTypeConstraint SDTCisSameAs
  int OperandNum = 0;
  int OtherOperandNum = 2;
  string NAME = ?;
}
def anonymous_335 {	// SDTypeConstraint SDTCisFP
  int OperandNum = 0;
  string NAME = ?;
}
def anonymous_336 {	// SDTypeConstraint SDTCisSameAs
  int OperandNum = 0;
  int OtherOperandNum = 1;
  string NAME = ?;
}
def anonymous_337 {	// SDTypeConstraint SDTCisFP
  int OperandNum = 0;
  string NAME = ?;
}
def anonymous_338 {	// SDTypeConstraint SDTCisFP
  int OperandNum = 2;
  string NAME = ?;
}
def anonymous_339 {	// SDTypeConstraint SDTCisSameAs
  int OperandNum = 0;
  int OtherOperandNum = 1;
  string NAME = ?;
}
def anonymous_34 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_340 {	// SDTypeConstraint SDTCisSameAs
  int OperandNum = 0;
  int OtherOperandNum = 2;
  string NAME = ?;
}
def anonymous_341 {	// SDTypeConstraint SDTCisSameAs
  int OperandNum = 0;
  int OtherOperandNum = 3;
  string NAME = ?;
}
def anonymous_342 {	// SDTypeConstraint SDTCisFP
  int OperandNum = 0;
  string NAME = ?;
}
def anonymous_343 {	// SDTypeConstraint SDTCisSameAs
  int OperandNum = 0;
  int OtherOperandNum = 1;
  string NAME = ?;
}
def anonymous_344 {	// SDTypeConstraint SDTCisInt
  int OperandNum = 0;
  string NAME = ?;
}
def anonymous_345 {	// SDTypeConstraint SDTCisInt
  int OperandNum = 0;
  string NAME = ?;
}
def anonymous_346 {	// SDTypeConstraint SDTCisInt
  int OperandNum = 1;
  string NAME = ?;
}
def anonymous_347 {	// SDTypeConstraint SDTCisOpSmallerThanOp
  int OperandNum = 1;
  int BigOperandNum = 0;
  string NAME = ?;
}
def anonymous_348 {	// SDTypeConstraint SDTCisInt
  int OperandNum = 0;
  string NAME = ?;
}
def anonymous_349 {	// SDTypeConstraint SDTCisInt
  int OperandNum = 1;
  string NAME = ?;
}
def anonymous_35 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_350 {	// SDTypeConstraint SDTCisOpSmallerThanOp
  int OperandNum = 0;
  int BigOperandNum = 1;
  string NAME = ?;
}
def anonymous_351 {	// SDTypeConstraint SDTCisSameAs
  int OperandNum = 0;
  int OtherOperandNum = 1;
  string NAME = ?;
}
def anonymous_352 {	// SDTypeConstraint SDTCisFP
  int OperandNum = 0;
  string NAME = ?;
}
def anonymous_353 {	// SDTypeConstraint SDTCisFP
  int OperandNum = 0;
  string NAME = ?;
}
def anonymous_354 {	// SDTypeConstraint SDTCisFP
  int OperandNum = 1;
  string NAME = ?;
}
def anonymous_355 {	// SDTypeConstraint SDTCisOpSmallerThanOp
  int OperandNum = 0;
  int BigOperandNum = 1;
  string NAME = ?;
}
def anonymous_356 {	// SDTypeConstraint SDTCisFP
  int OperandNum = 0;
  string NAME = ?;
}
def anonymous_357 {	// SDTypeConstraint SDTCisFP
  int OperandNum = 1;
  string NAME = ?;
}
def anonymous_358 {	// SDTypeConstraint SDTCisOpSmallerThanOp
  int OperandNum = 1;
  int BigOperandNum = 0;
  string NAME = ?;
}
def anonymous_359 {	// SDTypeConstraint SDTCisFP
  int OperandNum = 0;
  string NAME = ?;
}
def anonymous_36 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_360 {	// SDTypeConstraint SDTCisInt
  int OperandNum = 1;
  string NAME = ?;
}
def anonymous_361 {	// SDTypeConstraint SDTCisInt
  int OperandNum = 0;
  string NAME = ?;
}
def anonymous_362 {	// SDTypeConstraint SDTCisFP
  int OperandNum = 1;
  string NAME = ?;
}
def anonymous_363 {	// SDTypeConstraint SDTCisSameAs
  int OperandNum = 0;
  int OtherOperandNum = 1;
  string NAME = ?;
}
def anonymous_364 {	// SDTypeConstraint SDTCisInt
  int OperandNum = 0;
  string NAME = ?;
}
def anonymous_365 {	// SDTypeConstraint SDTCisVT
  int OperandNum = 2;
  ValueType VT = OtherVT;
  string NAME = ?;
}
def anonymous_366 {	// SDTypeConstraint SDTCisVTSmallerThanOp
  int OperandNum = 2;
  int OtherOperandNum = 1;
  string NAME = ?;
}
def anonymous_367 {	// SDTypeConstraint SDTCisInt
  int OperandNum = 0;
  string NAME = ?;
}
def anonymous_368 {	// SDTypeConstraint SDTCisSameAs
  int OperandNum = 1;
  int OtherOperandNum = 2;
  string NAME = ?;
}
def anonymous_369 {	// SDTypeConstraint SDTCisVT
  int OperandNum = 3;
  ValueType VT = OtherVT;
  string NAME = ?;
}
def anonymous_37 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_370 {	// SDTypeConstraint SDTCisInt
  int OperandNum = 1;
  string NAME = ?;
}
def anonymous_371 {	// SDTypeConstraint SDTCisSameAs
  int OperandNum = 0;
  int OtherOperandNum = 2;
  string NAME = ?;
}
def anonymous_372 {	// SDTypeConstraint SDTCisSameAs
  int OperandNum = 2;
  int OtherOperandNum = 3;
  string NAME = ?;
}
def anonymous_373 {	// SDTypeConstraint SDTCisInt
  int OperandNum = 1;
  string NAME = ?;
}
def anonymous_374 {	// SDTypeConstraint SDTCisSameAs
  int OperandNum = 0;
  int OtherOperandNum = 2;
  string NAME = ?;
}
def anonymous_375 {	// SDTypeConstraint SDTCisSameAs
  int OperandNum = 2;
  int OtherOperandNum = 3;
  string NAME = ?;
}
def anonymous_376 {	// SDTypeConstraint SDTCisSameAs
  int OperandNum = 1;
  int OtherOperandNum = 2;
  string NAME = ?;
}
def anonymous_377 {	// SDTypeConstraint SDTCisSameAs
  int OperandNum = 3;
  int OtherOperandNum = 4;
  string NAME = ?;
}
def anonymous_378 {	// SDTypeConstraint SDTCisSameAs
  int OperandNum = 0;
  int OtherOperandNum = 3;
  string NAME = ?;
}
def anonymous_379 {	// SDTypeConstraint SDTCisVT
  int OperandNum = 5;
  ValueType VT = OtherVT;
  string NAME = ?;
}
def anonymous_38 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_380 {	// SDTypeConstraint SDTCisVT
  int OperandNum = 0;
  ValueType VT = OtherVT;
  string NAME = ?;
}
def anonymous_381 {	// SDTypeConstraint SDTCisVT
  int OperandNum = 0;
  ValueType VT = OtherVT;
  string NAME = ?;
}
def anonymous_382 {	// SDTypeConstraint SDTCisSameAs
  int OperandNum = 1;
  int OtherOperandNum = 2;
  string NAME = ?;
}
def anonymous_383 {	// SDTypeConstraint SDTCisVT
  int OperandNum = 3;
  ValueType VT = OtherVT;
  string NAME = ?;
}
def anonymous_384 {	// SDTypeConstraint SDTCisInt
  int OperandNum = 0;
  string NAME = ?;
}
def anonymous_385 {	// SDTypeConstraint SDTCisVT
  int OperandNum = 1;
  ValueType VT = OtherVT;
  string NAME = ?;
}
def anonymous_386 {	// SDTypeConstraint SDTCisPtrTy
  int OperandNum = 0;
  string NAME = ?;
}
def anonymous_387 {	// SDTypeConstraint SDTCisPtrTy
  int OperandNum = 1;
  string NAME = ?;
}
def anonymous_388 {	// SDTypeConstraint SDTCisPtrTy
  int OperandNum = 1;
  string NAME = ?;
}
def anonymous_389 {	// SDTypeConstraint SDTCisSameAs
  int OperandNum = 0;
  int OtherOperandNum = 2;
  string NAME = ?;
}
def anonymous_39 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_390 {	// SDTypeConstraint SDTCisPtrTy
  int OperandNum = 0;
  string NAME = ?;
}
def anonymous_391 {	// SDTypeConstraint SDTCisPtrTy
  int OperandNum = 3;
  string NAME = ?;
}
def anonymous_392 {	// SDTypeConstraint SDTCisPtrTy
  int OperandNum = 0;
  string NAME = ?;
}
def anonymous_393 {	// SDTypeConstraint SDTCisVec
  int OperandNum = 1;
  string NAME = ?;
}
def anonymous_394 {	// SDTypeConstraint SDTCisVec
  int OperandNum = 2;
  string NAME = ?;
}
def anonymous_395 {	// SDTypeConstraint SDTCisVec
  int OperandNum = 0;
  string NAME = ?;
}
def anonymous_396 {	// SDTypeConstraint SDTCisPtrTy
  int OperandNum = 1;
  string NAME = ?;
}
def anonymous_397 {	// SDTypeConstraint SDTCisVec
  int OperandNum = 2;
  string NAME = ?;
}
def anonymous_398 {	// SDTypeConstraint SDTCisSameAs
  int OperandNum = 0;
  int OtherOperandNum = 3;
  string NAME = ?;
}
def anonymous_399 {	// SDTypeConstraint SDTCisVec
  int OperandNum = 0;
  string NAME = ?;
}
def anonymous_4 {	// IntrinsicProperty NoCapture
  int ArgNo = 1;
  string NAME = ?;
}
def anonymous_40 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_400 {	// SDTypeConstraint SDTCisVec
  int OperandNum = 1;
  string NAME = ?;
}
def anonymous_401 {	// SDTypeConstraint SDTCisSameAs
  int OperandNum = 0;
  int OtherOperandNum = 2;
  string NAME = ?;
}
def anonymous_402 {	// SDTypeConstraint SDTCisSameAs
  int OperandNum = 1;
  int OtherOperandNum = 3;
  string NAME = ?;
}
def anonymous_403 {	// SDTypeConstraint SDTCisPtrTy
  int OperandNum = 4;
  string NAME = ?;
}
def anonymous_404 {	// SDTypeConstraint SDTCVecEltisVT
  int OperandNum = 1;
  ValueType VT = i1;
  string NAME = ?;
}
def anonymous_405 {	// SDTypeConstraint SDTCisSameNumEltsAs
  int OperandNum = 0;
  int OtherOperandNum = 1;
  string NAME = ?;
}
def anonymous_406 {	// SDTypeConstraint SDTCisVec
  int OperandNum = 0;
  string NAME = ?;
}
def anonymous_407 {	// SDTypeConstraint SDTCisVec
  int OperandNum = 1;
  string NAME = ?;
}
def anonymous_408 {	// SDTypeConstraint SDTCisSameAs
  int OperandNum = 0;
  int OtherOperandNum = 2;
  string NAME = ?;
}
def anonymous_409 {	// SDTypeConstraint SDTCisSameNumEltsAs
  int OperandNum = 0;
  int OtherOperandNum = 1;
  string NAME = ?;
}
def anonymous_41 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_410 {	// SDTypeConstraint SDTCVecEltisVT
  int OperandNum = 0;
  ValueType VT = i1;
  string NAME = ?;
}
def anonymous_411 {	// SDTypeConstraint SDTCisPtrTy
  int OperandNum = 3;
  string NAME = ?;
}
def anonymous_412 {	// SDTypeConstraint SDTCisSameAs
  int OperandNum = 0;
  int OtherOperandNum = 1;
  string NAME = ?;
}
def anonymous_413 {	// SDTypeConstraint SDTCisSameAs
  int OperandNum = 1;
  int OtherOperandNum = 2;
  string NAME = ?;
}
def anonymous_414 {	// SDTypeConstraint SDTCisEltOfVec
  int OperandNum = 0;
  int OtherOpNum = 1;
  string NAME = ?;
}
def anonymous_415 {	// SDTypeConstraint SDTCisPtrTy
  int OperandNum = 2;
  string NAME = ?;
}
def anonymous_416 {	// SDTypeConstraint SDTCisEltOfVec
  int OperandNum = 2;
  int OtherOpNum = 1;
  string NAME = ?;
}
def anonymous_417 {	// SDTypeConstraint SDTCisSameAs
  int OperandNum = 0;
  int OtherOperandNum = 1;
  string NAME = ?;
}
def anonymous_418 {	// SDTypeConstraint SDTCisPtrTy
  int OperandNum = 3;
  string NAME = ?;
}
def anonymous_419 {	// SDTypeConstraint SDTCisSubVecOfVec
  int OperandNum = 0;
  int OtherOpNum = 1;
  string NAME = ?;
}
def anonymous_42 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_420 {	// SDTypeConstraint SDTCisInt
  int OperandNum = 2;
  string NAME = ?;
}
def anonymous_421 {	// SDTypeConstraint SDTCisSubVecOfVec
  int OperandNum = 2;
  int OtherOpNum = 1;
  string NAME = ?;
}
def anonymous_422 {	// SDTypeConstraint SDTCisSameAs
  int OperandNum = 0;
  int OtherOperandNum = 1;
  string NAME = ?;
}
def anonymous_423 {	// SDTypeConstraint SDTCisInt
  int OperandNum = 3;
  string NAME = ?;
}
def anonymous_424 {	// SDTypeConstraint SDTCisPtrTy
  int OperandNum = 0;
  string NAME = ?;
}
def anonymous_425 {	// SDTypeConstraint SDTCisSameAs
  int OperandNum = 1;
  int OtherOperandNum = 2;
  string NAME = ?;
}
def anonymous_426 {	// SDTypeConstraint SDTCisSameAs
  int OperandNum = 1;
  int OtherOperandNum = 3;
  string NAME = ?;
}
def anonymous_427 {	// SDTypeConstraint SDTCisInt
  int OperandNum = 1;
  string NAME = ?;
}
def anonymous_428 {	// SDTypeConstraint SDTCisSameAs
  int OperandNum = 0;
  int OtherOperandNum = 1;
  string NAME = ?;
}
def anonymous_429 {	// SDTypeConstraint SDTCisSameAs
  int OperandNum = 0;
  int OtherOperandNum = 2;
  string NAME = ?;
}
def anonymous_43 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_430 {	// SDTypeConstraint SDTCisSameAs
  int OperandNum = 0;
  int OtherOperandNum = 3;
  string NAME = ?;
}
def anonymous_431 {	// SDTypeConstraint SDTCisSameAs
  int OperandNum = 0;
  int OtherOperandNum = 4;
  string NAME = ?;
}
def anonymous_432 {	// SDTypeConstraint SDTCisInt
  int OperandNum = 0;
  string NAME = ?;
}
def anonymous_433 {	// SDTypeConstraint SDTCisSameAs
  int OperandNum = 0;
  int OtherOperandNum = 1;
  string NAME = ?;
}
def anonymous_434 {	// SDTypeConstraint SDTCisPtrTy
  int OperandNum = 0;
  string NAME = ?;
}
def anonymous_435 {	// SDTypeConstraint SDTCisSameAs
  int OperandNum = 0;
  int OtherOperandNum = 2;
  string NAME = ?;
}
def anonymous_436 {	// SDTypeConstraint SDTCisSameAs
  int OperandNum = 0;
  int OtherOperandNum = 3;
  string NAME = ?;
}
def anonymous_437 {	// SDTypeConstraint SDTCisInt
  int OperandNum = 0;
  string NAME = ?;
}
def anonymous_438 {	// SDTypeConstraint SDTCisPtrTy
  int OperandNum = 1;
  string NAME = ?;
}
def anonymous_439 {	// SDTypeConstraint SDTCisSameAs
  int OperandNum = 0;
  int OtherOperandNum = 2;
  string NAME = ?;
}
def anonymous_44 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_440 {	// SDTypeConstraint SDTCisInt
  int OperandNum = 0;
  string NAME = ?;
}
def anonymous_441 {	// SDTypeConstraint SDTCisPtrTy
  int OperandNum = 1;
  string NAME = ?;
}
def anonymous_442 {	// SDTypeConstraint SDTCisPtrTy
  int OperandNum = 0;
  string NAME = ?;
}
def anonymous_443 {	// SDTypeConstraint SDTCisInt
  int OperandNum = 1;
  string NAME = ?;
}
def anonymous_444 {	// SDTypeConstraint SDTCisInt
  int OperandNum = 0;
  string NAME = ?;
}
def anonymous_445 {	// SDTypeConstraint SDTCisPtrTy
  int OperandNum = 1;
  string NAME = ?;
}
def anonymous_446 {	// SDTypeConstraint SDTCisVT
  int OperandNum = 2;
  ValueType VT = OtherVT;
  string NAME = ?;
}
def anonymous_447 {	// SDTypeConstraint SDTCisVT
  int OperandNum = 3;
  ValueType VT = OtherVT;
  string NAME = ?;
}
def anonymous_448 {	// SDTypeConstraint SDTCisPtrTy
  int OperandNum = 4;
  string NAME = ?;
}
def anonymous_449 {	// SDTypeConstraint SDTCisPtrTy
  int OperandNum = 5;
  string NAME = ?;
}
def anonymous_45 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_450 {	// SDTypeProfile
  int NumResults = 1;
  int NumOperands = -1;
  list<SDTypeConstraint> Constraints = [];
  string NAME = ?;
}
def anonymous_451 {	// SDTypeProfile
  int NumResults = 1;
  int NumOperands = 1;
  list<SDTypeConstraint> Constraints = [];
  string NAME = ?;
}
def anonymous_452 {	// SDTypeConstraint SDTCisPtrTy
  int OperandNum = 2;
  string NAME = ?;
}
def anonymous_453 {	// SDTypeProfile
  int NumResults = 1;
  int NumOperands = 2;
  list<SDTypeConstraint> Constraints = [anonymous_452];
  string NAME = ?;
}
def anonymous_454 {	// SDTypeConstraint SDTCisSameAs
  int OperandNum = 0;
  int OtherOperandNum = 1;
  string NAME = ?;
}
def anonymous_455 {	// SDTypeConstraint SDTCisPtrTy
  int OperandNum = 3;
  string NAME = ?;
}
def anonymous_456 {	// SDTypeProfile
  int NumResults = 1;
  int NumOperands = 3;
  list<SDTypeConstraint> Constraints = [anonymous_454, anonymous_455];
  string NAME = ?;
}
def anonymous_457 {	// SDTypeConstraint SDTCisSubVecOfVec
  int OperandNum = 1;
  int OtherOpNum = 0;
  string NAME = ?;
}
def anonymous_458 {	// SDTypeConstraint SDTCisSameAs
  int OperandNum = 1;
  int OtherOperandNum = 2;
  string NAME = ?;
}
def anonymous_459 {	// SDTypeProfile
  int NumResults = 1;
  int NumOperands = 2;
  list<SDTypeConstraint> Constraints = [anonymous_457, anonymous_458];
  string NAME = ?;
}
def anonymous_46 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_460 {	// SDTypeConstraint SDTCisInt
  int OperandNum = 2;
  string NAME = ?;
}
def anonymous_461 {	// SDTypeConstraint SDTCisVec
  int OperandNum = 1;
  string NAME = ?;
}
def anonymous_462 {	// SDTypeConstraint SDTCisVec
  int OperandNum = 0;
  string NAME = ?;
}
def anonymous_463 {	// SDTypeProfile
  int NumResults = 1;
  int NumOperands = 2;
  list<SDTypeConstraint> Constraints = [anonymous_460, anonymous_461, anonymous_462];
  string NAME = ?;
}
def anonymous_464 {	// SDTypeConstraint SDTCisPtrTy
  int OperandNum = 0;
  string NAME = ?;
}
def anonymous_465 {	// SDTypeProfile
  int NumResults = 0;
  int NumOperands = -1;
  list<SDTypeConstraint> Constraints = [anonymous_464];
  string NAME = ?;
}
def anonymous_466 {	// SDTypeConstraint SDTCisPtrTy
  int OperandNum = 1;
  string NAME = ?;
}
def anonymous_467 {	// SDTypeProfile
  int NumResults = 1;
  int NumOperands = -1;
  list<SDTypeConstraint> Constraints = [anonymous_466];
  string NAME = ?;
}
def anonymous_468 {	// SDTypeConstraint SDTCisPtrTy
  int OperandNum = 1;
  string NAME = ?;
}
def anonymous_469 {	// SDTypeProfile
  int NumResults = 1;
  int NumOperands = -1;
  list<SDTypeConstraint> Constraints = [anonymous_468];
  string NAME = ?;
}
def anonymous_47 {	// IntrinsicProperty NoCapture
  int ArgNo = 0;
  string NAME = ?;
}
def anonymous_470 {	// SDTypeConstraint SDTCisInt
  int OperandNum = 0;
  string NAME = ?;
}
def anonymous_471 {	// SDTypeConstraint SDTCisInt
  int OperandNum = 1;
  string NAME = ?;
}
def anonymous_472 {	// SDTypeConstraint SDTCisSameAs
  int OperandNum = 1;
  int OtherOperandNum = 0;
  string NAME = ?;
}
def anonymous_473 {	// SDTypeConstraint SDTCisSameAs
  int OperandNum = 0;
  int OtherOperandNum = 1;
  string NAME = ?;
}
def anonymous_474 {	// SDTypeConstraint SDTCisInt
  int OperandNum = 0;
  string NAME = ?;
}
def anonymous_475 {	// SDTypeConstraint SDTCisVT
  int OperandNum = 0;
  ValueType VT = i32;
  string NAME = ?;
}
def anonymous_476 {	// SDTypeConstraint SDTCisVT
  int OperandNum = 0;
  ValueType VT = i32;
  string NAME = ?;
}
def anonymous_477 {	// SDTypeConstraint SDTCisVT
  int OperandNum = 1;
  ValueType VT = i32;
  string NAME = ?;
}
def anonymous_478 {	// SDTypeConstraint SDTCisPtrTy
  int OperandNum = 0;
  string NAME = ?;
}
def anonymous_479 {	// SDTypeConstraint SDTCisSameAs
  int OperandNum = 0;
  int OtherOperandNum = 1;
  string NAME = ?;
}
def anonymous_48 {	// IntrinsicProperty NoCapture
  int ArgNo = 1;
  string NAME = ?;
}
def anonymous_480 {	// SDTypeConstraint SDTCisVT
  int OperandNum = 0;
  ValueType VT = i32;
  string NAME = ?;
}
def anonymous_481 {	// SDTypeConstraint SDTCisVT
  int OperandNum = 1;
  ValueType VT = OtherVT;
  string NAME = ?;
}
def anonymous_482 {	// SDTypeConstraint SDTCisInt
  int OperandNum = 2;
  string NAME = ?;
}
def anonymous_483 {	// SDTypeConstraint SDTCisVT
  int OperandNum = 0;
  ValueType VT = i32;
  string NAME = ?;
}
def anonymous_484 {	// SDTypeConstraint SDTCisVT
  int OperandNum = 1;
  ValueType VT = OtherVT;
  string NAME = ?;
}
def anonymous_485 {	// SDTypeConstraint SDTCisInt
  int OperandNum = 2;
  string NAME = ?;
}
def anonymous_486 {	// SDTypeConstraint SDTCisInt
  int OperandNum = 3;
  string NAME = ?;
}
def anonymous_487 {	// CCAction CCAssignToStack
  int Size = 4;
  int Align = 4;
  string NAME = ?;
}
def anonymous_488 {	// CCAction CCPromoteToType
  ValueType DestTy = i32;
  string NAME = ?;
}
def anonymous_489 {	// CCAction CCPredicateAction CCIfType
  CCAction SubAction = anonymous_488;
  list<ValueType> VTs = [i8, i16];
  string NAME = ?;
}
def anonymous_49 {	// LLVMType LLVMAnyPointerType
  ValueType VT = iPTRAny;
  LLVMType ElTy = llvm_anyint_ty;
  string NAME = ?;
}
def anonymous_490 {	// CCAction CCAssignToReg
  list<Register> RegList = [D2];
  string NAME = ?;
}
def anonymous_491 {	// CCAction CCPredicateAction CCIfType
  CCAction SubAction = anonymous_490;
  list<ValueType> VTs = [i32];
  string NAME = ?;
}
def anonymous_492 {	// CCAction CCAssignToStack
  int Size = 4;
  int Align = 4;
  string NAME = ?;
}
def anonymous_493 {	// CCAction CCPredicateAction CCIfType
  CCAction SubAction = anonymous_492;
  list<ValueType> VTs = [i32];
  string NAME = ?;
}
def anonymous_494 {	// CCAction CCPromoteToType
  ValueType DestTy = i32;
  string NAME = ?;
}
def anonymous_495 {	// CCAction CCPredicateAction CCIfType
  CCAction SubAction = anonymous_494;
  list<ValueType> VTs = [i8, i16];
  string NAME = ?;
}
def anonymous_496 {	// CCAction CCAssignToReg
  list<Register> RegList = [A4, A5, A6, A7];
  string NAME = ?;
}
def anonymous_497 {	// CCAction CCPredicateAction CCIfType
  CCAction SubAction = anonymous_496;
  list<ValueType> VTs = [i32];
  string NAME = ?;
}
def anonymous_498 {	// CCAction CCDelegateTo
  CallingConv CC = CC_TriCore_StackModel;
  string NAME = ?;
}
def anonymous_499 {	// Processor Proc
  string Name = "generic";
  SchedMachineModel SchedModel = NoSchedModel;
  ProcessorItineraries ProcItin = NoItineraries;
  list<SubtargetFeature> Features = [];
  string NAME = ?;
}
def anonymous_5 {	// IntrinsicProperty ReadOnly
  int ArgNo = 1;
  string NAME = ?;
}
def anonymous_50 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_51 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_52 {	// IntrinsicProperty NoCapture
  int ArgNo = 0;
  string NAME = ?;
}
def anonymous_53 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_54 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_55 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_56 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_57 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_58 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_59 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_6 {	// IntrinsicProperty NoCapture
  int ArgNo = 0;
  string NAME = ?;
}
def anonymous_60 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_61 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_62 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_63 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_64 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_65 {	// IntrinsicProperty NoCapture
  int ArgNo = 1;
  string NAME = ?;
}
def anonymous_66 {	// IntrinsicProperty NoCapture
  int ArgNo = 1;
  string NAME = ?;
}
def anonymous_67 {	// IntrinsicProperty NoCapture
  int ArgNo = 1;
  string NAME = ?;
}
def anonymous_68 {	// IntrinsicProperty NoCapture
  int ArgNo = 2;
  string NAME = ?;
}
def anonymous_69 {	// LLVMType LLVMMatchType LLVMPointerTo
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_7 {	// IntrinsicProperty NoCapture
  int ArgNo = 1;
  string NAME = ?;
}
def anonymous_70 {	// LLVMType LLVMMatchType LLVMVectorSameWidth
  ValueType VT = OtherVT;
  int Number = 0;
  ValueType ElTy = i1;
  string NAME = ?;
}
def anonymous_71 {	// LLVMType LLVMMatchType LLVMPointerTo
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_72 {	// LLVMType LLVMMatchType LLVMVectorSameWidth
  ValueType VT = OtherVT;
  int Number = 0;
  ValueType ElTy = i1;
  string NAME = ?;
}
def anonymous_73 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_74 {	// LLVMType LLVMMatchType LLVMVectorOfPointersToElt
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_75 {	// LLVMType LLVMMatchType LLVMVectorSameWidth
  ValueType VT = OtherVT;
  int Number = 0;
  ValueType ElTy = i1;
  string NAME = ?;
}
def anonymous_76 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_77 {	// LLVMType LLVMMatchType LLVMVectorOfPointersToElt
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_78 {	// LLVMType LLVMMatchType LLVMVectorSameWidth
  ValueType VT = OtherVT;
  int Number = 0;
  ValueType ElTy = i1;
  string NAME = ?;
}
def anonymous_79 {	// IntrinsicProperty NoCapture
  int ArgNo = 0;
  string NAME = ?;
}
def anonymous_8 {	// IntrinsicProperty ReadOnly
  int ArgNo = 1;
  string NAME = ?;
}
def anonymous_80 {	// IntrinsicProperty NoCapture
  int ArgNo = 0;
  string NAME = ?;
}
def anonymous_81 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_82 {	// LLVMType LLVMMatchType LLVMExtendedType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_83 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_84 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_85 {	// LLVMType LLVMMatchType LLVMExtendedType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_86 {	// LLVMType LLVMMatchType LLVMExtendedType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_87 {	// LLVMType LLVMMatchType LLVMTruncatedType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_88 {	// LLVMType LLVMMatchType LLVMTruncatedType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_89 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_9 {	// IntrinsicProperty NoCapture
  int ArgNo = 0;
  string NAME = ?;
}
def anonymous_90 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_91 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_92 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_93 {	// LLVMType LLVMMatchType LLVMTruncatedType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_94 {	// LLVMType LLVMMatchType LLVMTruncatedType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_95 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 1;
  string NAME = ?;
}
def anonymous_96 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_97 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_98 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anonymous_99 {	// LLVMType LLVMMatchType
  ValueType VT = OtherVT;
  int Number = 0;
  string NAME = ?;
}
def anyext {	// SDPatternOperator SDNode
  list<SDNodeProperty> SDNode:props = [];
  string SDNode:sdclass = "SDNode";
  string Opcode = "ISD::ANY_EXTEND";
  string SDClass = "SDNode";
  list<SDNodeProperty> Properties = [];
  SDTypeProfile TypeProfile = SDTIntExtendOp;
  string NAME = ?;
}
def assertsext {	// SDPatternOperator SDNode
  list<SDNodeProperty> SDNode:props = [];
  string SDNode:sdclass = "SDNode";
  string Opcode = "ISD::AssertSext";
  string SDClass = "SDNode";
  list<SDNodeProperty> Properties = [];
  SDTypeProfile TypeProfile = SDT_assertext;
  string NAME = ?;
}
def assertzext {	// SDPatternOperator SDNode
  list<SDNodeProperty> SDNode:props = [];
  string SDNode:sdclass = "SDNode";
  string Opcode = "ISD::AssertZext";
  string SDClass = "SDNode";
  list<SDNodeProperty> Properties = [];
  SDTypeProfile TypeProfile = SDT_assertext;
  string NAME = ?;
}
def atomic_cmp_swap {	// SDPatternOperator SDNode
  string SDNode:sdclass = "SDNode";
  string Opcode = "ISD::ATOMIC_CMP_SWAP";
  string SDClass = "SDNode";
  list<SDNodeProperty> Properties = [SDNPHasChain, SDNPMayStore, SDNPMayLoad, SDNPMemOperand];
  SDTypeProfile TypeProfile = SDTAtomic3;
  string NAME = ?;
}
def atomic_cmp_swap_16 {	// SDPatternOperator PatFrag
  SDNodeXForm PatFrag:xform = NOOP_SDNodeXForm;
  dag Operands = (ops node:$ptr, node:$cmp, node:$swap);
  dag Fragment = (atomic_cmp_swap node:$ptr, node:$cmp, node:$swap);
  string PredicateCode = "
  return cast<AtomicSDNode>(N)->getMemoryVT() == MVT::i16;
";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = ?;
}
def atomic_cmp_swap_32 {	// SDPatternOperator PatFrag
  SDNodeXForm PatFrag:xform = NOOP_SDNodeXForm;
  dag Operands = (ops node:$ptr, node:$cmp, node:$swap);
  dag Fragment = (atomic_cmp_swap node:$ptr, node:$cmp, node:$swap);
  string PredicateCode = "
  return cast<AtomicSDNode>(N)->getMemoryVT() == MVT::i32;
";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = ?;
}
def atomic_cmp_swap_64 {	// SDPatternOperator PatFrag
  SDNodeXForm PatFrag:xform = NOOP_SDNodeXForm;
  dag Operands = (ops node:$ptr, node:$cmp, node:$swap);
  dag Fragment = (atomic_cmp_swap node:$ptr, node:$cmp, node:$swap);
  string PredicateCode = "
  return cast<AtomicSDNode>(N)->getMemoryVT() == MVT::i64;
";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = ?;
}
def atomic_cmp_swap_8 {	// SDPatternOperator PatFrag
  SDNodeXForm PatFrag:xform = NOOP_SDNodeXForm;
  dag Operands = (ops node:$ptr, node:$cmp, node:$swap);
  dag Fragment = (atomic_cmp_swap node:$ptr, node:$cmp, node:$swap);
  string PredicateCode = "
  return cast<AtomicSDNode>(N)->getMemoryVT() == MVT::i8;
";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = ?;
}
def atomic_fence {	// SDPatternOperator SDNode
  string SDNode:sdclass = "SDNode";
  string Opcode = "ISD::ATOMIC_FENCE";
  string SDClass = "SDNode";
  list<SDNodeProperty> Properties = [SDNPHasChain, SDNPSideEffect];
  SDTypeProfile TypeProfile = SDTAtomicFence;
  string NAME = ?;
}
def atomic_load {	// SDPatternOperator SDNode
  string SDNode:sdclass = "SDNode";
  string Opcode = "ISD::ATOMIC_LOAD";
  string SDClass = "SDNode";
  list<SDNodeProperty> Properties = [SDNPHasChain, SDNPMayLoad, SDNPMemOperand];
  SDTypeProfile TypeProfile = SDTAtomicLoad;
  string NAME = ?;
}
def atomic_load_16 {	// SDPatternOperator PatFrag
  SDNodeXForm PatFrag:xform = NOOP_SDNodeXForm;
  dag Operands = (ops node:$ptr);
  dag Fragment = (atomic_load node:$ptr);
  string PredicateCode = "
  return cast<AtomicSDNode>(N)->getMemoryVT() == MVT::i16;
";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = ?;
}
def atomic_load_32 {	// SDPatternOperator PatFrag
  SDNodeXForm PatFrag:xform = NOOP_SDNodeXForm;
  dag Operands = (ops node:$ptr);
  dag Fragment = (atomic_load node:$ptr);
  string PredicateCode = "
  return cast<AtomicSDNode>(N)->getMemoryVT() == MVT::i32;
";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = ?;
}
def atomic_load_64 {	// SDPatternOperator PatFrag
  SDNodeXForm PatFrag:xform = NOOP_SDNodeXForm;
  dag Operands = (ops node:$ptr);
  dag Fragment = (atomic_load node:$ptr);
  string PredicateCode = "
  return cast<AtomicSDNode>(N)->getMemoryVT() == MVT::i64;
";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = ?;
}
def atomic_load_8 {	// SDPatternOperator PatFrag
  SDNodeXForm PatFrag:xform = NOOP_SDNodeXForm;
  dag Operands = (ops node:$ptr);
  dag Fragment = (atomic_load node:$ptr);
  string PredicateCode = "
  return cast<AtomicSDNode>(N)->getMemoryVT() == MVT::i8;
";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = ?;
}
def atomic_load_add {	// SDPatternOperator SDNode
  string SDNode:sdclass = "SDNode";
  string Opcode = "ISD::ATOMIC_LOAD_ADD";
  string SDClass = "SDNode";
  list<SDNodeProperty> Properties = [SDNPHasChain, SDNPMayStore, SDNPMayLoad, SDNPMemOperand];
  SDTypeProfile TypeProfile = SDTAtomic2;
  string NAME = ?;
}
def atomic_load_add_16 {	// SDPatternOperator PatFrag _16
  SDNodeXForm PatFrag:xform = NOOP_SDNodeXForm;
  dag Operands = (ops node:$ptr, node:$val);
  dag Fragment = (atomic_load_add node:$ptr, node:$val);
  string PredicateCode = "
    return cast<AtomicSDNode>(N)->getMemoryVT() == MVT::i16;
  ";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = "atomic_load_add";
}
def atomic_load_add_32 {	// SDPatternOperator PatFrag _32
  SDNodeXForm PatFrag:xform = NOOP_SDNodeXForm;
  dag Operands = (ops node:$ptr, node:$val);
  dag Fragment = (atomic_load_add node:$ptr, node:$val);
  string PredicateCode = "
    return cast<AtomicSDNode>(N)->getMemoryVT() == MVT::i32;
  ";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = "atomic_load_add";
}
def atomic_load_add_64 {	// SDPatternOperator PatFrag _64
  SDNodeXForm PatFrag:xform = NOOP_SDNodeXForm;
  dag Operands = (ops node:$ptr, node:$val);
  dag Fragment = (atomic_load_add node:$ptr, node:$val);
  string PredicateCode = "
    return cast<AtomicSDNode>(N)->getMemoryVT() == MVT::i64;
  ";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = "atomic_load_add";
}
def atomic_load_add_8 {	// SDPatternOperator PatFrag _8
  SDNodeXForm PatFrag:xform = NOOP_SDNodeXForm;
  dag Operands = (ops node:$ptr, node:$val);
  dag Fragment = (atomic_load_add node:$ptr, node:$val);
  string PredicateCode = "
    return cast<AtomicSDNode>(N)->getMemoryVT() == MVT::i8;
  ";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = "atomic_load_add";
}
def atomic_load_and {	// SDPatternOperator SDNode
  string SDNode:sdclass = "SDNode";
  string Opcode = "ISD::ATOMIC_LOAD_AND";
  string SDClass = "SDNode";
  list<SDNodeProperty> Properties = [SDNPHasChain, SDNPMayStore, SDNPMayLoad, SDNPMemOperand];
  SDTypeProfile TypeProfile = SDTAtomic2;
  string NAME = ?;
}
def atomic_load_and_16 {	// SDPatternOperator PatFrag _16
  SDNodeXForm PatFrag:xform = NOOP_SDNodeXForm;
  dag Operands = (ops node:$ptr, node:$val);
  dag Fragment = (atomic_load_and node:$ptr, node:$val);
  string PredicateCode = "
    return cast<AtomicSDNode>(N)->getMemoryVT() == MVT::i16;
  ";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = "atomic_load_and";
}
def atomic_load_and_32 {	// SDPatternOperator PatFrag _32
  SDNodeXForm PatFrag:xform = NOOP_SDNodeXForm;
  dag Operands = (ops node:$ptr, node:$val);
  dag Fragment = (atomic_load_and node:$ptr, node:$val);
  string PredicateCode = "
    return cast<AtomicSDNode>(N)->getMemoryVT() == MVT::i32;
  ";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = "atomic_load_and";
}
def atomic_load_and_64 {	// SDPatternOperator PatFrag _64
  SDNodeXForm PatFrag:xform = NOOP_SDNodeXForm;
  dag Operands = (ops node:$ptr, node:$val);
  dag Fragment = (atomic_load_and node:$ptr, node:$val);
  string PredicateCode = "
    return cast<AtomicSDNode>(N)->getMemoryVT() == MVT::i64;
  ";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = "atomic_load_and";
}
def atomic_load_and_8 {	// SDPatternOperator PatFrag _8
  SDNodeXForm PatFrag:xform = NOOP_SDNodeXForm;
  dag Operands = (ops node:$ptr, node:$val);
  dag Fragment = (atomic_load_and node:$ptr, node:$val);
  string PredicateCode = "
    return cast<AtomicSDNode>(N)->getMemoryVT() == MVT::i8;
  ";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = "atomic_load_and";
}
def atomic_load_max {	// SDPatternOperator SDNode
  string SDNode:sdclass = "SDNode";
  string Opcode = "ISD::ATOMIC_LOAD_MAX";
  string SDClass = "SDNode";
  list<SDNodeProperty> Properties = [SDNPHasChain, SDNPMayStore, SDNPMayLoad, SDNPMemOperand];
  SDTypeProfile TypeProfile = SDTAtomic2;
  string NAME = ?;
}
def atomic_load_max_16 {	// SDPatternOperator PatFrag _16
  SDNodeXForm PatFrag:xform = NOOP_SDNodeXForm;
  dag Operands = (ops node:$ptr, node:$val);
  dag Fragment = (atomic_load_max node:$ptr, node:$val);
  string PredicateCode = "
    return cast<AtomicSDNode>(N)->getMemoryVT() == MVT::i16;
  ";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = "atomic_load_max";
}
def atomic_load_max_32 {	// SDPatternOperator PatFrag _32
  SDNodeXForm PatFrag:xform = NOOP_SDNodeXForm;
  dag Operands = (ops node:$ptr, node:$val);
  dag Fragment = (atomic_load_max node:$ptr, node:$val);
  string PredicateCode = "
    return cast<AtomicSDNode>(N)->getMemoryVT() == MVT::i32;
  ";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = "atomic_load_max";
}
def atomic_load_max_64 {	// SDPatternOperator PatFrag _64
  SDNodeXForm PatFrag:xform = NOOP_SDNodeXForm;
  dag Operands = (ops node:$ptr, node:$val);
  dag Fragment = (atomic_load_max node:$ptr, node:$val);
  string PredicateCode = "
    return cast<AtomicSDNode>(N)->getMemoryVT() == MVT::i64;
  ";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = "atomic_load_max";
}
def atomic_load_max_8 {	// SDPatternOperator PatFrag _8
  SDNodeXForm PatFrag:xform = NOOP_SDNodeXForm;
  dag Operands = (ops node:$ptr, node:$val);
  dag Fragment = (atomic_load_max node:$ptr, node:$val);
  string PredicateCode = "
    return cast<AtomicSDNode>(N)->getMemoryVT() == MVT::i8;
  ";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = "atomic_load_max";
}
def atomic_load_min {	// SDPatternOperator SDNode
  string SDNode:sdclass = "SDNode";
  string Opcode = "ISD::ATOMIC_LOAD_MIN";
  string SDClass = "SDNode";
  list<SDNodeProperty> Properties = [SDNPHasChain, SDNPMayStore, SDNPMayLoad, SDNPMemOperand];
  SDTypeProfile TypeProfile = SDTAtomic2;
  string NAME = ?;
}
def atomic_load_min_16 {	// SDPatternOperator PatFrag _16
  SDNodeXForm PatFrag:xform = NOOP_SDNodeXForm;
  dag Operands = (ops node:$ptr, node:$val);
  dag Fragment = (atomic_load_min node:$ptr, node:$val);
  string PredicateCode = "
    return cast<AtomicSDNode>(N)->getMemoryVT() == MVT::i16;
  ";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = "atomic_load_min";
}
def atomic_load_min_32 {	// SDPatternOperator PatFrag _32
  SDNodeXForm PatFrag:xform = NOOP_SDNodeXForm;
  dag Operands = (ops node:$ptr, node:$val);
  dag Fragment = (atomic_load_min node:$ptr, node:$val);
  string PredicateCode = "
    return cast<AtomicSDNode>(N)->getMemoryVT() == MVT::i32;
  ";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = "atomic_load_min";
}
def atomic_load_min_64 {	// SDPatternOperator PatFrag _64
  SDNodeXForm PatFrag:xform = NOOP_SDNodeXForm;
  dag Operands = (ops node:$ptr, node:$val);
  dag Fragment = (atomic_load_min node:$ptr, node:$val);
  string PredicateCode = "
    return cast<AtomicSDNode>(N)->getMemoryVT() == MVT::i64;
  ";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = "atomic_load_min";
}
def atomic_load_min_8 {	// SDPatternOperator PatFrag _8
  SDNodeXForm PatFrag:xform = NOOP_SDNodeXForm;
  dag Operands = (ops node:$ptr, node:$val);
  dag Fragment = (atomic_load_min node:$ptr, node:$val);
  string PredicateCode = "
    return cast<AtomicSDNode>(N)->getMemoryVT() == MVT::i8;
  ";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = "atomic_load_min";
}
def atomic_load_nand {	// SDPatternOperator SDNode
  string SDNode:sdclass = "SDNode";
  string Opcode = "ISD::ATOMIC_LOAD_NAND";
  string SDClass = "SDNode";
  list<SDNodeProperty> Properties = [SDNPHasChain, SDNPMayStore, SDNPMayLoad, SDNPMemOperand];
  SDTypeProfile TypeProfile = SDTAtomic2;
  string NAME = ?;
}
def atomic_load_nand_16 {	// SDPatternOperator PatFrag _16
  SDNodeXForm PatFrag:xform = NOOP_SDNodeXForm;
  dag Operands = (ops node:$ptr, node:$val);
  dag Fragment = (atomic_load_nand node:$ptr, node:$val);
  string PredicateCode = "
    return cast<AtomicSDNode>(N)->getMemoryVT() == MVT::i16;
  ";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = "atomic_load_nand";
}
def atomic_load_nand_32 {	// SDPatternOperator PatFrag _32
  SDNodeXForm PatFrag:xform = NOOP_SDNodeXForm;
  dag Operands = (ops node:$ptr, node:$val);
  dag Fragment = (atomic_load_nand node:$ptr, node:$val);
  string PredicateCode = "
    return cast<AtomicSDNode>(N)->getMemoryVT() == MVT::i32;
  ";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = "atomic_load_nand";
}
def atomic_load_nand_64 {	// SDPatternOperator PatFrag _64
  SDNodeXForm PatFrag:xform = NOOP_SDNodeXForm;
  dag Operands = (ops node:$ptr, node:$val);
  dag Fragment = (atomic_load_nand node:$ptr, node:$val);
  string PredicateCode = "
    return cast<AtomicSDNode>(N)->getMemoryVT() == MVT::i64;
  ";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = "atomic_load_nand";
}
def atomic_load_nand_8 {	// SDPatternOperator PatFrag _8
  SDNodeXForm PatFrag:xform = NOOP_SDNodeXForm;
  dag Operands = (ops node:$ptr, node:$val);
  dag Fragment = (atomic_load_nand node:$ptr, node:$val);
  string PredicateCode = "
    return cast<AtomicSDNode>(N)->getMemoryVT() == MVT::i8;
  ";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = "atomic_load_nand";
}
def atomic_load_or {	// SDPatternOperator SDNode
  string SDNode:sdclass = "SDNode";
  string Opcode = "ISD::ATOMIC_LOAD_OR";
  string SDClass = "SDNode";
  list<SDNodeProperty> Properties = [SDNPHasChain, SDNPMayStore, SDNPMayLoad, SDNPMemOperand];
  SDTypeProfile TypeProfile = SDTAtomic2;
  string NAME = ?;
}
def atomic_load_or_16 {	// SDPatternOperator PatFrag _16
  SDNodeXForm PatFrag:xform = NOOP_SDNodeXForm;
  dag Operands = (ops node:$ptr, node:$val);
  dag Fragment = (atomic_load_or node:$ptr, node:$val);
  string PredicateCode = "
    return cast<AtomicSDNode>(N)->getMemoryVT() == MVT::i16;
  ";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = "atomic_load_or";
}
def atomic_load_or_32 {	// SDPatternOperator PatFrag _32
  SDNodeXForm PatFrag:xform = NOOP_SDNodeXForm;
  dag Operands = (ops node:$ptr, node:$val);
  dag Fragment = (atomic_load_or node:$ptr, node:$val);
  string PredicateCode = "
    return cast<AtomicSDNode>(N)->getMemoryVT() == MVT::i32;
  ";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = "atomic_load_or";
}
def atomic_load_or_64 {	// SDPatternOperator PatFrag _64
  SDNodeXForm PatFrag:xform = NOOP_SDNodeXForm;
  dag Operands = (ops node:$ptr, node:$val);
  dag Fragment = (atomic_load_or node:$ptr, node:$val);
  string PredicateCode = "
    return cast<AtomicSDNode>(N)->getMemoryVT() == MVT::i64;
  ";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = "atomic_load_or";
}
def atomic_load_or_8 {	// SDPatternOperator PatFrag _8
  SDNodeXForm PatFrag:xform = NOOP_SDNodeXForm;
  dag Operands = (ops node:$ptr, node:$val);
  dag Fragment = (atomic_load_or node:$ptr, node:$val);
  string PredicateCode = "
    return cast<AtomicSDNode>(N)->getMemoryVT() == MVT::i8;
  ";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = "atomic_load_or";
}
def atomic_load_sub {	// SDPatternOperator SDNode
  string SDNode:sdclass = "SDNode";
  string Opcode = "ISD::ATOMIC_LOAD_SUB";
  string SDClass = "SDNode";
  list<SDNodeProperty> Properties = [SDNPHasChain, SDNPMayStore, SDNPMayLoad, SDNPMemOperand];
  SDTypeProfile TypeProfile = SDTAtomic2;
  string NAME = ?;
}
def atomic_load_sub_16 {	// SDPatternOperator PatFrag _16
  SDNodeXForm PatFrag:xform = NOOP_SDNodeXForm;
  dag Operands = (ops node:$ptr, node:$val);
  dag Fragment = (atomic_load_sub node:$ptr, node:$val);
  string PredicateCode = "
    return cast<AtomicSDNode>(N)->getMemoryVT() == MVT::i16;
  ";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = "atomic_load_sub";
}
def atomic_load_sub_32 {	// SDPatternOperator PatFrag _32
  SDNodeXForm PatFrag:xform = NOOP_SDNodeXForm;
  dag Operands = (ops node:$ptr, node:$val);
  dag Fragment = (atomic_load_sub node:$ptr, node:$val);
  string PredicateCode = "
    return cast<AtomicSDNode>(N)->getMemoryVT() == MVT::i32;
  ";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = "atomic_load_sub";
}
def atomic_load_sub_64 {	// SDPatternOperator PatFrag _64
  SDNodeXForm PatFrag:xform = NOOP_SDNodeXForm;
  dag Operands = (ops node:$ptr, node:$val);
  dag Fragment = (atomic_load_sub node:$ptr, node:$val);
  string PredicateCode = "
    return cast<AtomicSDNode>(N)->getMemoryVT() == MVT::i64;
  ";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = "atomic_load_sub";
}
def atomic_load_sub_8 {	// SDPatternOperator PatFrag _8
  SDNodeXForm PatFrag:xform = NOOP_SDNodeXForm;
  dag Operands = (ops node:$ptr, node:$val);
  dag Fragment = (atomic_load_sub node:$ptr, node:$val);
  string PredicateCode = "
    return cast<AtomicSDNode>(N)->getMemoryVT() == MVT::i8;
  ";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = "atomic_load_sub";
}
def atomic_load_umax {	// SDPatternOperator SDNode
  string SDNode:sdclass = "SDNode";
  string Opcode = "ISD::ATOMIC_LOAD_UMAX";
  string SDClass = "SDNode";
  list<SDNodeProperty> Properties = [SDNPHasChain, SDNPMayStore, SDNPMayLoad, SDNPMemOperand];
  SDTypeProfile TypeProfile = SDTAtomic2;
  string NAME = ?;
}
def atomic_load_umax_16 {	// SDPatternOperator PatFrag _16
  SDNodeXForm PatFrag:xform = NOOP_SDNodeXForm;
  dag Operands = (ops node:$ptr, node:$val);
  dag Fragment = (atomic_load_umax node:$ptr, node:$val);
  string PredicateCode = "
    return cast<AtomicSDNode>(N)->getMemoryVT() == MVT::i16;
  ";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = "atomic_load_umax";
}
def atomic_load_umax_32 {	// SDPatternOperator PatFrag _32
  SDNodeXForm PatFrag:xform = NOOP_SDNodeXForm;
  dag Operands = (ops node:$ptr, node:$val);
  dag Fragment = (atomic_load_umax node:$ptr, node:$val);
  string PredicateCode = "
    return cast<AtomicSDNode>(N)->getMemoryVT() == MVT::i32;
  ";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = "atomic_load_umax";
}
def atomic_load_umax_64 {	// SDPatternOperator PatFrag _64
  SDNodeXForm PatFrag:xform = NOOP_SDNodeXForm;
  dag Operands = (ops node:$ptr, node:$val);
  dag Fragment = (atomic_load_umax node:$ptr, node:$val);
  string PredicateCode = "
    return cast<AtomicSDNode>(N)->getMemoryVT() == MVT::i64;
  ";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = "atomic_load_umax";
}
def atomic_load_umax_8 {	// SDPatternOperator PatFrag _8
  SDNodeXForm PatFrag:xform = NOOP_SDNodeXForm;
  dag Operands = (ops node:$ptr, node:$val);
  dag Fragment = (atomic_load_umax node:$ptr, node:$val);
  string PredicateCode = "
    return cast<AtomicSDNode>(N)->getMemoryVT() == MVT::i8;
  ";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = "atomic_load_umax";
}
def atomic_load_umin {	// SDPatternOperator SDNode
  string SDNode:sdclass = "SDNode";
  string Opcode = "ISD::ATOMIC_LOAD_UMIN";
  string SDClass = "SDNode";
  list<SDNodeProperty> Properties = [SDNPHasChain, SDNPMayStore, SDNPMayLoad, SDNPMemOperand];
  SDTypeProfile TypeProfile = SDTAtomic2;
  string NAME = ?;
}
def atomic_load_umin_16 {	// SDPatternOperator PatFrag _16
  SDNodeXForm PatFrag:xform = NOOP_SDNodeXForm;
  dag Operands = (ops node:$ptr, node:$val);
  dag Fragment = (atomic_load_umin node:$ptr, node:$val);
  string PredicateCode = "
    return cast<AtomicSDNode>(N)->getMemoryVT() == MVT::i16;
  ";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = "atomic_load_umin";
}
def atomic_load_umin_32 {	// SDPatternOperator PatFrag _32
  SDNodeXForm PatFrag:xform = NOOP_SDNodeXForm;
  dag Operands = (ops node:$ptr, node:$val);
  dag Fragment = (atomic_load_umin node:$ptr, node:$val);
  string PredicateCode = "
    return cast<AtomicSDNode>(N)->getMemoryVT() == MVT::i32;
  ";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = "atomic_load_umin";
}
def atomic_load_umin_64 {	// SDPatternOperator PatFrag _64
  SDNodeXForm PatFrag:xform = NOOP_SDNodeXForm;
  dag Operands = (ops node:$ptr, node:$val);
  dag Fragment = (atomic_load_umin node:$ptr, node:$val);
  string PredicateCode = "
    return cast<AtomicSDNode>(N)->getMemoryVT() == MVT::i64;
  ";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = "atomic_load_umin";
}
def atomic_load_umin_8 {	// SDPatternOperator PatFrag _8
  SDNodeXForm PatFrag:xform = NOOP_SDNodeXForm;
  dag Operands = (ops node:$ptr, node:$val);
  dag Fragment = (atomic_load_umin node:$ptr, node:$val);
  string PredicateCode = "
    return cast<AtomicSDNode>(N)->getMemoryVT() == MVT::i8;
  ";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = "atomic_load_umin";
}
def atomic_load_xor {	// SDPatternOperator SDNode
  string SDNode:sdclass = "SDNode";
  string Opcode = "ISD::ATOMIC_LOAD_XOR";
  string SDClass = "SDNode";
  list<SDNodeProperty> Properties = [SDNPHasChain, SDNPMayStore, SDNPMayLoad, SDNPMemOperand];
  SDTypeProfile TypeProfile = SDTAtomic2;
  string NAME = ?;
}
def atomic_load_xor_16 {	// SDPatternOperator PatFrag _16
  SDNodeXForm PatFrag:xform = NOOP_SDNodeXForm;
  dag Operands = (ops node:$ptr, node:$val);
  dag Fragment = (atomic_load_xor node:$ptr, node:$val);
  string PredicateCode = "
    return cast<AtomicSDNode>(N)->getMemoryVT() == MVT::i16;
  ";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = "atomic_load_xor";
}
def atomic_load_xor_32 {	// SDPatternOperator PatFrag _32
  SDNodeXForm PatFrag:xform = NOOP_SDNodeXForm;
  dag Operands = (ops node:$ptr, node:$val);
  dag Fragment = (atomic_load_xor node:$ptr, node:$val);
  string PredicateCode = "
    return cast<AtomicSDNode>(N)->getMemoryVT() == MVT::i32;
  ";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = "atomic_load_xor";
}
def atomic_load_xor_64 {	// SDPatternOperator PatFrag _64
  SDNodeXForm PatFrag:xform = NOOP_SDNodeXForm;
  dag Operands = (ops node:$ptr, node:$val);
  dag Fragment = (atomic_load_xor node:$ptr, node:$val);
  string PredicateCode = "
    return cast<AtomicSDNode>(N)->getMemoryVT() == MVT::i64;
  ";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = "atomic_load_xor";
}
def atomic_load_xor_8 {	// SDPatternOperator PatFrag _8
  SDNodeXForm PatFrag:xform = NOOP_SDNodeXForm;
  dag Operands = (ops node:$ptr, node:$val);
  dag Fragment = (atomic_load_xor node:$ptr, node:$val);
  string PredicateCode = "
    return cast<AtomicSDNode>(N)->getMemoryVT() == MVT::i8;
  ";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = "atomic_load_xor";
}
def atomic_store {	// SDPatternOperator SDNode
  string SDNode:sdclass = "SDNode";
  string Opcode = "ISD::ATOMIC_STORE";
  string SDClass = "SDNode";
  list<SDNodeProperty> Properties = [SDNPHasChain, SDNPMayStore, SDNPMemOperand];
  SDTypeProfile TypeProfile = SDTAtomicStore;
  string NAME = ?;
}
def atomic_store_16 {	// SDPatternOperator PatFrag _16
  SDNodeXForm PatFrag:xform = NOOP_SDNodeXForm;
  dag Operands = (ops node:$ptr, node:$val);
  dag Fragment = (atomic_store node:$ptr, node:$val);
  string PredicateCode = "
    return cast<AtomicSDNode>(N)->getMemoryVT() == MVT::i16;
  ";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = "atomic_store";
}
def atomic_store_32 {	// SDPatternOperator PatFrag _32
  SDNodeXForm PatFrag:xform = NOOP_SDNodeXForm;
  dag Operands = (ops node:$ptr, node:$val);
  dag Fragment = (atomic_store node:$ptr, node:$val);
  string PredicateCode = "
    return cast<AtomicSDNode>(N)->getMemoryVT() == MVT::i32;
  ";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = "atomic_store";
}
def atomic_store_64 {	// SDPatternOperator PatFrag _64
  SDNodeXForm PatFrag:xform = NOOP_SDNodeXForm;
  dag Operands = (ops node:$ptr, node:$val);
  dag Fragment = (atomic_store node:$ptr, node:$val);
  string PredicateCode = "
    return cast<AtomicSDNode>(N)->getMemoryVT() == MVT::i64;
  ";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = "atomic_store";
}
def atomic_store_8 {	// SDPatternOperator PatFrag _8
  SDNodeXForm PatFrag:xform = NOOP_SDNodeXForm;
  dag Operands = (ops node:$ptr, node:$val);
  dag Fragment = (atomic_store node:$ptr, node:$val);
  string PredicateCode = "
    return cast<AtomicSDNode>(N)->getMemoryVT() == MVT::i8;
  ";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = "atomic_store";
}
def atomic_swap {	// SDPatternOperator SDNode
  string SDNode:sdclass = "SDNode";
  string Opcode = "ISD::ATOMIC_SWAP";
  string SDClass = "SDNode";
  list<SDNodeProperty> Properties = [SDNPHasChain, SDNPMayStore, SDNPMayLoad, SDNPMemOperand];
  SDTypeProfile TypeProfile = SDTAtomic2;
  string NAME = ?;
}
def atomic_swap_16 {	// SDPatternOperator PatFrag _16
  SDNodeXForm PatFrag:xform = NOOP_SDNodeXForm;
  dag Operands = (ops node:$ptr, node:$val);
  dag Fragment = (atomic_swap node:$ptr, node:$val);
  string PredicateCode = "
    return cast<AtomicSDNode>(N)->getMemoryVT() == MVT::i16;
  ";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = "atomic_swap";
}
def atomic_swap_32 {	// SDPatternOperator PatFrag _32
  SDNodeXForm PatFrag:xform = NOOP_SDNodeXForm;
  dag Operands = (ops node:$ptr, node:$val);
  dag Fragment = (atomic_swap node:$ptr, node:$val);
  string PredicateCode = "
    return cast<AtomicSDNode>(N)->getMemoryVT() == MVT::i32;
  ";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = "atomic_swap";
}
def atomic_swap_64 {	// SDPatternOperator PatFrag _64
  SDNodeXForm PatFrag:xform = NOOP_SDNodeXForm;
  dag Operands = (ops node:$ptr, node:$val);
  dag Fragment = (atomic_swap node:$ptr, node:$val);
  string PredicateCode = "
    return cast<AtomicSDNode>(N)->getMemoryVT() == MVT::i64;
  ";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = "atomic_swap";
}
def atomic_swap_8 {	// SDPatternOperator PatFrag _8
  SDNodeXForm PatFrag:xform = NOOP_SDNodeXForm;
  dag Operands = (ops node:$ptr, node:$val);
  dag Fragment = (atomic_swap node:$ptr, node:$val);
  string PredicateCode = "
    return cast<AtomicSDNode>(N)->getMemoryVT() == MVT::i8;
  ";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = "atomic_swap";
}
def b_target {	// DAGOperand Operand
  ValueType Type = OtherVT;
  string PrintMethod = "printOperand";
  string EncoderMethod = "";
  string DecoderMethod = "";
  string OperandType = "OPERAND_UNKNOWN";
  dag MIOperandInfo = (ops);
  string MCOperandPredicate = ?;
  AsmOperandClass ParserMatchClass = ImmAsmOperand;
  string NAME = ?;
}
def bb {	// SDPatternOperator SDNode
  string Opcode = "ISD::BasicBlock";
  string SDClass = "BasicBlockSDNode";
  list<SDNodeProperty> Properties = [];
  SDTypeProfile TypeProfile = SDTOther;
  string NAME = ?;
}
def bitconvert {	// SDPatternOperator SDNode
  list<SDNodeProperty> SDNode:props = [];
  string SDNode:sdclass = "SDNode";
  string Opcode = "ISD::BITCAST";
  string SDClass = "SDNode";
  list<SDNodeProperty> Properties = [];
  SDTypeProfile TypeProfile = SDTUnaryOp;
  string NAME = ?;
}
def bl_target {	// DAGOperand Operand
  ValueType Type = i32;
  string PrintMethod = "printOperand";
  string EncoderMethod = "";
  string DecoderMethod = "";
  string OperandType = "OPERAND_UNKNOWN";
  dag MIOperandInfo = (ops);
  string MCOperandPredicate = ?;
  AsmOperandClass ParserMatchClass = ImmAsmOperand;
  string NAME = ?;
}
def blockaddress {	// SDPatternOperator SDNode
  string Opcode = "ISD::BlockAddress";
  string SDClass = "BlockAddressSDNode";
  list<SDNodeProperty> Properties = [];
  SDTypeProfile TypeProfile = SDTPtrLeaf;
  string NAME = ?;
}
def br {	// SDPatternOperator SDNode
  string SDNode:sdclass = "SDNode";
  string Opcode = "ISD::BR";
  string SDClass = "SDNode";
  list<SDNodeProperty> Properties = [SDNPHasChain];
  SDTypeProfile TypeProfile = SDTBr;
  string NAME = ?;
}
def brcc {	// SDPatternOperator SDNode
  string SDNode:sdclass = "SDNode";
  string Opcode = "ISD::BR_CC";
  string SDClass = "SDNode";
  list<SDNodeProperty> Properties = [SDNPHasChain];
  SDTypeProfile TypeProfile = SDTBrCC;
  string NAME = ?;
}
def brcond {	// SDPatternOperator SDNode
  string SDNode:sdclass = "SDNode";
  string Opcode = "ISD::BRCOND";
  string SDClass = "SDNode";
  list<SDNodeProperty> Properties = [SDNPHasChain];
  SDTypeProfile TypeProfile = SDTBrcond;
  string NAME = ?;
}
def brind {	// SDPatternOperator SDNode
  string SDNode:sdclass = "SDNode";
  string Opcode = "ISD::BRIND";
  string SDClass = "SDNode";
  list<SDNodeProperty> Properties = [SDNPHasChain];
  SDTypeProfile TypeProfile = SDTBrind;
  string NAME = ?;
}
def bswap {	// SDPatternOperator SDNode
  list<SDNodeProperty> SDNode:props = [];
  string SDNode:sdclass = "SDNode";
  string Opcode = "ISD::BSWAP";
  string SDClass = "SDNode";
  list<SDNodeProperty> Properties = [];
  SDTypeProfile TypeProfile = SDTIntUnaryOp;
  string NAME = ?;
}
def build_vector {	// SDPatternOperator SDNode
  string SDNode:sdclass = "SDNode";
  string Opcode = "ISD::BUILD_VECTOR";
  string SDClass = "SDNode";
  list<SDNodeProperty> Properties = [];
  SDTypeProfile TypeProfile = anonymous_450;
  string NAME = ?;
}
def callseq_end {	// SDPatternOperator SDNode
  string SDNode:sdclass = "SDNode";
  string Opcode = "ISD::CALLSEQ_END";
  string SDClass = "SDNode";
  list<SDNodeProperty> Properties = [SDNPHasChain, SDNPOptInGlue, SDNPOutGlue];
  SDTypeProfile TypeProfile = SDT_TriCoreCallSeqEnd;
  string NAME = ?;
}
def callseq_start {	// SDPatternOperator SDNode
  string SDNode:sdclass = "SDNode";
  string Opcode = "ISD::CALLSEQ_START";
  string SDClass = "SDNode";
  list<SDNodeProperty> Properties = [SDNPHasChain, SDNPOutGlue];
  SDTypeProfile TypeProfile = SDT_TriCoreCallSeqStart;
  string NAME = ?;
}
def cc {	// DAGOperand Operand
  ValueType Type = i32;
  string PrintMethod = "printCCOperand";
  string EncoderMethod = "";
  string DecoderMethod = "";
  string OperandType = "OPERAND_UNKNOWN";
  dag MIOperandInfo = (ops);
  string MCOperandPredicate = ?;
  AsmOperandClass ParserMatchClass = ImmAsmOperand;
  string NAME = ?;
}
def cc_val {	// DAGOperand Operand
  ValueType Type = i32;
  string PrintMethod = "printCondCode";
  string EncoderMethod = "";
  string DecoderMethod = "";
  string OperandType = "OPERAND_UNKNOWN";
  dag MIOperandInfo = (ops);
  string MCOperandPredicate = ?;
  AsmOperandClass ParserMatchClass = ImmAsmOperand;
  string NAME = ?;
}
def concat_vectors {	// SDPatternOperator SDNode
  string SDNode:sdclass = "SDNode";
  string Opcode = "ISD::CONCAT_VECTORS";
  string SDClass = "SDNode";
  list<SDNodeProperty> Properties = [];
  SDTypeProfile TypeProfile = anonymous_459;
  string NAME = ?;
}
def cond {	// SDPatternOperator SDNode
  string Opcode = "ISD::CONDCODE";
  string SDClass = "CondCodeSDNode";
  list<SDNodeProperty> Properties = [];
  SDTypeProfile TypeProfile = SDTOther;
  string NAME = ?;
}
def constpool {	// SDPatternOperator SDNode
  string Opcode = "ISD::ConstantPool";
  string SDClass = "ConstantPoolSDNode";
  list<SDNodeProperty> Properties = [];
  SDTypeProfile TypeProfile = SDTPtrLeaf;
  string NAME = ?;
}
def ctlz {	// SDPatternOperator SDNode
  list<SDNodeProperty> SDNode:props = [];
  string SDNode:sdclass = "SDNode";
  string Opcode = "ISD::CTLZ";
  string SDClass = "SDNode";
  list<SDNodeProperty> Properties = [];
  SDTypeProfile TypeProfile = SDTIntUnaryOp;
  string NAME = ?;
}
def ctlz_zero_undef {	// SDPatternOperator SDNode
  list<SDNodeProperty> SDNode:props = [];
  string SDNode:sdclass = "SDNode";
  string Opcode = "ISD::CTLZ_ZERO_UNDEF";
  string SDClass = "SDNode";
  list<SDNodeProperty> Properties = [];
  SDTypeProfile TypeProfile = SDTIntUnaryOp;
  string NAME = ?;
}
def ctpop {	// SDPatternOperator SDNode
  list<SDNodeProperty> SDNode:props = [];
  string SDNode:sdclass = "SDNode";
  string Opcode = "ISD::CTPOP";
  string SDClass = "SDNode";
  list<SDNodeProperty> Properties = [];
  SDTypeProfile TypeProfile = SDTIntUnaryOp;
  string NAME = ?;
}
def cttz {	// SDPatternOperator SDNode
  list<SDNodeProperty> SDNode:props = [];
  string SDNode:sdclass = "SDNode";
  string Opcode = "ISD::CTTZ";
  string SDClass = "SDNode";
  list<SDNodeProperty> Properties = [];
  SDTypeProfile TypeProfile = SDTIntUnaryOp;
  string NAME = ?;
}
def cttz_zero_undef {	// SDPatternOperator SDNode
  list<SDNodeProperty> SDNode:props = [];
  string SDNode:sdclass = "SDNode";
  string Opcode = "ISD::CTTZ_ZERO_UNDEF";
  string SDClass = "SDNode";
  list<SDNodeProperty> Properties = [];
  SDTypeProfile TypeProfile = SDTIntUnaryOp;
  string NAME = ?;
}
def cvt {	// SDPatternOperator SDNode
  list<SDNodeProperty> SDNode:props = [];
  string SDNode:sdclass = "SDNode";
  string Opcode = "ISD::CONVERT_RNDSAT";
  string SDClass = "SDNode";
  list<SDNodeProperty> Properties = [];
  SDTypeProfile TypeProfile = SDTConvertOp;
  string NAME = ?;
}
def cvtff {	// SDPatternOperator PatFrag
  SDNodeXForm PatFrag:xform = NOOP_SDNodeXForm;
  dag Operands = (ops node:$val, node:$dty, node:$sty, node:$rd, node:$sat);
  dag Fragment = (cvt node:$val, node:$dty, node:$sty, node:$rd, node:$sat);
  string PredicateCode = "
       return cast<CvtRndSatSDNode>(N)->getCvtCode() == ISD::CVT_FF;
    ";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = ?;
}
def cvtfs {	// SDPatternOperator PatFrag
  SDNodeXForm PatFrag:xform = NOOP_SDNodeXForm;
  dag Operands = (ops node:$val, node:$dty, node:$sty, node:$rd, node:$sat);
  dag Fragment = (cvt node:$val, node:$dty, node:$sty, node:$rd, node:$sat);
  string PredicateCode = "
       return cast<CvtRndSatSDNode>(N)->getCvtCode() == ISD::CVT_FS;
    ";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = ?;
}
def cvtfu {	// SDPatternOperator PatFrag
  SDNodeXForm PatFrag:xform = NOOP_SDNodeXForm;
  dag Operands = (ops node:$val, node:$dty, node:$sty, node:$rd, node:$sat);
  dag Fragment = (cvt node:$val, node:$dty, node:$sty, node:$rd, node:$sat);
  string PredicateCode = "
       return cast<CvtRndSatSDNode>(N)->getCvtCode() == ISD::CVT_FU;
    ";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = ?;
}
def cvtsf {	// SDPatternOperator PatFrag
  SDNodeXForm PatFrag:xform = NOOP_SDNodeXForm;
  dag Operands = (ops node:$val, node:$dty, node:$sty, node:$rd, node:$sat);
  dag Fragment = (cvt node:$val, node:$dty, node:$sty, node:$rd, node:$sat);
  string PredicateCode = "
       return cast<CvtRndSatSDNode>(N)->getCvtCode() == ISD::CVT_SF;
    ";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = ?;
}
def cvtss {	// SDPatternOperator PatFrag
  SDNodeXForm PatFrag:xform = NOOP_SDNodeXForm;
  dag Operands = (ops node:$val, node:$dty, node:$sty, node:$rd, node:$sat);
  dag Fragment = (cvt node:$val, node:$dty, node:$sty, node:$rd, node:$sat);
  string PredicateCode = "
       return cast<CvtRndSatSDNode>(N)->getCvtCode() == ISD::CVT_SS;
    ";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = ?;
}
def cvtsu {	// SDPatternOperator PatFrag
  SDNodeXForm PatFrag:xform = NOOP_SDNodeXForm;
  dag Operands = (ops node:$val, node:$dty, node:$sty, node:$rd, node:$sat);
  dag Fragment = (cvt node:$val, node:$dty, node:$sty, node:$rd, node:$sat);
  string PredicateCode = "
       return cast<CvtRndSatSDNode>(N)->getCvtCode() == ISD::CVT_SU;
    ";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = ?;
}
def cvtuf {	// SDPatternOperator PatFrag
  SDNodeXForm PatFrag:xform = NOOP_SDNodeXForm;
  dag Operands = (ops node:$val, node:$dty, node:$sty, node:$rd, node:$sat);
  dag Fragment = (cvt node:$val, node:$dty, node:$sty, node:$rd, node:$sat);
  string PredicateCode = "
       return cast<CvtRndSatSDNode>(N)->getCvtCode() == ISD::CVT_UF;
    ";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = ?;
}
def cvtus {	// SDPatternOperator PatFrag
  SDNodeXForm PatFrag:xform = NOOP_SDNodeXForm;
  dag Operands = (ops node:$val, node:$dty, node:$sty, node:$rd, node:$sat);
  dag Fragment = (cvt node:$val, node:$dty, node:$sty, node:$rd, node:$sat);
  string PredicateCode = "
       return cast<CvtRndSatSDNode>(N)->getCvtCode() == ISD::CVT_US;
    ";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = ?;
}
def cvtuu {	// SDPatternOperator PatFrag
  SDNodeXForm PatFrag:xform = NOOP_SDNodeXForm;
  dag Operands = (ops node:$val, node:$dty, node:$sty, node:$rd, node:$sat);
  dag Fragment = (cvt node:$val, node:$dty, node:$sty, node:$rd, node:$sat);
  string PredicateCode = "
       return cast<CvtRndSatSDNode>(N)->getCvtCode() == ISD::CVT_UU;
    ";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = ?;
}
def debugtrap {	// SDPatternOperator SDNode
  string SDNode:sdclass = "SDNode";
  string Opcode = "ISD::DEBUGTRAP";
  string SDClass = "SDNode";
  list<SDNodeProperty> Properties = [SDNPHasChain, SDNPSideEffect];
  SDTypeProfile TypeProfile = SDTNone;
  string NAME = ?;
}
def decimate {
  string NAME = ?;
}
def externalsym {	// SDPatternOperator SDNode
  string Opcode = "ISD::ExternalSymbol";
  string SDClass = "ExternalSymbolSDNode";
  list<SDNodeProperty> Properties = [];
  SDTypeProfile TypeProfile = SDTPtrLeaf;
  string NAME = ?;
}
def extload {	// SDPatternOperator PatFrag
  SDNodeXForm PatFrag:xform = NOOP_SDNodeXForm;
  dag Operands = (ops node:$ptr);
  dag Fragment = (unindexedload node:$ptr);
  string PredicateCode = "
  return cast<LoadSDNode>(N)->getExtensionType() == ISD::EXTLOAD;
";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = ?;
}
def extloadf32 {	// SDPatternOperator PatFrag
  SDNodeXForm PatFrag:xform = NOOP_SDNodeXForm;
  dag Operands = (ops node:$ptr);
  dag Fragment = (extload node:$ptr);
  string PredicateCode = "
  return cast<LoadSDNode>(N)->getMemoryVT() == MVT::f32;
";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = ?;
}
def extloadf64 {	// SDPatternOperator PatFrag
  SDNodeXForm PatFrag:xform = NOOP_SDNodeXForm;
  dag Operands = (ops node:$ptr);
  dag Fragment = (extload node:$ptr);
  string PredicateCode = "
  return cast<LoadSDNode>(N)->getMemoryVT() == MVT::f64;
";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = ?;
}
def extloadi1 {	// SDPatternOperator PatFrag
  SDNodeXForm PatFrag:xform = NOOP_SDNodeXForm;
  dag Operands = (ops node:$ptr);
  dag Fragment = (extload node:$ptr);
  string PredicateCode = "
  return cast<LoadSDNode>(N)->getMemoryVT() == MVT::i1;
";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = ?;
}
def extloadi16 {	// SDPatternOperator PatFrag
  SDNodeXForm PatFrag:xform = NOOP_SDNodeXForm;
  dag Operands = (ops node:$ptr);
  dag Fragment = (extload node:$ptr);
  string PredicateCode = "
  return cast<LoadSDNode>(N)->getMemoryVT() == MVT::i16;
";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = ?;
}
def extloadi32 {	// SDPatternOperator PatFrag
  SDNodeXForm PatFrag:xform = NOOP_SDNodeXForm;
  dag Operands = (ops node:$ptr);
  dag Fragment = (extload node:$ptr);
  string PredicateCode = "
  return cast<LoadSDNode>(N)->getMemoryVT() == MVT::i32;
";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = ?;
}
def extloadi8 {	// SDPatternOperator PatFrag
  SDNodeXForm PatFrag:xform = NOOP_SDNodeXForm;
  dag Operands = (ops node:$ptr);
  dag Fragment = (extload node:$ptr);
  string PredicateCode = "
  return cast<LoadSDNode>(N)->getMemoryVT() == MVT::i8;
";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = ?;
}
def extloadvf32 {	// SDPatternOperator PatFrag
  SDNodeXForm PatFrag:xform = NOOP_SDNodeXForm;
  dag Operands = (ops node:$ptr);
  dag Fragment = (extload node:$ptr);
  string PredicateCode = "
  return cast<LoadSDNode>(N)->getMemoryVT().getScalarType() == MVT::f32;
";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = ?;
}
def extloadvf64 {	// SDPatternOperator PatFrag
  SDNodeXForm PatFrag:xform = NOOP_SDNodeXForm;
  dag Operands = (ops node:$ptr);
  dag Fragment = (extload node:$ptr);
  string PredicateCode = "
  return cast<LoadSDNode>(N)->getMemoryVT().getScalarType() == MVT::f64;
";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = ?;
}
def extloadvi1 {	// SDPatternOperator PatFrag
  SDNodeXForm PatFrag:xform = NOOP_SDNodeXForm;
  dag Operands = (ops node:$ptr);
  dag Fragment = (extload node:$ptr);
  string PredicateCode = "
  return cast<LoadSDNode>(N)->getMemoryVT().getScalarType() == MVT::i1;
";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = ?;
}
def extloadvi16 {	// SDPatternOperator PatFrag
  SDNodeXForm PatFrag:xform = NOOP_SDNodeXForm;
  dag Operands = (ops node:$ptr);
  dag Fragment = (extload node:$ptr);
  string PredicateCode = "
  return cast<LoadSDNode>(N)->getMemoryVT().getScalarType() == MVT::i16;
";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = ?;
}
def extloadvi32 {	// SDPatternOperator PatFrag
  SDNodeXForm PatFrag:xform = NOOP_SDNodeXForm;
  dag Operands = (ops node:$ptr);
  dag Fragment = (extload node:$ptr);
  string PredicateCode = "
  return cast<LoadSDNode>(N)->getMemoryVT().getScalarType() == MVT::i32;
";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = ?;
}
def extloadvi8 {	// SDPatternOperator PatFrag
  SDNodeXForm PatFrag:xform = NOOP_SDNodeXForm;
  dag Operands = (ops node:$ptr);
  dag Fragment = (extload node:$ptr);
  string PredicateCode = "
  return cast<LoadSDNode>(N)->getMemoryVT().getScalarType() == MVT::i8;
";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = ?;
}
def extract_subvector {	// SDPatternOperator SDNode
  string SDNode:sdclass = "SDNode";
  string Opcode = "ISD::EXTRACT_SUBVECTOR";
  string SDClass = "SDNode";
  list<SDNodeProperty> Properties = [];
  SDTypeProfile TypeProfile = SDTSubVecExtract;
  string NAME = ?;
}
def extractelt {	// SDPatternOperator SDNode
  list<SDNodeProperty> SDNode:props = [];
  string SDNode:sdclass = "SDNode";
  string Opcode = "ISD::EXTRACT_VECTOR_ELT";
  string SDClass = "SDNode";
  list<SDNodeProperty> Properties = [];
  SDTypeProfile TypeProfile = SDTVecExtract;
  string NAME = ?;
}
def f128 {	// ValueType
  string Namespace = "MVT";
  int Size = 128;
  int Value = 11;
  string NAME = ?;
}
def f16 {	// ValueType
  string Namespace = "MVT";
  int Size = 16;
  int Value = 7;
  string NAME = ?;
}
def f16_to_fp {	// SDPatternOperator SDNode
  list<SDNodeProperty> SDNode:props = [];
  string SDNode:sdclass = "SDNode";
  string Opcode = "ISD::FP16_TO_FP";
  string SDClass = "SDNode";
  list<SDNodeProperty> Properties = [];
  SDTypeProfile TypeProfile = SDTIntToFPOp;
  string NAME = ?;
}
def f32 {	// ValueType
  string Namespace = "MVT";
  int Size = 32;
  int Value = 8;
  string NAME = ?;
}
def f32imm {	// DAGOperand Operand
  ValueType Type = f32;
  string PrintMethod = "printOperand";
  string EncoderMethod = "";
  string DecoderMethod = "";
  string OperandType = "OPERAND_IMMEDIATE";
  dag MIOperandInfo = (ops);
  string MCOperandPredicate = ?;
  AsmOperandClass ParserMatchClass = ImmAsmOperand;
  string NAME = ?;
}
def f64 {	// ValueType
  string Namespace = "MVT";
  int Size = 64;
  int Value = 9;
  string NAME = ?;
}
def f64imm {	// DAGOperand Operand
  ValueType Type = f64;
  string PrintMethod = "printOperand";
  string EncoderMethod = "";
  string DecoderMethod = "";
  string OperandType = "OPERAND_IMMEDIATE";
  dag MIOperandInfo = (ops);
  string MCOperandPredicate = ?;
  AsmOperandClass ParserMatchClass = ImmAsmOperand;
  string NAME = ?;
}
def f80 {	// ValueType
  string Namespace = "MVT";
  int Size = 80;
  int Value = 10;
  string NAME = ?;
}
def fAny {	// ValueType
  string Namespace = "MVT";
  int Size = 0;
  int Value = 253;
  string NAME = ?;
}
def fabs {	// SDPatternOperator SDNode
  list<SDNodeProperty> SDNode:props = [];
  string SDNode:sdclass = "SDNode";
  string Opcode = "ISD::FABS";
  string SDClass = "SDNode";
  list<SDNodeProperty> Properties = [];
  SDTypeProfile TypeProfile = SDTFPUnaryOp;
  string NAME = ?;
}
def fadd {	// SDPatternOperator SDNode
  string SDNode:sdclass = "SDNode";
  string Opcode = "ISD::FADD";
  string SDClass = "SDNode";
  list<SDNodeProperty> Properties = [SDNPCommutative];
  SDTypeProfile TypeProfile = SDTFPBinOp;
  string NAME = ?;
}
def fceil {	// SDPatternOperator SDNode
  list<SDNodeProperty> SDNode:props = [];
  string SDNode:sdclass = "SDNode";
  string Opcode = "ISD::FCEIL";
  string SDClass = "SDNode";
  list<SDNodeProperty> Properties = [];
  SDTypeProfile TypeProfile = SDTFPUnaryOp;
  string NAME = ?;
}
def fcopysign {	// SDPatternOperator SDNode
  list<SDNodeProperty> SDNode:props = [];
  string SDNode:sdclass = "SDNode";
  string Opcode = "ISD::FCOPYSIGN";
  string SDClass = "SDNode";
  list<SDNodeProperty> Properties = [];
  SDTypeProfile TypeProfile = SDTFPSignOp;
  string NAME = ?;
}
def fcos {	// SDPatternOperator SDNode
  list<SDNodeProperty> SDNode:props = [];
  string SDNode:sdclass = "SDNode";
  string Opcode = "ISD::FCOS";
  string SDClass = "SDNode";
  list<SDNodeProperty> Properties = [];
  SDTypeProfile TypeProfile = SDTFPUnaryOp;
  string NAME = ?;
}
def fdiv {	// SDPatternOperator SDNode
  list<SDNodeProperty> SDNode:props = [];
  string SDNode:sdclass = "SDNode";
  string Opcode = "ISD::FDIV";
  string SDClass = "SDNode";
  list<SDNodeProperty> Properties = [];
  SDTypeProfile TypeProfile = SDTFPBinOp;
  string NAME = ?;
}
def fexp2 {	// SDPatternOperator SDNode
  list<SDNodeProperty> SDNode:props = [];
  string SDNode:sdclass = "SDNode";
  string Opcode = "ISD::FEXP2";
  string SDClass = "SDNode";
  list<SDNodeProperty> Properties = [];
  SDTypeProfile TypeProfile = SDTFPUnaryOp;
  string NAME = ?;
}
def fextend {	// SDPatternOperator SDNode
  list<SDNodeProperty> SDNode:props = [];
  string SDNode:sdclass = "SDNode";
  string Opcode = "ISD::FP_EXTEND";
  string SDClass = "SDNode";
  list<SDNodeProperty> Properties = [];
  SDTypeProfile TypeProfile = SDTFPExtendOp;
  string NAME = ?;
}
def ffloor {	// SDPatternOperator SDNode
  list<SDNodeProperty> SDNode:props = [];
  string SDNode:sdclass = "SDNode";
  string Opcode = "ISD::FFLOOR";
  string SDClass = "SDNode";
  list<SDNodeProperty> Properties = [];
  SDTypeProfile TypeProfile = SDTFPUnaryOp;
  string NAME = ?;
}
def fgetsign {	// SDPatternOperator SDNode
  list<SDNodeProperty> SDNode:props = [];
  string SDNode:sdclass = "SDNode";
  string Opcode = "ISD::FGETSIGN";
  string SDClass = "SDNode";
  list<SDNodeProperty> Properties = [];
  SDTypeProfile TypeProfile = SDTFPToIntOp;
  string NAME = ?;
}
def flog2 {	// SDPatternOperator SDNode
  list<SDNodeProperty> SDNode:props = [];
  string SDNode:sdclass = "SDNode";
  string Opcode = "ISD::FLOG2";
  string SDClass = "SDNode";
  list<SDNodeProperty> Properties = [];
  SDTypeProfile TypeProfile = SDTFPUnaryOp;
  string NAME = ?;
}
def fma {	// SDPatternOperator SDNode
  list<SDNodeProperty> SDNode:props = [];
  string SDNode:sdclass = "SDNode";
  string Opcode = "ISD::FMA";
  string SDClass = "SDNode";
  list<SDNodeProperty> Properties = [];
  SDTypeProfile TypeProfile = SDTFPTernaryOp;
  string NAME = ?;
}
def fmad {	// SDPatternOperator SDNode
  list<SDNodeProperty> SDNode:props = [];
  string SDNode:sdclass = "SDNode";
  string Opcode = "ISD::FMAD";
  string SDClass = "SDNode";
  list<SDNodeProperty> Properties = [];
  SDTypeProfile TypeProfile = SDTFPTernaryOp;
  string NAME = ?;
}
def fmaxnum {	// SDPatternOperator SDNode
  list<SDNodeProperty> SDNode:props = [];
  string SDNode:sdclass = "SDNode";
  string Opcode = "ISD::FMAXNUM";
  string SDClass = "SDNode";
  list<SDNodeProperty> Properties = [];
  SDTypeProfile TypeProfile = SDTFPBinOp;
  string NAME = ?;
}
def fminnum {	// SDPatternOperator SDNode
  list<SDNodeProperty> SDNode:props = [];
  string SDNode:sdclass = "SDNode";
  string Opcode = "ISD::FMINNUM";
  string SDClass = "SDNode";
  list<SDNodeProperty> Properties = [];
  SDTypeProfile TypeProfile = SDTFPBinOp;
  string NAME = ?;
}
def fmul {	// SDPatternOperator SDNode
  string SDNode:sdclass = "SDNode";
  string Opcode = "ISD::FMUL";
  string SDClass = "SDNode";
  list<SDNodeProperty> Properties = [SDNPCommutative];
  SDTypeProfile TypeProfile = SDTFPBinOp;
  string NAME = ?;
}
def fnearbyint {	// SDPatternOperator SDNode
  list<SDNodeProperty> SDNode:props = [];
  string SDNode:sdclass = "SDNode";
  string Opcode = "ISD::FNEARBYINT";
  string SDClass = "SDNode";
  list<SDNodeProperty> Properties = [];
  SDTypeProfile TypeProfile = SDTFPUnaryOp;
  string NAME = ?;
}
def fneg {	// SDPatternOperator SDNode
  list<SDNodeProperty> SDNode:props = [];
  string SDNode:sdclass = "SDNode";
  string Opcode = "ISD::FNEG";
  string SDClass = "SDNode";
  list<SDNodeProperty> Properties = [];
  SDTypeProfile TypeProfile = SDTFPUnaryOp;
  string NAME = ?;
}
def fp_to_f16 {	// SDPatternOperator SDNode
  list<SDNodeProperty> SDNode:props = [];
  string SDNode:sdclass = "SDNode";
  string Opcode = "ISD::FP_TO_FP16";
  string SDClass = "SDNode";
  list<SDNodeProperty> Properties = [];
  SDTypeProfile TypeProfile = SDTFPToIntOp;
  string NAME = ?;
}
def fp_to_sint {	// SDPatternOperator SDNode
  list<SDNodeProperty> SDNode:props = [];
  string SDNode:sdclass = "SDNode";
  string Opcode = "ISD::FP_TO_SINT";
  string SDClass = "SDNode";
  list<SDNodeProperty> Properties = [];
  SDTypeProfile TypeProfile = SDTFPToIntOp;
  string NAME = ?;
}
def fp_to_uint {	// SDPatternOperator SDNode
  list<SDNodeProperty> SDNode:props = [];
  string SDNode:sdclass = "SDNode";
  string Opcode = "ISD::FP_TO_UINT";
  string SDClass = "SDNode";
  list<SDNodeProperty> Properties = [];
  SDTypeProfile TypeProfile = SDTFPToIntOp;
  string NAME = ?;
}
def fpimm {	// SDPatternOperator SDNode
  string Opcode = "ISD::ConstantFP";
  string SDClass = "ConstantFPSDNode";
  list<SDNodeProperty> Properties = [];
  SDTypeProfile TypeProfile = SDTFPLeaf;
  string NAME = ?;
}
def fpow {	// SDPatternOperator SDNode
  list<SDNodeProperty> SDNode:props = [];
  string SDNode:sdclass = "SDNode";
  string Opcode = "ISD::FPOW";
  string SDClass = "SDNode";
  list<SDNodeProperty> Properties = [];
  SDTypeProfile TypeProfile = SDTFPBinOp;
  string NAME = ?;
}
def frameindex {	// SDPatternOperator SDNode
  string Opcode = "ISD::FrameIndex";
  string SDClass = "FrameIndexSDNode";
  list<SDNodeProperty> Properties = [];
  SDTypeProfile TypeProfile = SDTPtrLeaf;
  string NAME = ?;
}
def frem {	// SDPatternOperator SDNode
  list<SDNodeProperty> SDNode:props = [];
  string SDNode:sdclass = "SDNode";
  string Opcode = "ISD::FREM";
  string SDClass = "SDNode";
  list<SDNodeProperty> Properties = [];
  SDTypeProfile TypeProfile = SDTFPBinOp;
  string NAME = ?;
}
def frint {	// SDPatternOperator SDNode
  list<SDNodeProperty> SDNode:props = [];
  string SDNode:sdclass = "SDNode";
  string Opcode = "ISD::FRINT";
  string SDClass = "SDNode";
  list<SDNodeProperty> Properties = [];
  SDTypeProfile TypeProfile = SDTFPUnaryOp;
  string NAME = ?;
}
def frnd {	// SDPatternOperator SDNode
  list<SDNodeProperty> SDNode:props = [];
  string SDNode:sdclass = "SDNode";
  string Opcode = "ISD::FROUND";
  string SDClass = "SDNode";
  list<SDNodeProperty> Properties = [];
  SDTypeProfile TypeProfile = SDTFPUnaryOp;
  string NAME = ?;
}
def fround {	// SDPatternOperator SDNode
  list<SDNodeProperty> SDNode:props = [];
  string SDNode:sdclass = "SDNode";
  string Opcode = "ISD::FP_ROUND";
  string SDClass = "SDNode";
  list<SDNodeProperty> Properties = [];
  SDTypeProfile TypeProfile = SDTFPRoundOp;
  string NAME = ?;
}
def fsin {	// SDPatternOperator SDNode
  list<SDNodeProperty> SDNode:props = [];
  string SDNode:sdclass = "SDNode";
  string Opcode = "ISD::FSIN";
  string SDClass = "SDNode";
  list<SDNodeProperty> Properties = [];
  SDTypeProfile TypeProfile = SDTFPUnaryOp;
  string NAME = ?;
}
def fsqrt {	// SDPatternOperator SDNode
  list<SDNodeProperty> SDNode:props = [];
  string SDNode:sdclass = "SDNode";
  string Opcode = "ISD::FSQRT";
  string SDClass = "SDNode";
  list<SDNodeProperty> Properties = [];
  SDTypeProfile TypeProfile = SDTFPUnaryOp;
  string NAME = ?;
}
def fsub {	// SDPatternOperator SDNode
  list<SDNodeProperty> SDNode:props = [];
  string SDNode:sdclass = "SDNode";
  string Opcode = "ISD::FSUB";
  string SDClass = "SDNode";
  list<SDNodeProperty> Properties = [];
  SDTypeProfile TypeProfile = SDTFPBinOp;
  string NAME = ?;
}
def ftrunc {	// SDPatternOperator SDNode
  list<SDNodeProperty> SDNode:props = [];
  string SDNode:sdclass = "SDNode";
  string Opcode = "ISD::FTRUNC";
  string SDClass = "SDNode";
  list<SDNodeProperty> Properties = [];
  SDTypeProfile TypeProfile = SDTFPUnaryOp;
  string NAME = ?;
}
def globaladdr {	// SDPatternOperator SDNode
  string Opcode = "ISD::GlobalAddress";
  string SDClass = "GlobalAddressSDNode";
  list<SDNodeProperty> Properties = [];
  SDTypeProfile TypeProfile = SDTPtrLeaf;
  string NAME = ?;
}
def globaltlsaddr {	// SDPatternOperator SDNode
  string Opcode = "ISD::GlobalTLSAddress";
  string SDClass = "GlobalAddressSDNode";
  list<SDNodeProperty> Properties = [];
  SDTypeProfile TypeProfile = SDTPtrLeaf;
  string NAME = ?;
}
def i1 {	// ValueType
  string Namespace = "MVT";
  int Size = 1;
  int Value = 1;
  string NAME = ?;
}
def i128 {	// ValueType
  string Namespace = "MVT";
  int Size = 128;
  int Value = 6;
  string NAME = ?;
}
def i16 {	// ValueType
  string Namespace = "MVT";
  int Size = 16;
  int Value = 3;
  string NAME = ?;
}
def i16imm {	// DAGOperand Operand
  ValueType Type = i16;
  string PrintMethod = "printOperand";
  string EncoderMethod = "";
  string DecoderMethod = "";
  string OperandType = "OPERAND_IMMEDIATE";
  dag MIOperandInfo = (ops);
  string MCOperandPredicate = ?;
  AsmOperandClass ParserMatchClass = ImmAsmOperand;
  string NAME = ?;
}
def i1imm {	// DAGOperand Operand
  ValueType Type = i1;
  string PrintMethod = "printOperand";
  string EncoderMethod = "";
  string DecoderMethod = "";
  string OperandType = "OPERAND_IMMEDIATE";
  dag MIOperandInfo = (ops);
  string MCOperandPredicate = ?;
  AsmOperandClass ParserMatchClass = ImmAsmOperand;
  string NAME = ?;
}
def i32 {	// ValueType
  string Namespace = "MVT";
  int Size = 32;
  int Value = 4;
  string NAME = ?;
}
def i32imm {	// DAGOperand Operand
  ValueType Type = i32;
  string PrintMethod = "printOperand";
  string EncoderMethod = "";
  string DecoderMethod = "";
  string OperandType = "OPERAND_IMMEDIATE";
  dag MIOperandInfo = (ops);
  string MCOperandPredicate = ?;
  AsmOperandClass ParserMatchClass = ImmAsmOperand;
  string NAME = ?;
}
def i32imm_lo {	// DAGOperand Operand SDPatternOperator PatFrag ImmLeaf
  ValueType Type = i32;
  string PrintMethod = "printOperand";
  string EncoderMethod = "";
  string DecoderMethod = "";
  string OperandType = "OPERAND_UNKNOWN";
  dag MIOperandInfo = (ops);
  string MCOperandPredicate = ?;
  AsmOperandClass ParserMatchClass = ImmAsmOperand;
  SDNodeXForm ImmLeaf:xform = NOOP_SDNodeXForm;
  dag Operands = (ops);
  dag Fragment = (i32 imm);
  string PredicateCode = "";
  string ImmediateCode = "
  return Imm >= 0 && Imm < 65536;
";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  bit FastIselShouldIgnore = 0;
  string NAME = ?;
}
def i64 {	// ValueType
  string Namespace = "MVT";
  int Size = 64;
  int Value = 5;
  string NAME = ?;
}
def i64imm {	// DAGOperand Operand
  ValueType Type = i64;
  string PrintMethod = "printOperand";
  string EncoderMethod = "";
  string DecoderMethod = "";
  string OperandType = "OPERAND_IMMEDIATE";
  dag MIOperandInfo = (ops);
  string MCOperandPredicate = ?;
  AsmOperandClass ParserMatchClass = ImmAsmOperand;
  string NAME = ?;
}
def i8 {	// ValueType
  string Namespace = "MVT";
  int Size = 8;
  int Value = 2;
  string NAME = ?;
}
def i8imm {	// DAGOperand Operand
  ValueType Type = i8;
  string PrintMethod = "printOperand";
  string EncoderMethod = "";
  string DecoderMethod = "";
  string OperandType = "OPERAND_IMMEDIATE";
  dag MIOperandInfo = (ops);
  string MCOperandPredicate = ?;
  AsmOperandClass ParserMatchClass = ImmAsmOperand;
  string NAME = ?;
}
def iAny {	// ValueType
  string Namespace = "MVT";
  int Size = 0;
  int Value = 254;
  string NAME = ?;
}
def iPTR {	// ValueType
  string Namespace = "MVT";
  int Size = 0;
  int Value = 255;
  string NAME = ?;
}
def iPTRAny {	// ValueType
  string Namespace = "MVT";
  int Size = 0;
  int Value = 251;
  string NAME = ?;
}
def imm {	// SDPatternOperator SDNode
  string Opcode = "ISD::Constant";
  string SDClass = "ConstantSDNode";
  list<SDNodeProperty> Properties = [];
  SDTypeProfile TypeProfile = SDTIntLeaf;
  string NAME = ?;
}
def immAllOnesV {	// SDPatternOperator PatFrag PatLeaf
  SDNodeXForm PatLeaf:xform = NOOP_SDNodeXForm;
  dag Operands = (ops);
  dag Fragment = (build_vector);
  string PredicateCode = "
  return ISD::isBuildVectorAllOnes(N);
";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = ?;
}
def immAllZerosV {	// SDPatternOperator PatFrag PatLeaf
  SDNodeXForm PatLeaf:xform = NOOP_SDNodeXForm;
  dag Operands = (ops);
  dag Fragment = (build_vector);
  string PredicateCode = "
  return ISD::isBuildVectorAllZeros(N);
";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = ?;
}
def immSExt16 {	// SDPatternOperator PatFrag PatLeaf
  SDNodeXForm PatLeaf:xform = NOOP_SDNodeXForm;
  dag Operands = (ops);
  dag Fragment = (imm);
  string PredicateCode = " return isInt<16>(N->getSExtValue()); ";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = ?;
}
def immSExt4 {	// SDPatternOperator PatFrag PatLeaf
  SDNodeXForm PatLeaf:xform = NOOP_SDNodeXForm;
  dag Operands = (ops);
  dag Fragment = (imm);
  string PredicateCode = " return isInt<4>(N->getSExtValue()); ";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = ?;
}
def immSExt9 {	// SDPatternOperator PatFrag PatLeaf
  SDNodeXForm PatLeaf:xform = NOOP_SDNodeXForm;
  dag Operands = (ops);
  dag Fragment = (imm);
  string PredicateCode = " return isInt<9>(N->getSExtValue()); ";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = ?;
}
def immZExt4 {	// SDPatternOperator PatFrag ImmLeaf
  SDNodeXForm ImmLeaf:xform = NOOP_SDNodeXForm;
  dag Operands = (ops);
  dag Fragment = (i32 imm);
  string PredicateCode = "";
  string ImmediateCode = "return Imm == (Imm & 0x0f);";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  bit FastIselShouldIgnore = 0;
  string NAME = ?;
}
def immZExt8 {	// SDPatternOperator PatFrag ImmLeaf
  SDNodeXForm ImmLeaf:xform = NOOP_SDNodeXForm;
  dag Operands = (ops);
  dag Fragment = (i32 imm);
  string PredicateCode = "";
  string ImmediateCode = "return Imm == (Imm & 0xff);";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  bit FastIselShouldIgnore = 0;
  string NAME = ?;
}
def immZExt9 {	// SDPatternOperator PatFrag ImmLeaf
  SDNodeXForm ImmLeaf:xform = NOOP_SDNodeXForm;
  dag Operands = (ops);
  dag Fragment = (i32 imm);
  string PredicateCode = "";
  string ImmediateCode = "return Imm == (Imm & 0x1ff);";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  bit FastIselShouldIgnore = 0;
  string NAME = ?;
}
def implicit {
  string NAME = ?;
}
def ineg {	// SDPatternOperator PatFrag
  string PatFrag:pred = "";
  SDNodeXForm PatFrag:xform = NOOP_SDNodeXForm;
  dag Operands = (ops node:$in);
  dag Fragment = (sub 0, node:$in);
  string PredicateCode = "";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = ?;
}
def ins {
  string NAME = ?;
}
def insert_subvector {	// SDPatternOperator SDNode
  string SDNode:sdclass = "SDNode";
  string Opcode = "ISD::INSERT_SUBVECTOR";
  string SDClass = "SDNode";
  list<SDNodeProperty> Properties = [];
  SDTypeProfile TypeProfile = SDTSubVecInsert;
  string NAME = ?;
}
def insertelt {	// SDPatternOperator SDNode
  list<SDNodeProperty> SDNode:props = [];
  string SDNode:sdclass = "SDNode";
  string Opcode = "ISD::INSERT_VECTOR_ELT";
  string SDClass = "SDNode";
  list<SDNodeProperty> Properties = [];
  SDTypeProfile TypeProfile = SDTVecInsert;
  string NAME = ?;
}
def instregex {
  string NAME = ?;
}
def instrs {
  string NAME = ?;
}
def int_AMDGPU_class {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_amdgpu_class";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "AMDGPU";
  list<LLVMType> RetTypes = [llvm_i1_ty];
  list<LLVMType> ParamTypes = [llvm_anyfloat_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_AMDGPU_div_fixup {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_amdgpu_div_fixup";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "AMDGPU";
  list<LLVMType> RetTypes = [llvm_anyfloat_ty];
  list<LLVMType> ParamTypes = [anonymous_311, anonymous_312, anonymous_313];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_AMDGPU_div_fmas {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_amdgpu_div_fmas";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "AMDGPU";
  list<LLVMType> RetTypes = [llvm_anyfloat_ty];
  list<LLVMType> ParamTypes = [anonymous_308, anonymous_309, anonymous_310, llvm_i1_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_AMDGPU_div_scale {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_amdgpu_div_scale";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "AMDGPU";
  list<LLVMType> RetTypes = [llvm_anyfloat_ty, llvm_i1_ty];
  list<LLVMType> ParamTypes = [anonymous_306, anonymous_307, llvm_i1_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_AMDGPU_ldexp {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_amdgpu_ldexp";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "AMDGPU";
  list<LLVMType> RetTypes = [llvm_anyfloat_ty];
  list<LLVMType> ParamTypes = [anonymous_318, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_AMDGPU_rcp {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_amdgpu_rcp";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "AMDGPU";
  list<LLVMType> RetTypes = [llvm_anyfloat_ty];
  list<LLVMType> ParamTypes = [anonymous_315];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_AMDGPU_read_workdim {	// SDPatternOperator Intrinsic GCCBuiltin AMDGPUReadPreloadRegisterIntrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "AMDGPU";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string GCCBuiltinName = "__builtin_amdgpu_read_workdim";
  string NAME = ?;
}
def int_AMDGPU_rsq {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_amdgpu_rsq";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "AMDGPU";
  list<LLVMType> RetTypes = [llvm_anyfloat_ty];
  list<LLVMType> ParamTypes = [anonymous_316];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_AMDGPU_rsq_clamped {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_amdgpu_rsq_clamped";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "AMDGPU";
  list<LLVMType> RetTypes = [llvm_anyfloat_ty];
  list<LLVMType> ParamTypes = [anonymous_317];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_AMDGPU_trig_preop {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_amdgpu_trig_preop";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "AMDGPU";
  list<LLVMType> RetTypes = [llvm_anyfloat_ty];
  list<LLVMType> ParamTypes = [anonymous_314, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_clrex {	// SDPatternOperator Intrinsic
  list<LLVMType> Intrinsic:param_types = [];
  list<IntrinsicProperty> Intrinsic:properties = [];
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_crc32b {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_crc32cb {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_crc32ch {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_crc32cw {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_crc32cx {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_crc32h {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_crc32w {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_crc32x {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_crypto_aesd {	// SDPatternOperator Intrinsic Crypto_AES_DataKey_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_crypto_aese {	// SDPatternOperator Intrinsic Crypto_AES_DataKey_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_crypto_aesimc {	// SDPatternOperator Intrinsic Crypto_AES_Data_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_crypto_aesmc {	// SDPatternOperator Intrinsic Crypto_AES_Data_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_crypto_sha1c {	// SDPatternOperator Intrinsic Crypto_SHA_5Hash4Schedule_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_crypto_sha1h {	// SDPatternOperator Intrinsic Crypto_SHA_1Hash_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_crypto_sha1m {	// SDPatternOperator Intrinsic Crypto_SHA_5Hash4Schedule_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_crypto_sha1p {	// SDPatternOperator Intrinsic Crypto_SHA_5Hash4Schedule_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_crypto_sha1su0 {	// SDPatternOperator Intrinsic Crypto_SHA_12Schedule_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_crypto_sha1su1 {	// SDPatternOperator Intrinsic Crypto_SHA_8Schedule_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_crypto_sha256h {	// SDPatternOperator Intrinsic Crypto_SHA_8Hash4Schedule_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_crypto_sha256h2 {	// SDPatternOperator Intrinsic Crypto_SHA_8Hash4Schedule_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_crypto_sha256su0 {	// SDPatternOperator Intrinsic Crypto_SHA_8Schedule_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_crypto_sha256su1 {	// SDPatternOperator Intrinsic Crypto_SHA_12Schedule_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_dmb {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_arm_dmb";
  list<IntrinsicProperty> Intrinsic:properties = [];
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_dsb {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_arm_dsb";
  list<IntrinsicProperty> Intrinsic:properties = [];
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_hint {	// SDPatternOperator Intrinsic
  list<IntrinsicProperty> Intrinsic:properties = [];
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_isb {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_arm_isb";
  list<IntrinsicProperty> Intrinsic:properties = [];
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_ldaxp {	// SDPatternOperator Intrinsic
  list<IntrinsicProperty> Intrinsic:properties = [];
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_i64_ty, llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_ptr_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_ldaxr {	// SDPatternOperator Intrinsic
  list<IntrinsicProperty> Intrinsic:properties = [];
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_anyptr_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_ldxp {	// SDPatternOperator Intrinsic
  list<IntrinsicProperty> Intrinsic:properties = [];
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_i64_ty, llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_ptr_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_ldxr {	// SDPatternOperator Intrinsic
  list<IntrinsicProperty> Intrinsic:properties = [];
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_anyptr_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_neon_abs {	// SDPatternOperator Intrinsic AdvSIMD_1IntArg_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyint_ty];
  list<LLVMType> ParamTypes = [anonymous_141];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_neon_addhn {	// SDPatternOperator Intrinsic AdvSIMD_2VectorArg_Narrow_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [anonymous_158, anonymous_159];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_neon_addp {	// SDPatternOperator Intrinsic AdvSIMD_2VectorArg_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [anonymous_150, anonymous_151];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_neon_cls {	// SDPatternOperator Intrinsic AdvSIMD_1VectorArg_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [anonymous_143];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_neon_fabd {	// SDPatternOperator Intrinsic AdvSIMD_2VectorArg_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [anonymous_150, anonymous_151];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_neon_facge {	// SDPatternOperator Intrinsic AdvSIMD_2Arg_FloatCompare_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyint_ty];
  list<LLVMType> ParamTypes = [llvm_anyfloat_ty, anonymous_153];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_neon_facgt {	// SDPatternOperator Intrinsic AdvSIMD_2Arg_FloatCompare_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyint_ty];
  list<LLVMType> ParamTypes = [llvm_anyfloat_ty, anonymous_153];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_neon_faddv {	// SDPatternOperator Intrinsic AdvSIMD_1VectorArg_Float_Across_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyfloat_ty];
  list<LLVMType> ParamTypes = [llvm_anyvector_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_neon_fcvtas {	// SDPatternOperator Intrinsic AdvSIMD_FPToIntRounding_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyint_ty];
  list<LLVMType> ParamTypes = [llvm_anyfloat_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_neon_fcvtau {	// SDPatternOperator Intrinsic AdvSIMD_FPToIntRounding_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyint_ty];
  list<LLVMType> ParamTypes = [llvm_anyfloat_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_neon_fcvtms {	// SDPatternOperator Intrinsic AdvSIMD_FPToIntRounding_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyint_ty];
  list<LLVMType> ParamTypes = [llvm_anyfloat_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_neon_fcvtmu {	// SDPatternOperator Intrinsic AdvSIMD_FPToIntRounding_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyint_ty];
  list<LLVMType> ParamTypes = [llvm_anyfloat_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_neon_fcvtns {	// SDPatternOperator Intrinsic AdvSIMD_FPToIntRounding_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyint_ty];
  list<LLVMType> ParamTypes = [llvm_anyfloat_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_neon_fcvtnu {	// SDPatternOperator Intrinsic AdvSIMD_FPToIntRounding_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyint_ty];
  list<LLVMType> ParamTypes = [llvm_anyfloat_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_neon_fcvtps {	// SDPatternOperator Intrinsic AdvSIMD_FPToIntRounding_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyint_ty];
  list<LLVMType> ParamTypes = [llvm_anyfloat_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_neon_fcvtpu {	// SDPatternOperator Intrinsic AdvSIMD_FPToIntRounding_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyint_ty];
  list<LLVMType> ParamTypes = [llvm_anyfloat_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_neon_fcvtxn {	// SDPatternOperator Intrinsic AdvSIMD_1VectorArg_Expand_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [llvm_anyvector_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_neon_fcvtzs {	// SDPatternOperator Intrinsic AdvSIMD_FPToIntRounding_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyint_ty];
  list<LLVMType> ParamTypes = [llvm_anyfloat_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_neon_fcvtzu {	// SDPatternOperator Intrinsic AdvSIMD_FPToIntRounding_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyint_ty];
  list<LLVMType> ParamTypes = [llvm_anyfloat_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_neon_fmax {	// SDPatternOperator Intrinsic AdvSIMD_2VectorArg_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [anonymous_150, anonymous_151];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_neon_fmaxnm {	// SDPatternOperator Intrinsic AdvSIMD_2FloatArg_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyfloat_ty];
  list<LLVMType> ParamTypes = [anonymous_148, anonymous_149];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_neon_fmaxnmp {	// SDPatternOperator Intrinsic AdvSIMD_2VectorArg_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [anonymous_150, anonymous_151];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_neon_fmaxnmv {	// SDPatternOperator Intrinsic AdvSIMD_1VectorArg_Float_Across_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyfloat_ty];
  list<LLVMType> ParamTypes = [llvm_anyvector_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_neon_fmaxp {	// SDPatternOperator Intrinsic AdvSIMD_2VectorArg_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [anonymous_150, anonymous_151];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_neon_fmaxv {	// SDPatternOperator Intrinsic AdvSIMD_1VectorArg_Float_Across_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyfloat_ty];
  list<LLVMType> ParamTypes = [llvm_anyvector_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_neon_fmin {	// SDPatternOperator Intrinsic AdvSIMD_2VectorArg_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [anonymous_150, anonymous_151];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_neon_fminnm {	// SDPatternOperator Intrinsic AdvSIMD_2FloatArg_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyfloat_ty];
  list<LLVMType> ParamTypes = [anonymous_148, anonymous_149];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_neon_fminnmp {	// SDPatternOperator Intrinsic AdvSIMD_2VectorArg_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [anonymous_150, anonymous_151];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_neon_fminnmv {	// SDPatternOperator Intrinsic AdvSIMD_1VectorArg_Float_Across_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyfloat_ty];
  list<LLVMType> ParamTypes = [llvm_anyvector_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_neon_fminp {	// SDPatternOperator Intrinsic AdvSIMD_2VectorArg_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [anonymous_150, anonymous_151];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_neon_fminv {	// SDPatternOperator Intrinsic AdvSIMD_1VectorArg_Float_Across_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyfloat_ty];
  list<LLVMType> ParamTypes = [llvm_anyvector_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_neon_fmulx {	// SDPatternOperator Intrinsic AdvSIMD_2FloatArg_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyfloat_ty];
  list<LLVMType> ParamTypes = [anonymous_148, anonymous_149];
  list<IntrinsicProperty> Properties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_neon_frecpe {	// SDPatternOperator Intrinsic AdvSIMD_1FloatArg_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyfloat_ty];
  list<LLVMType> ParamTypes = [anonymous_142];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_neon_frecps {	// SDPatternOperator Intrinsic AdvSIMD_2FloatArg_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyfloat_ty];
  list<LLVMType> ParamTypes = [anonymous_148, anonymous_149];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_neon_frecpx {	// SDPatternOperator Intrinsic AdvSIMD_1FloatArg_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyfloat_ty];
  list<LLVMType> ParamTypes = [anonymous_142];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_neon_frintn {	// SDPatternOperator Intrinsic AdvSIMD_1FloatArg_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyfloat_ty];
  list<LLVMType> ParamTypes = [anonymous_142];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_neon_frsqrte {	// SDPatternOperator Intrinsic AdvSIMD_1FloatArg_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyfloat_ty];
  list<LLVMType> ParamTypes = [anonymous_142];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_neon_frsqrts {	// SDPatternOperator Intrinsic AdvSIMD_2FloatArg_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyfloat_ty];
  list<LLVMType> ParamTypes = [anonymous_148, anonymous_149];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_neon_ld1x2 {	// SDPatternOperator Intrinsic AdvSIMD_2Vec_Load_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyvector_ty, anonymous_176];
  list<LLVMType> ParamTypes = [anonymous_178];
  list<IntrinsicProperty> Properties = [IntrReadArgMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_neon_ld1x3 {	// SDPatternOperator Intrinsic AdvSIMD_3Vec_Load_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyvector_ty, anonymous_188, anonymous_189];
  list<LLVMType> ParamTypes = [anonymous_191];
  list<IntrinsicProperty> Properties = [IntrReadArgMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_neon_ld1x4 {	// SDPatternOperator Intrinsic AdvSIMD_4Vec_Load_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyvector_ty, anonymous_205, anonymous_206, anonymous_207];
  list<LLVMType> ParamTypes = [anonymous_209];
  list<IntrinsicProperty> Properties = [IntrReadArgMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_neon_ld2 {	// SDPatternOperator Intrinsic AdvSIMD_2Vec_Load_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyvector_ty, anonymous_176];
  list<LLVMType> ParamTypes = [anonymous_178];
  list<IntrinsicProperty> Properties = [IntrReadArgMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_neon_ld2lane {	// SDPatternOperator Intrinsic AdvSIMD_2Vec_Load_Lane_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyvector_ty, anonymous_179];
  list<LLVMType> ParamTypes = [anonymous_180, anonymous_181, llvm_i64_ty, llvm_anyptr_ty];
  list<IntrinsicProperty> Properties = [IntrReadArgMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_neon_ld2r {	// SDPatternOperator Intrinsic AdvSIMD_2Vec_Load_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyvector_ty, anonymous_176];
  list<LLVMType> ParamTypes = [anonymous_178];
  list<IntrinsicProperty> Properties = [IntrReadArgMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_neon_ld3 {	// SDPatternOperator Intrinsic AdvSIMD_3Vec_Load_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyvector_ty, anonymous_188, anonymous_189];
  list<LLVMType> ParamTypes = [anonymous_191];
  list<IntrinsicProperty> Properties = [IntrReadArgMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_neon_ld3lane {	// SDPatternOperator Intrinsic AdvSIMD_3Vec_Load_Lane_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyvector_ty, anonymous_192, anonymous_193];
  list<LLVMType> ParamTypes = [anonymous_194, anonymous_195, anonymous_196, llvm_i64_ty, llvm_anyptr_ty];
  list<IntrinsicProperty> Properties = [IntrReadArgMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_neon_ld3r {	// SDPatternOperator Intrinsic AdvSIMD_3Vec_Load_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyvector_ty, anonymous_188, anonymous_189];
  list<LLVMType> ParamTypes = [anonymous_191];
  list<IntrinsicProperty> Properties = [IntrReadArgMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_neon_ld4 {	// SDPatternOperator Intrinsic AdvSIMD_4Vec_Load_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyvector_ty, anonymous_205, anonymous_206, anonymous_207];
  list<LLVMType> ParamTypes = [anonymous_209];
  list<IntrinsicProperty> Properties = [IntrReadArgMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_neon_ld4lane {	// SDPatternOperator Intrinsic AdvSIMD_4Vec_Load_Lane_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyvector_ty, anonymous_210, anonymous_211, anonymous_212];
  list<LLVMType> ParamTypes = [anonymous_213, anonymous_214, anonymous_215, anonymous_216, llvm_i64_ty, llvm_anyptr_ty];
  list<IntrinsicProperty> Properties = [IntrReadArgMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_neon_ld4r {	// SDPatternOperator Intrinsic AdvSIMD_4Vec_Load_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyvector_ty, anonymous_205, anonymous_206, anonymous_207];
  list<LLVMType> ParamTypes = [anonymous_209];
  list<IntrinsicProperty> Properties = [IntrReadArgMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_neon_pmul {	// SDPatternOperator Intrinsic AdvSIMD_2VectorArg_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [anonymous_150, anonymous_151];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_neon_pmull {	// SDPatternOperator Intrinsic AdvSIMD_2VectorArg_Long_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [anonymous_154, anonymous_155];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_neon_pmull64 {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_neon_raddhn {	// SDPatternOperator Intrinsic AdvSIMD_2VectorArg_Narrow_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [anonymous_158, anonymous_159];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_neon_rbit {	// SDPatternOperator Intrinsic AdvSIMD_1VectorArg_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [anonymous_143];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_neon_rshrn {	// SDPatternOperator Intrinsic AdvSIMD_2Arg_Scalar_Narrow_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyint_ty];
  list<LLVMType> ParamTypes = [anonymous_160, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_neon_rsubhn {	// SDPatternOperator Intrinsic AdvSIMD_2VectorArg_Narrow_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [anonymous_158, anonymous_159];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_neon_sabd {	// SDPatternOperator Intrinsic AdvSIMD_2VectorArg_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [anonymous_150, anonymous_151];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_neon_saddlp {	// SDPatternOperator Intrinsic AdvSIMD_1VectorArg_Expand_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [llvm_anyvector_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_neon_saddlv {	// SDPatternOperator Intrinsic AdvSIMD_1VectorArg_Int_Across_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyint_ty];
  list<LLVMType> ParamTypes = [llvm_anyvector_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_neon_saddv {	// SDPatternOperator Intrinsic AdvSIMD_1VectorArg_Int_Across_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyint_ty];
  list<LLVMType> ParamTypes = [llvm_anyvector_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_neon_scalar_sqxtn {	// SDPatternOperator Intrinsic AdvSIMD_1IntArg_Narrow_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyint_ty];
  list<LLVMType> ParamTypes = [llvm_anyint_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_neon_scalar_sqxtun {	// SDPatternOperator Intrinsic AdvSIMD_1IntArg_Narrow_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyint_ty];
  list<LLVMType> ParamTypes = [llvm_anyint_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_neon_scalar_uqxtn {	// SDPatternOperator Intrinsic AdvSIMD_1IntArg_Narrow_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyint_ty];
  list<LLVMType> ParamTypes = [llvm_anyint_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_neon_shadd {	// SDPatternOperator Intrinsic AdvSIMD_2VectorArg_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [anonymous_150, anonymous_151];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_neon_shll {	// SDPatternOperator Intrinsic AdvSIMD_2VectorArg_Scalar_Wide_BySize_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [anonymous_161];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_neon_shsub {	// SDPatternOperator Intrinsic AdvSIMD_2VectorArg_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [anonymous_150, anonymous_151];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_neon_smax {	// SDPatternOperator Intrinsic AdvSIMD_2VectorArg_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [anonymous_150, anonymous_151];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_neon_smaxp {	// SDPatternOperator Intrinsic AdvSIMD_2VectorArg_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [anonymous_150, anonymous_151];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_neon_smaxv {	// SDPatternOperator Intrinsic AdvSIMD_1VectorArg_Int_Across_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyint_ty];
  list<LLVMType> ParamTypes = [llvm_anyvector_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_neon_smin {	// SDPatternOperator Intrinsic AdvSIMD_2VectorArg_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [anonymous_150, anonymous_151];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_neon_sminp {	// SDPatternOperator Intrinsic AdvSIMD_2VectorArg_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [anonymous_150, anonymous_151];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_neon_sminv {	// SDPatternOperator Intrinsic AdvSIMD_1VectorArg_Int_Across_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyint_ty];
  list<LLVMType> ParamTypes = [llvm_anyvector_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_neon_smull {	// SDPatternOperator Intrinsic AdvSIMD_2VectorArg_Long_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [anonymous_154, anonymous_155];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_neon_sqabs {	// SDPatternOperator Intrinsic AdvSIMD_1IntArg_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyint_ty];
  list<LLVMType> ParamTypes = [anonymous_141];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_neon_sqadd {	// SDPatternOperator Intrinsic AdvSIMD_2IntArg_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyint_ty];
  list<LLVMType> ParamTypes = [anonymous_146, anonymous_147];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_neon_sqdmulh {	// SDPatternOperator Intrinsic AdvSIMD_2IntArg_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyint_ty];
  list<LLVMType> ParamTypes = [anonymous_146, anonymous_147];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_neon_sqdmull {	// SDPatternOperator Intrinsic AdvSIMD_2VectorArg_Long_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [anonymous_154, anonymous_155];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_neon_sqdmulls_scalar {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_neon_sqneg {	// SDPatternOperator Intrinsic AdvSIMD_1IntArg_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyint_ty];
  list<LLVMType> ParamTypes = [anonymous_141];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_neon_sqrdmulh {	// SDPatternOperator Intrinsic AdvSIMD_2IntArg_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyint_ty];
  list<LLVMType> ParamTypes = [anonymous_146, anonymous_147];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_neon_sqrshl {	// SDPatternOperator Intrinsic AdvSIMD_2IntArg_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyint_ty];
  list<LLVMType> ParamTypes = [anonymous_146, anonymous_147];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_neon_sqrshrn {	// SDPatternOperator Intrinsic AdvSIMD_2Arg_Scalar_Narrow_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyint_ty];
  list<LLVMType> ParamTypes = [anonymous_160, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_neon_sqrshrun {	// SDPatternOperator Intrinsic AdvSIMD_2Arg_Scalar_Narrow_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyint_ty];
  list<LLVMType> ParamTypes = [anonymous_160, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_neon_sqshl {	// SDPatternOperator Intrinsic AdvSIMD_2IntArg_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyint_ty];
  list<LLVMType> ParamTypes = [anonymous_146, anonymous_147];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_neon_sqshlu {	// SDPatternOperator Intrinsic AdvSIMD_2IntArg_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyint_ty];
  list<LLVMType> ParamTypes = [anonymous_146, anonymous_147];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_neon_sqshrn {	// SDPatternOperator Intrinsic AdvSIMD_2Arg_Scalar_Narrow_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyint_ty];
  list<LLVMType> ParamTypes = [anonymous_160, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_neon_sqshrun {	// SDPatternOperator Intrinsic AdvSIMD_2Arg_Scalar_Narrow_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyint_ty];
  list<LLVMType> ParamTypes = [anonymous_160, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_neon_sqsub {	// SDPatternOperator Intrinsic AdvSIMD_2IntArg_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyint_ty];
  list<LLVMType> ParamTypes = [anonymous_146, anonymous_147];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_neon_sqxtn {	// SDPatternOperator Intrinsic AdvSIMD_1VectorArg_Narrow_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyint_ty];
  list<LLVMType> ParamTypes = [anonymous_145];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_neon_sqxtun {	// SDPatternOperator Intrinsic AdvSIMD_1VectorArg_Narrow_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyint_ty];
  list<LLVMType> ParamTypes = [anonymous_145];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_neon_srhadd {	// SDPatternOperator Intrinsic AdvSIMD_2VectorArg_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [anonymous_150, anonymous_151];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_neon_srshl {	// SDPatternOperator Intrinsic AdvSIMD_2IntArg_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyint_ty];
  list<LLVMType> ParamTypes = [anonymous_146, anonymous_147];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_neon_sshl {	// SDPatternOperator Intrinsic AdvSIMD_2IntArg_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyint_ty];
  list<LLVMType> ParamTypes = [anonymous_146, anonymous_147];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_neon_sshll {	// SDPatternOperator Intrinsic AdvSIMD_2VectorArg_Scalar_Wide_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [anonymous_162, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_neon_st1x2 {	// SDPatternOperator Intrinsic AdvSIMD_2Vec_Store_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_anyvector_ty, anonymous_182, anonymous_184];
  list<IntrinsicProperty> Properties = [IntrReadWriteArgMem, anonymous_185];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_neon_st1x3 {	// SDPatternOperator Intrinsic AdvSIMD_3Vec_Store_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_anyvector_ty, anonymous_197, anonymous_198, anonymous_200];
  list<IntrinsicProperty> Properties = [IntrReadWriteArgMem, anonymous_201];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_neon_st1x4 {	// SDPatternOperator Intrinsic AdvSIMD_4Vec_Store_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_anyvector_ty, anonymous_217, anonymous_218, anonymous_219, anonymous_221];
  list<IntrinsicProperty> Properties = [IntrReadWriteArgMem, anonymous_222];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_neon_st2 {	// SDPatternOperator Intrinsic AdvSIMD_2Vec_Store_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_anyvector_ty, anonymous_182, anonymous_184];
  list<IntrinsicProperty> Properties = [IntrReadWriteArgMem, anonymous_185];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_neon_st2lane {	// SDPatternOperator Intrinsic AdvSIMD_2Vec_Store_Lane_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_anyvector_ty, anonymous_186, llvm_i64_ty, llvm_anyptr_ty];
  list<IntrinsicProperty> Properties = [IntrReadWriteArgMem, anonymous_187];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_neon_st3 {	// SDPatternOperator Intrinsic AdvSIMD_3Vec_Store_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_anyvector_ty, anonymous_197, anonymous_198, anonymous_200];
  list<IntrinsicProperty> Properties = [IntrReadWriteArgMem, anonymous_201];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_neon_st3lane {	// SDPatternOperator Intrinsic AdvSIMD_3Vec_Store_Lane_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_anyvector_ty, anonymous_202, anonymous_203, llvm_i64_ty, llvm_anyptr_ty];
  list<IntrinsicProperty> Properties = [IntrReadWriteArgMem, anonymous_204];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_neon_st4 {	// SDPatternOperator Intrinsic AdvSIMD_4Vec_Store_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_anyvector_ty, anonymous_217, anonymous_218, anonymous_219, anonymous_221];
  list<IntrinsicProperty> Properties = [IntrReadWriteArgMem, anonymous_222];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_neon_st4lane {	// SDPatternOperator Intrinsic AdvSIMD_4Vec_Store_Lane_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_anyvector_ty, anonymous_223, anonymous_224, anonymous_225, llvm_i64_ty, llvm_anyptr_ty];
  list<IntrinsicProperty> Properties = [IntrReadWriteArgMem, anonymous_226];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_neon_subhn {	// SDPatternOperator Intrinsic AdvSIMD_2VectorArg_Narrow_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [anonymous_158, anonymous_159];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_neon_suqadd {	// SDPatternOperator Intrinsic AdvSIMD_2IntArg_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyint_ty];
  list<LLVMType> ParamTypes = [anonymous_146, anonymous_147];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_neon_tbl1 {	// SDPatternOperator Intrinsic AdvSIMD_Tbl1_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, anonymous_227];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_neon_tbl2 {	// SDPatternOperator Intrinsic AdvSIMD_Tbl2_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty, anonymous_228];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_neon_tbl3 {	// SDPatternOperator Intrinsic AdvSIMD_Tbl3_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty, llvm_v16i8_ty, anonymous_229];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_neon_tbl4 {	// SDPatternOperator Intrinsic AdvSIMD_Tbl4_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty, llvm_v16i8_ty, llvm_v16i8_ty, anonymous_230];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_neon_tbx1 {	// SDPatternOperator Intrinsic AdvSIMD_Tbx1_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [anonymous_231, llvm_v16i8_ty, anonymous_232];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_neon_tbx2 {	// SDPatternOperator Intrinsic AdvSIMD_Tbx2_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [anonymous_233, llvm_v16i8_ty, llvm_v16i8_ty, anonymous_234];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_neon_tbx3 {	// SDPatternOperator Intrinsic AdvSIMD_Tbx3_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [anonymous_235, llvm_v16i8_ty, llvm_v16i8_ty, llvm_v16i8_ty, anonymous_236];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_neon_tbx4 {	// SDPatternOperator Intrinsic AdvSIMD_Tbx4_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [anonymous_237, llvm_v16i8_ty, llvm_v16i8_ty, llvm_v16i8_ty, llvm_v16i8_ty, anonymous_238];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_neon_uabd {	// SDPatternOperator Intrinsic AdvSIMD_2VectorArg_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [anonymous_150, anonymous_151];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_neon_uaddlp {	// SDPatternOperator Intrinsic AdvSIMD_1VectorArg_Expand_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [llvm_anyvector_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_neon_uaddlv {	// SDPatternOperator Intrinsic AdvSIMD_1VectorArg_Int_Across_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyint_ty];
  list<LLVMType> ParamTypes = [llvm_anyvector_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_neon_uaddv {	// SDPatternOperator Intrinsic AdvSIMD_1VectorArg_Int_Across_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyint_ty];
  list<LLVMType> ParamTypes = [llvm_anyvector_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_neon_uhadd {	// SDPatternOperator Intrinsic AdvSIMD_2VectorArg_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [anonymous_150, anonymous_151];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_neon_uhsub {	// SDPatternOperator Intrinsic AdvSIMD_2VectorArg_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [anonymous_150, anonymous_151];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_neon_umax {	// SDPatternOperator Intrinsic AdvSIMD_2VectorArg_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [anonymous_150, anonymous_151];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_neon_umaxp {	// SDPatternOperator Intrinsic AdvSIMD_2VectorArg_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [anonymous_150, anonymous_151];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_neon_umaxv {	// SDPatternOperator Intrinsic AdvSIMD_1VectorArg_Int_Across_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyint_ty];
  list<LLVMType> ParamTypes = [llvm_anyvector_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_neon_umin {	// SDPatternOperator Intrinsic AdvSIMD_2VectorArg_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [anonymous_150, anonymous_151];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_neon_uminp {	// SDPatternOperator Intrinsic AdvSIMD_2VectorArg_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [anonymous_150, anonymous_151];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_neon_uminv {	// SDPatternOperator Intrinsic AdvSIMD_1VectorArg_Int_Across_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyint_ty];
  list<LLVMType> ParamTypes = [llvm_anyvector_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_neon_umull {	// SDPatternOperator Intrinsic AdvSIMD_2VectorArg_Long_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [anonymous_154, anonymous_155];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_neon_uqadd {	// SDPatternOperator Intrinsic AdvSIMD_2IntArg_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyint_ty];
  list<LLVMType> ParamTypes = [anonymous_146, anonymous_147];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_neon_uqrshl {	// SDPatternOperator Intrinsic AdvSIMD_2IntArg_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyint_ty];
  list<LLVMType> ParamTypes = [anonymous_146, anonymous_147];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_neon_uqrshrn {	// SDPatternOperator Intrinsic AdvSIMD_2Arg_Scalar_Narrow_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyint_ty];
  list<LLVMType> ParamTypes = [anonymous_160, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_neon_uqshl {	// SDPatternOperator Intrinsic AdvSIMD_2IntArg_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyint_ty];
  list<LLVMType> ParamTypes = [anonymous_146, anonymous_147];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_neon_uqshrn {	// SDPatternOperator Intrinsic AdvSIMD_2Arg_Scalar_Narrow_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyint_ty];
  list<LLVMType> ParamTypes = [anonymous_160, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_neon_uqsub {	// SDPatternOperator Intrinsic AdvSIMD_2IntArg_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyint_ty];
  list<LLVMType> ParamTypes = [anonymous_146, anonymous_147];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_neon_uqxtn {	// SDPatternOperator Intrinsic AdvSIMD_1VectorArg_Narrow_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyint_ty];
  list<LLVMType> ParamTypes = [anonymous_145];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_neon_urecpe {	// SDPatternOperator Intrinsic AdvSIMD_1VectorArg_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [anonymous_143];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_neon_urhadd {	// SDPatternOperator Intrinsic AdvSIMD_2VectorArg_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [anonymous_150, anonymous_151];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_neon_urshl {	// SDPatternOperator Intrinsic AdvSIMD_2IntArg_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyint_ty];
  list<LLVMType> ParamTypes = [anonymous_146, anonymous_147];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_neon_ursqrte {	// SDPatternOperator Intrinsic AdvSIMD_1VectorArg_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [anonymous_143];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_neon_ushl {	// SDPatternOperator Intrinsic AdvSIMD_2IntArg_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyint_ty];
  list<LLVMType> ParamTypes = [anonymous_146, anonymous_147];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_neon_ushll {	// SDPatternOperator Intrinsic AdvSIMD_2VectorArg_Scalar_Wide_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [anonymous_162, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_neon_usqadd {	// SDPatternOperator Intrinsic AdvSIMD_2IntArg_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyint_ty];
  list<LLVMType> ParamTypes = [anonymous_146, anonymous_147];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_neon_vcopy_lane {	// SDPatternOperator Intrinsic AdvSIMD_2Vector2Index_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [llvm_anyvector_ty, llvm_i64_ty, anonymous_172, llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_neon_vcvtfp2fxs {	// SDPatternOperator Intrinsic AdvSIMD_CvtFPToFx_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyint_ty];
  list<LLVMType> ParamTypes = [llvm_anyfloat_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_neon_vcvtfp2fxu {	// SDPatternOperator Intrinsic AdvSIMD_CvtFPToFx_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyint_ty];
  list<LLVMType> ParamTypes = [llvm_anyfloat_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_neon_vcvtfp2hf {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_v4i16_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_neon_vcvtfxs2fp {	// SDPatternOperator Intrinsic AdvSIMD_CvtFxToFP_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyfloat_ty];
  list<LLVMType> ParamTypes = [llvm_anyint_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_neon_vcvtfxu2fp {	// SDPatternOperator Intrinsic AdvSIMD_CvtFxToFP_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyfloat_ty];
  list<LLVMType> ParamTypes = [llvm_anyint_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_neon_vcvthf2fp {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_neon_vsli {	// SDPatternOperator Intrinsic AdvSIMD_3VectorArg_Scalar_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [anonymous_167, anonymous_168, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_neon_vsri {	// SDPatternOperator Intrinsic AdvSIMD_3VectorArg_Scalar_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [anonymous_167, anonymous_168, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_rbit {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyint_ty];
  list<LLVMType> ParamTypes = [anonymous_138];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_sdiv {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyint_ty];
  list<LLVMType> ParamTypes = [anonymous_134, anonymous_135];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_sisd_fabd {	// SDPatternOperator Intrinsic AdvSIMD_2Scalar_Float_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyfloat_ty];
  list<LLVMType> ParamTypes = [anonymous_139, anonymous_140];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_sisd_fcvtxn {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_double_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_stlxp {	// SDPatternOperator Intrinsic
  list<IntrinsicProperty> Intrinsic:properties = [];
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_ptr_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_stlxr {	// SDPatternOperator Intrinsic
  list<IntrinsicProperty> Intrinsic:properties = [];
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_anyptr_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_stxp {	// SDPatternOperator Intrinsic
  list<IntrinsicProperty> Intrinsic:properties = [];
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_ptr_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_stxr {	// SDPatternOperator Intrinsic
  list<IntrinsicProperty> Intrinsic:properties = [];
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_anyptr_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_aarch64_udiv {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "aarch64";
  list<LLVMType> RetTypes = [llvm_anyint_ty];
  list<LLVMType> ParamTypes = [anonymous_136, anonymous_137];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_adjust_trampoline {	// SDPatternOperator Intrinsic GCCBuiltin
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_ptr_ty];
  list<LLVMType> ParamTypes = [llvm_ptr_ty];
  list<IntrinsicProperty> Properties = [IntrReadArgMem];
  bit isTarget = 0;
  string GCCBuiltinName = "__builtin_adjust_trampoline";
  string NAME = ?;
}
def int_annotation {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.annotation";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_anyint_ty];
  list<LLVMType> ParamTypes = [anonymous_51, llvm_ptr_ty, llvm_ptr_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_cdp {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_arm_cdp";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_cdp2 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_arm_cdp2";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_clrex {	// SDPatternOperator Intrinsic
  list<LLVMType> Intrinsic:param_types = [];
  list<IntrinsicProperty> Intrinsic:properties = [];
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_crc32b {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_crc32cb {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_crc32ch {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_crc32cw {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_crc32h {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_crc32w {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_dbg {	// SDPatternOperator Intrinsic
  list<IntrinsicProperty> Intrinsic:properties = [];
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_dmb {	// GCCBuiltin MSBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_arm_dmb";
  string MSBuiltinName = "__dmb";
  list<IntrinsicProperty> Intrinsic:properties = [];
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_dsb {	// GCCBuiltin MSBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_arm_dsb";
  string MSBuiltinName = "__dsb";
  list<IntrinsicProperty> Intrinsic:properties = [];
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_get_fpscr {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_arm_get_fpscr";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_hint {	// SDPatternOperator Intrinsic
  list<IntrinsicProperty> Intrinsic:properties = [];
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_isb {	// GCCBuiltin MSBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_arm_isb";
  string MSBuiltinName = "__isb";
  list<IntrinsicProperty> Intrinsic:properties = [];
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_ldaex {	// SDPatternOperator Intrinsic
  list<IntrinsicProperty> Intrinsic:properties = [];
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_anyptr_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_ldaexd {	// SDPatternOperator Intrinsic
  list<IntrinsicProperty> Intrinsic:properties = [];
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_ptr_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_ldrex {	// SDPatternOperator Intrinsic
  list<IntrinsicProperty> Intrinsic:properties = [];
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_anyptr_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_ldrexd {	// SDPatternOperator Intrinsic
  list<IntrinsicProperty> Intrinsic:properties = [];
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_ptr_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_mcr {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_arm_mcr";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_mcr2 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_arm_mcr2";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_mcrr {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_arm_mcrr";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_mcrr2 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_arm_mcrr2";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_mrc {	// GCCBuiltin MSBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_arm_mrc";
  string MSBuiltinName = "_MoveFromCoprocessor";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_mrc2 {	// GCCBuiltin MSBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_arm_mrc2";
  string MSBuiltinName = "_MoveFromCoprocessor2";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_neon_aesd {	// SDPatternOperator Intrinsic AES_2Arg_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_neon_aese {	// SDPatternOperator Intrinsic AES_2Arg_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_neon_aesimc {	// SDPatternOperator Intrinsic AES_1Arg_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_neon_aesmc {	// SDPatternOperator Intrinsic AES_1Arg_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_neon_sha1c {	// SDPatternOperator Intrinsic SHA_3Arg_i32_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_neon_sha1h {	// SDPatternOperator Intrinsic SHA_1Arg_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_neon_sha1m {	// SDPatternOperator Intrinsic SHA_3Arg_i32_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_neon_sha1p {	// SDPatternOperator Intrinsic SHA_3Arg_i32_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_neon_sha1su0 {	// SDPatternOperator Intrinsic SHA_3Arg_v4i32_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_neon_sha1su1 {	// SDPatternOperator Intrinsic SHA_2Arg_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_neon_sha256h {	// SDPatternOperator Intrinsic SHA_3Arg_v4i32_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_neon_sha256h2 {	// SDPatternOperator Intrinsic SHA_3Arg_v4i32_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_neon_sha256su0 {	// SDPatternOperator Intrinsic SHA_2Arg_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_neon_sha256su1 {	// SDPatternOperator Intrinsic SHA_3Arg_v4i32_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_neon_vabds {	// SDPatternOperator Intrinsic Neon_2Arg_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [anonymous_83, anonymous_84];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_neon_vabdu {	// SDPatternOperator Intrinsic Neon_2Arg_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [anonymous_83, anonymous_84];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_neon_vabs {	// SDPatternOperator Intrinsic Neon_1Arg_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [anonymous_81];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_neon_vacge {	// SDPatternOperator Intrinsic Neon_Compare_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [llvm_anyvector_ty, anonymous_95];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_neon_vacgt {	// SDPatternOperator Intrinsic Neon_Compare_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [llvm_anyvector_ty, anonymous_95];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_neon_vbsl {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [anonymous_131, anonymous_132, anonymous_133];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_neon_vcls {	// SDPatternOperator Intrinsic Neon_1Arg_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [anonymous_81];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_neon_vcvtas {	// SDPatternOperator Intrinsic Neon_CvtFPtoInt_1Arg_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [llvm_anyvector_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_neon_vcvtau {	// SDPatternOperator Intrinsic Neon_CvtFPtoInt_1Arg_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [llvm_anyvector_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_neon_vcvtfp2fxs {	// SDPatternOperator Intrinsic Neon_CvtFPToFx_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_anyint_ty];
  list<LLVMType> ParamTypes = [llvm_anyfloat_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_neon_vcvtfp2fxu {	// SDPatternOperator Intrinsic Neon_CvtFPToFx_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_anyint_ty];
  list<LLVMType> ParamTypes = [llvm_anyfloat_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_neon_vcvtfp2hf {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_v4i16_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_neon_vcvtfxs2fp {	// SDPatternOperator Intrinsic Neon_CvtFxToFP_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_anyfloat_ty];
  list<LLVMType> ParamTypes = [llvm_anyint_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_neon_vcvtfxu2fp {	// SDPatternOperator Intrinsic Neon_CvtFxToFP_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_anyfloat_ty];
  list<LLVMType> ParamTypes = [llvm_anyint_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_neon_vcvthf2fp {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_neon_vcvtms {	// SDPatternOperator Intrinsic Neon_CvtFPtoInt_1Arg_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [llvm_anyvector_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_neon_vcvtmu {	// SDPatternOperator Intrinsic Neon_CvtFPtoInt_1Arg_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [llvm_anyvector_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_neon_vcvtns {	// SDPatternOperator Intrinsic Neon_CvtFPtoInt_1Arg_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [llvm_anyvector_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_neon_vcvtnu {	// SDPatternOperator Intrinsic Neon_CvtFPtoInt_1Arg_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [llvm_anyvector_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_neon_vcvtps {	// SDPatternOperator Intrinsic Neon_CvtFPtoInt_1Arg_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [llvm_anyvector_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_neon_vcvtpu {	// SDPatternOperator Intrinsic Neon_CvtFPtoInt_1Arg_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [llvm_anyvector_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_neon_vhadds {	// SDPatternOperator Intrinsic Neon_2Arg_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [anonymous_83, anonymous_84];
  list<IntrinsicProperty> Properties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_neon_vhaddu {	// SDPatternOperator Intrinsic Neon_2Arg_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [anonymous_83, anonymous_84];
  list<IntrinsicProperty> Properties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_neon_vhsubs {	// SDPatternOperator Intrinsic Neon_2Arg_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [anonymous_83, anonymous_84];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_neon_vhsubu {	// SDPatternOperator Intrinsic Neon_2Arg_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [anonymous_83, anonymous_84];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_neon_vld1 {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrReadArgMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_neon_vld2 {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_anyvector_ty, anonymous_98];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrReadArgMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_neon_vld2lane {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_anyvector_ty, anonymous_104];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, anonymous_105, anonymous_106, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrReadArgMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_neon_vld3 {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_anyvector_ty, anonymous_99, anonymous_100];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrReadArgMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_neon_vld3lane {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_anyvector_ty, anonymous_107, anonymous_108];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, anonymous_109, anonymous_110, anonymous_111, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrReadArgMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_neon_vld4 {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_anyvector_ty, anonymous_101, anonymous_102, anonymous_103];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrReadArgMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_neon_vld4lane {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_anyvector_ty, anonymous_112, anonymous_113, anonymous_114];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, anonymous_115, anonymous_116, anonymous_117, anonymous_118, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrReadArgMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_neon_vmaxnm {	// SDPatternOperator Intrinsic Neon_2Arg_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [anonymous_83, anonymous_84];
  list<IntrinsicProperty> Properties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_neon_vmaxs {	// SDPatternOperator Intrinsic Neon_2Arg_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [anonymous_83, anonymous_84];
  list<IntrinsicProperty> Properties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_neon_vmaxu {	// SDPatternOperator Intrinsic Neon_2Arg_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [anonymous_83, anonymous_84];
  list<IntrinsicProperty> Properties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_neon_vminnm {	// SDPatternOperator Intrinsic Neon_2Arg_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [anonymous_83, anonymous_84];
  list<IntrinsicProperty> Properties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_neon_vmins {	// SDPatternOperator Intrinsic Neon_2Arg_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [anonymous_83, anonymous_84];
  list<IntrinsicProperty> Properties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_neon_vminu {	// SDPatternOperator Intrinsic Neon_2Arg_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [anonymous_83, anonymous_84];
  list<IntrinsicProperty> Properties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_neon_vmullp {	// SDPatternOperator Intrinsic Neon_2Arg_Long_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [anonymous_87, anonymous_88];
  list<IntrinsicProperty> Properties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_neon_vmulls {	// SDPatternOperator Intrinsic Neon_2Arg_Long_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [anonymous_87, anonymous_88];
  list<IntrinsicProperty> Properties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_neon_vmullu {	// SDPatternOperator Intrinsic Neon_2Arg_Long_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [anonymous_87, anonymous_88];
  list<IntrinsicProperty> Properties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_neon_vmulp {	// SDPatternOperator Intrinsic Neon_2Arg_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [anonymous_83, anonymous_84];
  list<IntrinsicProperty> Properties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_neon_vpadals {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [anonymous_96, llvm_anyvector_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_neon_vpadalu {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [anonymous_97, llvm_anyvector_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_neon_vpadd {	// SDPatternOperator Intrinsic Neon_2Arg_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [anonymous_83, anonymous_84];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_neon_vpaddls {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [llvm_anyvector_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_neon_vpaddlu {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [llvm_anyvector_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_neon_vpmaxs {	// SDPatternOperator Intrinsic Neon_2Arg_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [anonymous_83, anonymous_84];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_neon_vpmaxu {	// SDPatternOperator Intrinsic Neon_2Arg_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [anonymous_83, anonymous_84];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_neon_vpmins {	// SDPatternOperator Intrinsic Neon_2Arg_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [anonymous_83, anonymous_84];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_neon_vpminu {	// SDPatternOperator Intrinsic Neon_2Arg_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [anonymous_83, anonymous_84];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_neon_vqabs {	// SDPatternOperator Intrinsic Neon_1Arg_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [anonymous_81];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_neon_vqadds {	// SDPatternOperator Intrinsic Neon_2Arg_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [anonymous_83, anonymous_84];
  list<IntrinsicProperty> Properties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_neon_vqaddu {	// SDPatternOperator Intrinsic Neon_2Arg_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [anonymous_83, anonymous_84];
  list<IntrinsicProperty> Properties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_neon_vqdmulh {	// SDPatternOperator Intrinsic Neon_2Arg_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [anonymous_83, anonymous_84];
  list<IntrinsicProperty> Properties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_neon_vqdmull {	// SDPatternOperator Intrinsic Neon_2Arg_Long_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [anonymous_87, anonymous_88];
  list<IntrinsicProperty> Properties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_neon_vqmovns {	// SDPatternOperator Intrinsic Neon_1Arg_Narrow_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [anonymous_82];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_neon_vqmovnsu {	// SDPatternOperator Intrinsic Neon_1Arg_Narrow_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [anonymous_82];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_neon_vqmovnu {	// SDPatternOperator Intrinsic Neon_1Arg_Narrow_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [anonymous_82];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_neon_vqneg {	// SDPatternOperator Intrinsic Neon_1Arg_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [anonymous_81];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_neon_vqrdmulh {	// SDPatternOperator Intrinsic Neon_2Arg_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [anonymous_83, anonymous_84];
  list<IntrinsicProperty> Properties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_neon_vqrshiftns {	// SDPatternOperator Intrinsic Neon_2Arg_Narrow_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [anonymous_85, anonymous_86];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_neon_vqrshiftnsu {	// SDPatternOperator Intrinsic Neon_2Arg_Narrow_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [anonymous_85, anonymous_86];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_neon_vqrshiftnu {	// SDPatternOperator Intrinsic Neon_2Arg_Narrow_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [anonymous_85, anonymous_86];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_neon_vqrshifts {	// SDPatternOperator Intrinsic Neon_2Arg_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [anonymous_83, anonymous_84];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_neon_vqrshiftu {	// SDPatternOperator Intrinsic Neon_2Arg_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [anonymous_83, anonymous_84];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_neon_vqshiftns {	// SDPatternOperator Intrinsic Neon_2Arg_Narrow_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [anonymous_85, anonymous_86];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_neon_vqshiftnsu {	// SDPatternOperator Intrinsic Neon_2Arg_Narrow_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [anonymous_85, anonymous_86];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_neon_vqshiftnu {	// SDPatternOperator Intrinsic Neon_2Arg_Narrow_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [anonymous_85, anonymous_86];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_neon_vqshifts {	// SDPatternOperator Intrinsic Neon_2Arg_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [anonymous_83, anonymous_84];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_neon_vqshiftsu {	// SDPatternOperator Intrinsic Neon_2Arg_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [anonymous_83, anonymous_84];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_neon_vqshiftu {	// SDPatternOperator Intrinsic Neon_2Arg_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [anonymous_83, anonymous_84];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_neon_vqsubs {	// SDPatternOperator Intrinsic Neon_2Arg_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [anonymous_83, anonymous_84];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_neon_vqsubu {	// SDPatternOperator Intrinsic Neon_2Arg_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [anonymous_83, anonymous_84];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_neon_vraddhn {	// SDPatternOperator Intrinsic Neon_2Arg_Narrow_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [anonymous_85, anonymous_86];
  list<IntrinsicProperty> Properties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_neon_vrecpe {	// SDPatternOperator Intrinsic Neon_1Arg_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [anonymous_81];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_neon_vrecps {	// SDPatternOperator Intrinsic Neon_2Arg_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [anonymous_83, anonymous_84];
  list<IntrinsicProperty> Properties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_neon_vrhadds {	// SDPatternOperator Intrinsic Neon_2Arg_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [anonymous_83, anonymous_84];
  list<IntrinsicProperty> Properties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_neon_vrhaddu {	// SDPatternOperator Intrinsic Neon_2Arg_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [anonymous_83, anonymous_84];
  list<IntrinsicProperty> Properties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_neon_vrinta {	// SDPatternOperator Intrinsic Neon_1Arg_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [anonymous_81];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_neon_vrintm {	// SDPatternOperator Intrinsic Neon_1Arg_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [anonymous_81];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_neon_vrintn {	// SDPatternOperator Intrinsic Neon_1Arg_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [anonymous_81];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_neon_vrintp {	// SDPatternOperator Intrinsic Neon_1Arg_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [anonymous_81];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_neon_vrintx {	// SDPatternOperator Intrinsic Neon_1Arg_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [anonymous_81];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_neon_vrintz {	// SDPatternOperator Intrinsic Neon_1Arg_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [anonymous_81];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_neon_vrshiftn {	// SDPatternOperator Intrinsic Neon_2Arg_Narrow_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [anonymous_85, anonymous_86];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_neon_vrshifts {	// SDPatternOperator Intrinsic Neon_2Arg_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [anonymous_83, anonymous_84];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_neon_vrshiftu {	// SDPatternOperator Intrinsic Neon_2Arg_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [anonymous_83, anonymous_84];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_neon_vrsqrte {	// SDPatternOperator Intrinsic Neon_1Arg_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [anonymous_81];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_neon_vrsqrts {	// SDPatternOperator Intrinsic Neon_2Arg_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [anonymous_83, anonymous_84];
  list<IntrinsicProperty> Properties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_neon_vrsubhn {	// SDPatternOperator Intrinsic Neon_2Arg_Narrow_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [anonymous_85, anonymous_86];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_neon_vshiftins {	// SDPatternOperator Intrinsic Neon_3Arg_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [anonymous_89, anonymous_90, anonymous_91];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_neon_vshifts {	// SDPatternOperator Intrinsic Neon_2Arg_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [anonymous_83, anonymous_84];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_neon_vshiftu {	// SDPatternOperator Intrinsic Neon_2Arg_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [anonymous_83, anonymous_84];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_neon_vst1 {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_anyvector_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrReadWriteArgMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_neon_vst2 {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_anyvector_ty, anonymous_119, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrReadWriteArgMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_neon_vst2lane {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_anyvector_ty, anonymous_125, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrReadWriteArgMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_neon_vst3 {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_anyvector_ty, anonymous_120, anonymous_121, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrReadWriteArgMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_neon_vst3lane {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_anyvector_ty, anonymous_126, anonymous_127, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrReadWriteArgMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_neon_vst4 {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_anyvector_ty, anonymous_122, anonymous_123, anonymous_124, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrReadWriteArgMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_neon_vst4lane {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_anyvector_ty, anonymous_128, anonymous_129, anonymous_130, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrReadWriteArgMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_neon_vtbl1 {	// SDPatternOperator Intrinsic Neon_Tbl2Arg_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_v8i8_ty];
  list<LLVMType> ParamTypes = [llvm_v8i8_ty, llvm_v8i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_neon_vtbl2 {	// SDPatternOperator Intrinsic Neon_Tbl3Arg_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_v8i8_ty];
  list<LLVMType> ParamTypes = [llvm_v8i8_ty, llvm_v8i8_ty, llvm_v8i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_neon_vtbl3 {	// SDPatternOperator Intrinsic Neon_Tbl4Arg_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_v8i8_ty];
  list<LLVMType> ParamTypes = [llvm_v8i8_ty, llvm_v8i8_ty, llvm_v8i8_ty, llvm_v8i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_neon_vtbl4 {	// SDPatternOperator Intrinsic Neon_Tbl5Arg_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_v8i8_ty];
  list<LLVMType> ParamTypes = [llvm_v8i8_ty, llvm_v8i8_ty, llvm_v8i8_ty, llvm_v8i8_ty, llvm_v8i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_neon_vtbx1 {	// SDPatternOperator Intrinsic Neon_Tbl3Arg_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_v8i8_ty];
  list<LLVMType> ParamTypes = [llvm_v8i8_ty, llvm_v8i8_ty, llvm_v8i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_neon_vtbx2 {	// SDPatternOperator Intrinsic Neon_Tbl4Arg_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_v8i8_ty];
  list<LLVMType> ParamTypes = [llvm_v8i8_ty, llvm_v8i8_ty, llvm_v8i8_ty, llvm_v8i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_neon_vtbx3 {	// SDPatternOperator Intrinsic Neon_Tbl5Arg_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_v8i8_ty];
  list<LLVMType> ParamTypes = [llvm_v8i8_ty, llvm_v8i8_ty, llvm_v8i8_ty, llvm_v8i8_ty, llvm_v8i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_neon_vtbx4 {	// SDPatternOperator Intrinsic Neon_Tbl6Arg_Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_v8i8_ty];
  list<LLVMType> ParamTypes = [llvm_v8i8_ty, llvm_v8i8_ty, llvm_v8i8_ty, llvm_v8i8_ty, llvm_v8i8_ty, llvm_v8i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_qadd {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_arm_qadd";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_qsub {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_arm_qsub";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_rbit {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_set_fpscr {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_arm_set_fpscr";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_space {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_ssat {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_arm_ssat";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_stlex {	// SDPatternOperator Intrinsic
  list<IntrinsicProperty> Intrinsic:properties = [];
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_anyptr_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_stlexd {	// SDPatternOperator Intrinsic
  list<IntrinsicProperty> Intrinsic:properties = [];
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_ptr_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_strex {	// SDPatternOperator Intrinsic
  list<IntrinsicProperty> Intrinsic:properties = [];
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_anyptr_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_strexd {	// SDPatternOperator Intrinsic
  list<IntrinsicProperty> Intrinsic:properties = [];
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_ptr_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_thread_pointer {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_thread_pointer";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_ptr_ty];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_undefined {	// SDPatternOperator Intrinsic
  list<IntrinsicProperty> Intrinsic:properties = [];
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_usat {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_arm_usat";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_vcvtr {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_anyfloat_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_arm_vcvtru {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "arm";
  list<LLVMType> RetTypes = [llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_anyfloat_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_assume {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i1_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_bitset_test {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i1_ty];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_metadata_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_bpf_load_byte {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_bpf_load_byte";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "bpf";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrReadMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_bpf_load_half {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_bpf_load_half";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "bpf";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrReadMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_bpf_load_word {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_bpf_load_word";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "bpf";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrReadMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_bpf_pseudo {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_bpf_pseudo";
  list<IntrinsicProperty> Intrinsic:properties = [];
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "bpf";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_bswap {	// SDPatternOperator Intrinsic
  list<IntrinsicProperty> Intrinsic:properties = [];
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_anyint_ty];
  list<LLVMType> ParamTypes = [anonymous_43];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_canonicalize {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_anyfloat_ty];
  list<LLVMType> ParamTypes = [anonymous_40];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ceil {	// SDPatternOperator Intrinsic
  list<IntrinsicProperty> Intrinsic:properties = [];
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_anyfloat_ty];
  list<LLVMType> ParamTypes = [anonymous_35];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_clear_cache {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.clear_cache";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_ptr_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_convert_from_fp16 {	// SDPatternOperator Intrinsic
  list<IntrinsicProperty> Intrinsic:properties = [];
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_anyfloat_ty];
  list<LLVMType> ParamTypes = [llvm_i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_convert_to_fp16 {	// SDPatternOperator Intrinsic
  list<IntrinsicProperty> Intrinsic:properties = [];
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i16_ty];
  list<LLVMType> ParamTypes = [llvm_anyfloat_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_convertff {	// SDPatternOperator Intrinsic
  list<IntrinsicProperty> Intrinsic:properties = [];
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_anyfloat_ty];
  list<LLVMType> ParamTypes = [llvm_anyfloat_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_convertfsi {	// SDPatternOperator Intrinsic
  list<IntrinsicProperty> Intrinsic:properties = [];
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_anyfloat_ty];
  list<LLVMType> ParamTypes = [llvm_anyint_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_convertfui {	// SDPatternOperator Intrinsic
  list<IntrinsicProperty> Intrinsic:properties = [];
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_anyfloat_ty];
  list<LLVMType> ParamTypes = [llvm_anyint_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_convertsif {	// SDPatternOperator Intrinsic
  list<IntrinsicProperty> Intrinsic:properties = [];
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_anyint_ty];
  list<LLVMType> ParamTypes = [llvm_anyfloat_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_convertss {	// SDPatternOperator Intrinsic
  list<IntrinsicProperty> Intrinsic:properties = [];
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_anyint_ty];
  list<LLVMType> ParamTypes = [llvm_anyint_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_convertsu {	// SDPatternOperator Intrinsic
  list<IntrinsicProperty> Intrinsic:properties = [];
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_anyint_ty];
  list<LLVMType> ParamTypes = [llvm_anyint_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_convertuif {	// SDPatternOperator Intrinsic
  list<IntrinsicProperty> Intrinsic:properties = [];
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_anyint_ty];
  list<LLVMType> ParamTypes = [llvm_anyfloat_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_convertus {	// SDPatternOperator Intrinsic
  list<IntrinsicProperty> Intrinsic:properties = [];
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_anyint_ty];
  list<LLVMType> ParamTypes = [llvm_anyint_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_convertuu {	// SDPatternOperator Intrinsic
  list<IntrinsicProperty> Intrinsic:properties = [];
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_anyint_ty];
  list<LLVMType> ParamTypes = [llvm_anyint_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_copysign {	// SDPatternOperator Intrinsic
  list<IntrinsicProperty> Intrinsic:properties = [];
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_anyfloat_ty];
  list<LLVMType> ParamTypes = [anonymous_32, anonymous_33];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_cos {	// SDPatternOperator Intrinsic
  list<IntrinsicProperty> Intrinsic:properties = [];
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_anyfloat_ty];
  list<LLVMType> ParamTypes = [anonymous_19];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ctlz {	// SDPatternOperator Intrinsic
  list<IntrinsicProperty> Intrinsic:properties = [];
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_anyint_ty];
  list<LLVMType> ParamTypes = [anonymous_45, llvm_i1_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ctpop {	// SDPatternOperator Intrinsic
  list<IntrinsicProperty> Intrinsic:properties = [];
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_anyint_ty];
  list<LLVMType> ParamTypes = [anonymous_44];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_cttz {	// SDPatternOperator Intrinsic
  list<IntrinsicProperty> Intrinsic:properties = [];
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_anyint_ty];
  list<LLVMType> ParamTypes = [anonymous_46, llvm_i1_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_cuda_syncthreads {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__syncthreads";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> Properties = [IntrNoDuplicate];
  bit isTarget = 0;
  string NAME = ?;
}
def int_dbg_declare {	// SDPatternOperator Intrinsic
  list<IntrinsicProperty> Intrinsic:properties = [];
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_metadata_ty, llvm_metadata_ty, llvm_metadata_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_dbg_value {	// SDPatternOperator Intrinsic
  list<IntrinsicProperty> Intrinsic:properties = [];
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_metadata_ty, llvm_i64_ty, llvm_metadata_ty, llvm_metadata_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_debugtrap {	// SDPatternOperator Intrinsic GCCBuiltin
  list<LLVMType> Intrinsic:param_types = [];
  list<IntrinsicProperty> Intrinsic:properties = [];
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__builtin_debugtrap";
  string NAME = ?;
}
def int_donothing {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_eh_actions {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_ptr_ty];
  list<LLVMType> ParamTypes = [llvm_vararg_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_eh_begincatch {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_ptr_ty];
  list<IntrinsicProperty> Properties = [anonymous_47, anonymous_48];
  bit isTarget = 0;
  string NAME = ?;
}
def int_eh_dwarf_cfa {	// SDPatternOperator Intrinsic
  list<IntrinsicProperty> Intrinsic:properties = [];
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_ptr_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_eh_endcatch {	// SDPatternOperator Intrinsic
  list<IntrinsicProperty> Intrinsic:properties = [];
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_eh_exceptioncode {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> Properties = [IntrReadMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_eh_return_i32 {	// SDPatternOperator Intrinsic
  list<IntrinsicProperty> Intrinsic:properties = [];
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_ptr_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_eh_return_i64 {	// SDPatternOperator Intrinsic
  list<IntrinsicProperty> Intrinsic:properties = [];
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_ptr_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_eh_sjlj_callsite {	// SDPatternOperator Intrinsic
  list<IntrinsicProperty> Intrinsic:properties = [];
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_eh_sjlj_functioncontext {	// SDPatternOperator Intrinsic
  list<IntrinsicProperty> Intrinsic:properties = [];
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_ptr_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_eh_sjlj_longjmp {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_ptr_ty];
  list<IntrinsicProperty> Properties = [IntrNoReturn];
  bit isTarget = 0;
  string NAME = ?;
}
def int_eh_sjlj_lsda {	// SDPatternOperator Intrinsic
  list<LLVMType> Intrinsic:param_types = [];
  list<IntrinsicProperty> Intrinsic:properties = [];
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_ptr_ty];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_eh_sjlj_setjmp {	// SDPatternOperator Intrinsic
  list<IntrinsicProperty> Intrinsic:properties = [];
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_ptr_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_eh_typeid_for {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_ptr_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_eh_unwind_init {	// SDPatternOperator Intrinsic GCCBuiltin
  list<LLVMType> Intrinsic:param_types = [];
  list<IntrinsicProperty> Intrinsic:properties = [];
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__builtin_unwind_init";
  string NAME = ?;
}
def int_exp {	// SDPatternOperator Intrinsic
  list<IntrinsicProperty> Intrinsic:properties = [];
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_anyfloat_ty];
  list<LLVMType> ParamTypes = [anonymous_25];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_exp2 {	// SDPatternOperator Intrinsic
  list<IntrinsicProperty> Intrinsic:properties = [];
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_anyfloat_ty];
  list<LLVMType> ParamTypes = [anonymous_26];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_expect {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_anyint_ty];
  list<LLVMType> ParamTypes = [anonymous_41, anonymous_42];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_experimental_gc_relocate {	// SDPatternOperator Intrinsic
  list<IntrinsicProperty> Intrinsic:properties = [];
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_anyptr_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_experimental_gc_result {	// SDPatternOperator Intrinsic
  list<IntrinsicProperty> Intrinsic:properties = [];
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_any_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_experimental_gc_result_float {	// SDPatternOperator Intrinsic
  list<IntrinsicProperty> Intrinsic:properties = [];
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_anyfloat_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_experimental_gc_result_int {	// SDPatternOperator Intrinsic
  list<IntrinsicProperty> Intrinsic:properties = [];
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_anyint_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_experimental_gc_result_ptr {	// SDPatternOperator Intrinsic
  list<IntrinsicProperty> Intrinsic:properties = [];
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_anyptr_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_experimental_gc_statepoint {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_anyptr_ty, llvm_i32_ty, llvm_i32_ty, llvm_vararg_ty];
  list<IntrinsicProperty> Properties = [Throws];
  bit isTarget = 0;
  string NAME = ?;
}
def int_experimental_patchpoint_i64 {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_ptr_ty, llvm_i32_ty, llvm_vararg_ty];
  list<IntrinsicProperty> Properties = [Throws];
  bit isTarget = 0;
  string NAME = ?;
}
def int_experimental_patchpoint_void {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_ptr_ty, llvm_i32_ty, llvm_vararg_ty];
  list<IntrinsicProperty> Properties = [Throws];
  bit isTarget = 0;
  string NAME = ?;
}
def int_experimental_stackmap {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_vararg_ty];
  list<IntrinsicProperty> Properties = [Throws];
  bit isTarget = 0;
  string NAME = ?;
}
def int_fabs {	// SDPatternOperator Intrinsic
  list<IntrinsicProperty> Intrinsic:properties = [];
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_anyfloat_ty];
  list<LLVMType> ParamTypes = [anonymous_27];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_floor {	// SDPatternOperator Intrinsic
  list<IntrinsicProperty> Intrinsic:properties = [];
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_anyfloat_ty];
  list<LLVMType> ParamTypes = [anonymous_34];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_flt_rounds {	// SDPatternOperator Intrinsic GCCBuiltin
  list<LLVMType> Intrinsic:param_types = [];
  list<IntrinsicProperty> Intrinsic:properties = [];
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__builtin_flt_rounds";
  string NAME = ?;
}
def int_fma {	// SDPatternOperator Intrinsic
  list<IntrinsicProperty> Intrinsic:properties = [];
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_anyfloat_ty];
  list<LLVMType> ParamTypes = [anonymous_10, anonymous_11, anonymous_12];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_fmuladd {	// SDPatternOperator Intrinsic
  list<IntrinsicProperty> Intrinsic:properties = [];
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_anyfloat_ty];
  list<LLVMType> ParamTypes = [anonymous_13, anonymous_14, anonymous_15];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_frameaddress {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_ptr_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_gcread {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_ptr_ty];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_ptrptr_ty];
  list<IntrinsicProperty> Properties = [IntrReadArgMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_gcroot {	// SDPatternOperator Intrinsic
  list<IntrinsicProperty> Intrinsic:properties = [];
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_ptrptr_ty, llvm_ptr_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_gcwrite {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_ptr_ty, llvm_ptrptr_ty];
  list<IntrinsicProperty> Properties = [IntrReadWriteArgMem, anonymous_0, anonymous_1];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A2_abs {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_si_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A2_abs";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A2_absp {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_di_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A2_absp";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A2_abssat {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_si_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A2_abssat";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A2_add {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A2_add";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A2_addh_h16_hh {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A2_addh_h16_hh";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A2_addh_h16_hl {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A2_addh_h16_hl";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A2_addh_h16_lh {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A2_addh_h16_lh";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A2_addh_h16_ll {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A2_addh_h16_ll";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A2_addh_h16_sat_hh {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A2_addh_h16_sat_hh";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A2_addh_h16_sat_hl {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A2_addh_h16_sat_hl";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A2_addh_h16_sat_lh {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A2_addh_h16_sat_lh";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A2_addh_h16_sat_ll {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A2_addh_h16_sat_ll";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A2_addh_l16_hl {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A2_addh_l16_hl";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A2_addh_l16_ll {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A2_addh_l16_ll";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A2_addh_l16_sat_hl {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A2_addh_l16_sat_hl";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A2_addh_l16_sat_ll {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A2_addh_l16_sat_ll";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A2_addi {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A2_addi";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A2_addp {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A2_addp";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A2_addpsat {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A2_addpsat";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A2_addsat {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A2_addsat";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A2_addsp {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_sidi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A2_addsp";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A2_and {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A2_and";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A2_andir {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A2_andir";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A2_andp {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A2_andp";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A2_aslh {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_si_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A2_aslh";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A2_asrh {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_si_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A2_asrh";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A2_combine_hh {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A2_combine_hh";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A2_combine_hl {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A2_combine_hl";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A2_combine_lh {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A2_combine_lh";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A2_combine_ll {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A2_combine_ll";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A2_combineii {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A2_combineii";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A2_combinew {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A2_combinew";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A2_max {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A2_max";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A2_maxp {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A2_maxp";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A2_maxu {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A2_maxu";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A2_maxup {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A2_maxup";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A2_min {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A2_min";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A2_minp {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A2_minp";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A2_minu {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A2_minu";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A2_minup {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A2_minup";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A2_neg {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_si_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A2_neg";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A2_negp {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_di_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A2_negp";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A2_negsat {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_si_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A2_negsat";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A2_not {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_si_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A2_not";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A2_notp {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_di_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A2_notp";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A2_or {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A2_or";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A2_orir {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A2_orir";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A2_orp {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A2_orp";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A2_roundsat {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_di_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A2_roundsat";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A2_sat {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_di_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A2_sat";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A2_satb {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_si_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A2_satb";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A2_sath {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_si_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A2_sath";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A2_satub {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_si_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A2_satub";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A2_satuh {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_si_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A2_satuh";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A2_sub {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A2_sub";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A2_subh_h16_hh {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A2_subh_h16_hh";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A2_subh_h16_hl {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A2_subh_h16_hl";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A2_subh_h16_lh {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A2_subh_h16_lh";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A2_subh_h16_ll {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A2_subh_h16_ll";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A2_subh_h16_sat_hh {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A2_subh_h16_sat_hh";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A2_subh_h16_sat_hl {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A2_subh_h16_sat_hl";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A2_subh_h16_sat_lh {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A2_subh_h16_sat_lh";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A2_subh_h16_sat_ll {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A2_subh_h16_sat_ll";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A2_subh_l16_hl {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A2_subh_l16_hl";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A2_subh_l16_ll {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A2_subh_l16_ll";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A2_subh_l16_sat_hl {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A2_subh_l16_sat_hl";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A2_subh_l16_sat_ll {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A2_subh_l16_sat_ll";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A2_subp {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A2_subp";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A2_subri {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A2_subri";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A2_subsat {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A2_subsat";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A2_svaddh {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A2_svaddh";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A2_svaddhs {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A2_svaddhs";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A2_svadduhs {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A2_svadduhs";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A2_svavgh {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A2_svavgh";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A2_svavghs {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A2_svavghs";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A2_svnavgh {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A2_svnavgh";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A2_svsubh {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A2_svsubh";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A2_svsubhs {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A2_svsubhs";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A2_svsubuhs {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A2_svsubuhs";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A2_swiz {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_si_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A2_swiz";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A2_sxtb {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_si_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A2_sxtb";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A2_sxth {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_si_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A2_sxth";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A2_sxtw {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_si_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A2_sxtw";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A2_tfr {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_si_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A2_tfr";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A2_tfrih {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A2_tfrih";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A2_tfril {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A2_tfril";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A2_tfrp {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_di_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A2_tfrp";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A2_tfrpi {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_di_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A2_tfrpi";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A2_tfrsi {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_si_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A2_tfrsi";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A2_vabsh {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_di_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A2_vabsh";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A2_vabshsat {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_di_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A2_vabshsat";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A2_vabsw {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_di_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A2_vabsw";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A2_vabswsat {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_di_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A2_vabswsat";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A2_vaddb_map {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A2_vaddb_map";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A2_vaddh {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A2_vaddh";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A2_vaddhs {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A2_vaddhs";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A2_vaddub {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A2_vaddub";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A2_vaddubs {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A2_vaddubs";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A2_vadduhs {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A2_vadduhs";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A2_vaddw {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A2_vaddw";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A2_vaddws {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A2_vaddws";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A2_vavgh {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A2_vavgh";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A2_vavghcr {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A2_vavghcr";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A2_vavghr {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A2_vavghr";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A2_vavgub {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A2_vavgub";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A2_vavgubr {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A2_vavgubr";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A2_vavguh {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A2_vavguh";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A2_vavguhr {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A2_vavguhr";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A2_vavguw {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A2_vavguw";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A2_vavguwr {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A2_vavguwr";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A2_vavgw {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A2_vavgw";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A2_vavgwcr {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A2_vavgwcr";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A2_vavgwr {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A2_vavgwr";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A2_vcmpbeq {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_didi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A2_vcmpbeq";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A2_vcmpbgtu {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_didi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A2_vcmpbgtu";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A2_vcmpheq {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_didi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A2_vcmpheq";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A2_vcmphgt {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_didi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A2_vcmphgt";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A2_vcmphgtu {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_didi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A2_vcmphgtu";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A2_vcmpweq {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_didi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A2_vcmpweq";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A2_vcmpwgt {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_didi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A2_vcmpwgt";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A2_vcmpwgtu {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_didi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A2_vcmpwgtu";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A2_vconj {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_di_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A2_vconj";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A2_vmaxb {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A2_vmaxb";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A2_vmaxh {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A2_vmaxh";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A2_vmaxub {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A2_vmaxub";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A2_vmaxuh {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A2_vmaxuh";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A2_vmaxuw {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A2_vmaxuw";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A2_vmaxw {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A2_vmaxw";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A2_vminb {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A2_vminb";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A2_vminh {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A2_vminh";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A2_vminub {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A2_vminub";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A2_vminuh {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A2_vminuh";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A2_vminuw {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A2_vminuw";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A2_vminw {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A2_vminw";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A2_vnavgh {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A2_vnavgh";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A2_vnavghcr {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A2_vnavghcr";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A2_vnavghr {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A2_vnavghr";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A2_vnavgw {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A2_vnavgw";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A2_vnavgwcr {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A2_vnavgwcr";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A2_vnavgwr {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A2_vnavgwr";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A2_vraddub {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A2_vraddub";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A2_vraddub_acc {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_dididi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A2_vraddub_acc";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A2_vrsadub {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A2_vrsadub";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A2_vrsadub_acc {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_dididi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A2_vrsadub_acc";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A2_vsubb_map {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A2_vsubb_map";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A2_vsubh {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A2_vsubh";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A2_vsubhs {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A2_vsubhs";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A2_vsubub {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A2_vsubub";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A2_vsububs {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A2_vsububs";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A2_vsubuhs {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A2_vsubuhs";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A2_vsubw {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A2_vsubw";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A2_vsubws {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A2_vsubws";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A2_xor {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A2_xor";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A2_xorp {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A2_xorp";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A2_zxtb {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_si_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A2_zxtb";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A2_zxth {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_si_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A2_zxth";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A4_andn {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A4_andn";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A4_andnp {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A4_andnp";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A4_bitsplit {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A4_bitsplit";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A4_bitspliti {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A4_bitspliti";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A4_boundscheck {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sidi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A4_boundscheck";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A4_cmpbeq {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A4_cmpbeq";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A4_cmpbeqi {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A4_cmpbeqi";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A4_cmpbgt {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A4_cmpbgt";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A4_cmpbgti {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A4_cmpbgti";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A4_cmpbgtu {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A4_cmpbgtu";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A4_cmpbgtui {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A4_cmpbgtui";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A4_cmpheq {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A4_cmpheq";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A4_cmpheqi {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A4_cmpheqi";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A4_cmphgt {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A4_cmphgt";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A4_cmphgti {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A4_cmphgti";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A4_cmphgtu {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A4_cmphgtu";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A4_cmphgtui {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A4_cmphgtui";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A4_combineir {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A4_combineir";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A4_combineri {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A4_combineri";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A4_cround_ri {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A4_cround_ri";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A4_cround_rr {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A4_cround_rr";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A4_modwrapu {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A4_modwrapu";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A4_orn {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A4_orn";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A4_ornp {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A4_ornp";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A4_rcmpeq {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A4_rcmpeq";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A4_rcmpeqi {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A4_rcmpeqi";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A4_rcmpneq {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A4_rcmpneq";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A4_rcmpneqi {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A4_rcmpneqi";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A4_round_ri {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A4_round_ri";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A4_round_ri_sat {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A4_round_ri_sat";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A4_round_rr {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A4_round_rr";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A4_round_rr_sat {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A4_round_rr_sat";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A4_tlbmatch {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_disi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A4_tlbmatch";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A4_vcmpbeq_any {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_didi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A4_vcmpbeq_any";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A4_vcmpbeqi {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_disi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A4_vcmpbeqi";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A4_vcmpbgt {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_didi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A4_vcmpbgt";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A4_vcmpbgti {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_disi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A4_vcmpbgti";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A4_vcmpbgtui {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_disi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A4_vcmpbgtui";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A4_vcmpheqi {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_disi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A4_vcmpheqi";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A4_vcmphgti {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_disi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A4_vcmphgti";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A4_vcmphgtui {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_disi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A4_vcmphgtui";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A4_vcmpweqi {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_disi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A4_vcmpweqi";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A4_vcmpwgti {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_disi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A4_vcmpwgti";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A4_vcmpwgtui {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_disi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A4_vcmpwgtui";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A4_vrmaxh {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A4_vrmaxh";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A4_vrmaxuh {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A4_vrmaxuh";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A4_vrmaxuw {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A4_vrmaxuw";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A4_vrmaxw {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A4_vrmaxw";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A4_vrminh {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A4_vrminh";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A4_vrminuh {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A4_vrminuh";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A4_vrminuw {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A4_vrminuw";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A4_vrminw {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A4_vrminw";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_A5_vaddhubs {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_didi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_A5_vaddhubs";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_C2_all8 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_qi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_C2_all8";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_C2_and {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_C2_and";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_C2_andn {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_C2_andn";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_C2_any8 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_qi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_C2_any8";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_C2_bitsclr {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_C2_bitsclr";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_C2_bitsclri {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_C2_bitsclri";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_C2_bitsset {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_C2_bitsset";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_C2_cmpeq {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_C2_cmpeq";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_C2_cmpeqi {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_C2_cmpeqi";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_C2_cmpeqp {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_didi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_C2_cmpeqp";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_C2_cmpgei {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_C2_cmpgei";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_C2_cmpgeui {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_C2_cmpgeui";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_C2_cmpgt {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_C2_cmpgt";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_C2_cmpgti {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_C2_cmpgti";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_C2_cmpgtp {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_didi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_C2_cmpgtp";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_C2_cmpgtu {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_C2_cmpgtu";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_C2_cmpgtui {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_C2_cmpgtui";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_C2_cmpgtup {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_didi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_C2_cmpgtup";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_C2_cmplt {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_C2_cmplt";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_C2_cmpltu {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_C2_cmpltu";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_C2_mask {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_qi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_C2_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_C2_mux {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_qisisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_C2_mux";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_C2_muxii {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_qisisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_C2_muxii";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_C2_muxir {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_qisisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_C2_muxir";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_C2_muxri {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_qisisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_C2_muxri";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_C2_not {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_si_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_C2_not";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_C2_or {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_C2_or";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_C2_orn {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_C2_orn";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_C2_pxfer_map {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_qi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_C2_pxfer_map";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_C2_tfrpr {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_qi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_C2_tfrpr";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_C2_tfrrp {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_si_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_C2_tfrrp";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_C2_vitpack {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_qiqi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_C2_vitpack";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_C2_vmux {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_qididi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_C2_vmux";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_C2_xor {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_C2_xor";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_C4_and_and {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_C4_and_and";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_C4_and_andn {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_C4_and_andn";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_C4_and_or {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_C4_and_or";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_C4_and_orn {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_C4_and_orn";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_C4_cmplte {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_C4_cmplte";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_C4_cmpltei {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_C4_cmpltei";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_C4_cmplteu {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_C4_cmplteu";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_C4_cmplteui {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_C4_cmplteui";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_C4_cmpneq {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_C4_cmpneq";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_C4_cmpneqi {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_C4_cmpneqi";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_C4_fastcorner9 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_qiqi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_C4_fastcorner9";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_C4_fastcorner9_not {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_qiqi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_C4_fastcorner9_not";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_C4_nbitsclr {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_C4_nbitsclr";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_C4_nbitsclri {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_C4_nbitsclri";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_C4_nbitsset {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_C4_nbitsset";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_C4_or_and {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_C4_or_and";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_C4_or_andn {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_C4_or_andn";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_C4_or_or {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_C4_or_or";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_C4_or_orn {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_C4_or_orn";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_F2_conv_d2df {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_df_di_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_F2_conv_d2df";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_double_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_F2_conv_d2sf {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_sf_di_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_F2_conv_d2sf";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_F2_conv_df2d {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_df_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_F2_conv_df2d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_double_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_F2_conv_df2d_chop {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_df_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_F2_conv_df2d_chop";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_double_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_F2_conv_df2sf {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_sf_df_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_F2_conv_df2sf";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_double_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_F2_conv_df2ud {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_df_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_F2_conv_df2ud";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_double_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_F2_conv_df2ud_chop {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_df_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_F2_conv_df2ud_chop";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_double_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_F2_conv_df2uw {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_df_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_F2_conv_df2uw";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_double_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_F2_conv_df2uw_chop {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_df_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_F2_conv_df2uw_chop";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_double_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_F2_conv_df2w {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_df_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_F2_conv_df2w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_double_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_F2_conv_df2w_chop {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_df_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_F2_conv_df2w_chop";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_double_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_F2_conv_sf2d {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_sf_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_F2_conv_sf2d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_float_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_F2_conv_sf2d_chop {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_sf_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_F2_conv_sf2d_chop";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_float_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_F2_conv_sf2df {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_df_sf_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_F2_conv_sf2df";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_double_ty];
  list<LLVMType> ParamTypes = [llvm_float_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_F2_conv_sf2ud {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_sf_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_F2_conv_sf2ud";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_float_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_F2_conv_sf2ud_chop {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_sf_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_F2_conv_sf2ud_chop";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_float_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_F2_conv_sf2uw {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sf_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_F2_conv_sf2uw";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_float_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_F2_conv_sf2uw_chop {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sf_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_F2_conv_sf2uw_chop";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_float_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_F2_conv_sf2w {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sf_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_F2_conv_sf2w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_float_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_F2_conv_sf2w_chop {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sf_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_F2_conv_sf2w_chop";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_float_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_F2_conv_ud2df {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_df_di_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_F2_conv_ud2df";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_double_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_F2_conv_ud2sf {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_sf_di_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_F2_conv_ud2sf";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_F2_conv_uw2df {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_df_si_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_F2_conv_uw2df";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_double_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem, Throws];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_F2_conv_uw2sf {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_sf_si_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_F2_conv_uw2sf";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem, Throws];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_F2_conv_w2df {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_df_si_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_F2_conv_w2df";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_double_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem, Throws];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_F2_conv_w2sf {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_sf_si_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_F2_conv_w2sf";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem, Throws];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_F2_dfclass {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_dfsi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_F2_dfclass";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_double_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem, Throws];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_F2_dfcmpeq {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_dfdf_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_F2_dfcmpeq";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_double_ty, llvm_double_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem, Throws];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_F2_dfcmpge {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_dfdf_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_F2_dfcmpge";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_double_ty, llvm_double_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem, Throws];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_F2_dfcmpgt {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_dfdf_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_F2_dfcmpgt";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_double_ty, llvm_double_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem, Throws];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_F2_dfcmpuo {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_dfdf_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_F2_dfcmpuo";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_double_ty, llvm_double_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem, Throws];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_F2_dfimm_n {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_df_si_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_F2_dfimm_n";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_double_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem, Throws];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_F2_dfimm_p {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_df_si_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_F2_dfimm_p";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_double_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem, Throws];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_F2_sfadd {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_sf_sfsf_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_F2_sfadd";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem, Throws];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_F2_sfclass {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sfsi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_F2_sfclass";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_float_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem, Throws];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_F2_sfcmpeq {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sfsf_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_F2_sfcmpeq";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem, Throws];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_F2_sfcmpge {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sfsf_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_F2_sfcmpge";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem, Throws];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_F2_sfcmpgt {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sfsf_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_F2_sfcmpgt";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem, Throws];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_F2_sfcmpuo {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sfsf_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_F2_sfcmpuo";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem, Throws];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_F2_sffixupd {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_sf_sfsf_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_F2_sffixupd";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem, Throws];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_F2_sffixupn {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_sf_sfsf_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_F2_sffixupn";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem, Throws];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_F2_sffixupr {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_sf_sf_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_F2_sffixupr";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_float_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_F2_sffma {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_sf_sfsfsf_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_F2_sffma";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_float_ty, llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem, Throws];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_F2_sffma_lib {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_sf_sfsfsf_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_F2_sffma_lib";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_float_ty, llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem, Throws];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_F2_sffma_sc {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_sf_sfsfsfqi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_F2_sffma_sc";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_float_ty, llvm_float_ty, llvm_float_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem, Throws];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_F2_sffms {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_sf_sfsfsf_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_F2_sffms";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_float_ty, llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem, Throws];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_F2_sffms_lib {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_sf_sfsfsf_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_F2_sffms_lib";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_float_ty, llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem, Throws];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_F2_sfimm_n {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_sf_si_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_F2_sfimm_n";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem, Throws];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_F2_sfimm_p {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_sf_si_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_F2_sfimm_p";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem, Throws];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_F2_sfmax {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_sf_sfsf_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_F2_sfmax";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem, Throws];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_F2_sfmin {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_sf_sfsf_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_F2_sfmin";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem, Throws];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_F2_sfmpy {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_sf_sfsf_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_F2_sfmpy";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem, Throws];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_F2_sfsub {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_sf_sfsf_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_F2_sfsub";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem, Throws];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_L2_loadw_locked {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_L2_loadw_locked";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_ptr32_ty];
  list<IntrinsicProperty> Properties = [IntrReadWriteArgMem, anonymous_277];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_L4_loadd_locked {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_L4_loadd_locked";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_ptr64_ty];
  list<IntrinsicProperty> Properties = [IntrReadWriteArgMem, anonymous_278];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_acci {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_acci";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_accii {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_accii";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_cmaci_s0 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_disisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_cmaci_s0";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_cmacr_s0 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_disisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_cmacr_s0";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_cmacs_s0 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_disisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_cmacs_s0";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_cmacs_s1 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_disisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_cmacs_s1";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_cmacsc_s0 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_disisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_cmacsc_s0";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_cmacsc_s1 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_disisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_cmacsc_s1";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_cmpyi_s0 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_cmpyi_s0";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_cmpyr_s0 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_cmpyr_s0";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_cmpyrs_s0 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_cmpyrs_s0";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_cmpyrs_s1 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_cmpyrs_s1";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_cmpyrsc_s0 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_cmpyrsc_s0";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_cmpyrsc_s1 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_cmpyrsc_s1";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_cmpys_s0 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_cmpys_s0";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_cmpys_s1 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_cmpys_s1";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_cmpysc_s0 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_cmpysc_s0";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_cmpysc_s1 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_cmpysc_s1";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_cnacs_s0 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_disisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_cnacs_s0";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_cnacs_s1 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_disisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_cnacs_s1";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_cnacsc_s0 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_disisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_cnacsc_s0";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_cnacsc_s1 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_disisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_cnacsc_s1";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_dpmpyss_acc_s0 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_disisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_dpmpyss_acc_s0";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_dpmpyss_nac_s0 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_disisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_dpmpyss_nac_s0";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_dpmpyss_rnd_s0 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_dpmpyss_rnd_s0";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_dpmpyss_s0 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_dpmpyss_s0";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_dpmpyuu_acc_s0 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_disisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_dpmpyuu_acc_s0";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_dpmpyuu_nac_s0 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_disisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_dpmpyuu_nac_s0";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_dpmpyuu_s0 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_dpmpyuu_s0";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_hmmpyh_rs1 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_hmmpyh_rs1";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_hmmpyh_s1 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_hmmpyh_s1";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_hmmpyl_rs1 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_hmmpyl_rs1";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_hmmpyl_s1 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_hmmpyl_s1";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_maci {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_maci";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_macsin {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_macsin";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_macsip {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_macsip";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mmachs_rs0 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_dididi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mmachs_rs0";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mmachs_rs1 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_dididi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mmachs_rs1";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mmachs_s0 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_dididi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mmachs_s0";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mmachs_s1 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_dididi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mmachs_s1";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mmacls_rs0 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_dididi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mmacls_rs0";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mmacls_rs1 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_dididi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mmacls_rs1";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mmacls_s0 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_dididi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mmacls_s0";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mmacls_s1 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_dididi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mmacls_s1";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mmacuhs_rs0 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_dididi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mmacuhs_rs0";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mmacuhs_rs1 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_dididi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mmacuhs_rs1";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mmacuhs_s0 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_dididi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mmacuhs_s0";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mmacuhs_s1 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_dididi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mmacuhs_s1";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mmaculs_rs0 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_dididi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mmaculs_rs0";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mmaculs_rs1 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_dididi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mmaculs_rs1";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mmaculs_s0 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_dididi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mmaculs_s0";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mmaculs_s1 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_dididi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mmaculs_s1";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mmpyh_rs0 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mmpyh_rs0";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mmpyh_rs1 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mmpyh_rs1";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mmpyh_s0 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mmpyh_s0";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mmpyh_s1 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mmpyh_s1";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mmpyl_rs0 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mmpyl_rs0";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mmpyl_rs1 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mmpyl_rs1";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mmpyl_s0 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mmpyl_s0";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mmpyl_s1 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mmpyl_s1";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mmpyuh_rs0 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mmpyuh_rs0";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mmpyuh_rs1 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mmpyuh_rs1";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mmpyuh_s0 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mmpyuh_s0";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mmpyuh_s1 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mmpyuh_s1";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mmpyul_rs0 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mmpyul_rs0";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mmpyul_rs1 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mmpyul_rs1";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mmpyul_s0 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mmpyul_s0";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mmpyul_s1 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mmpyul_s1";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mpy_acc_hh_s0 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mpy_acc_hh_s0";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mpy_acc_hh_s1 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mpy_acc_hh_s1";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mpy_acc_hl_s0 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mpy_acc_hl_s0";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mpy_acc_hl_s1 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mpy_acc_hl_s1";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mpy_acc_lh_s0 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mpy_acc_lh_s0";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mpy_acc_lh_s1 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mpy_acc_lh_s1";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mpy_acc_ll_s0 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mpy_acc_ll_s0";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mpy_acc_ll_s1 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mpy_acc_ll_s1";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mpy_acc_sat_hh_s0 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mpy_acc_sat_hh_s0";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mpy_acc_sat_hh_s1 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mpy_acc_sat_hh_s1";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mpy_acc_sat_hl_s0 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mpy_acc_sat_hl_s0";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mpy_acc_sat_hl_s1 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mpy_acc_sat_hl_s1";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mpy_acc_sat_lh_s0 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mpy_acc_sat_lh_s0";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mpy_acc_sat_lh_s1 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mpy_acc_sat_lh_s1";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mpy_acc_sat_ll_s0 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mpy_acc_sat_ll_s0";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mpy_acc_sat_ll_s1 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mpy_acc_sat_ll_s1";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mpy_hh_s0 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mpy_hh_s0";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mpy_hh_s1 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mpy_hh_s1";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mpy_hl_s0 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mpy_hl_s0";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mpy_hl_s1 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mpy_hl_s1";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mpy_lh_s0 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mpy_lh_s0";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mpy_lh_s1 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mpy_lh_s1";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mpy_ll_s0 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mpy_ll_s0";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mpy_ll_s1 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mpy_ll_s1";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mpy_nac_hh_s0 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mpy_nac_hh_s0";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mpy_nac_hh_s1 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mpy_nac_hh_s1";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mpy_nac_hl_s0 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mpy_nac_hl_s0";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mpy_nac_hl_s1 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mpy_nac_hl_s1";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mpy_nac_lh_s0 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mpy_nac_lh_s0";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mpy_nac_lh_s1 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mpy_nac_lh_s1";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mpy_nac_ll_s0 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mpy_nac_ll_s0";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mpy_nac_ll_s1 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mpy_nac_ll_s1";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mpy_nac_sat_hh_s0 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mpy_nac_sat_hh_s0";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mpy_nac_sat_hh_s1 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mpy_nac_sat_hh_s1";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mpy_nac_sat_hl_s0 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mpy_nac_sat_hl_s0";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mpy_nac_sat_hl_s1 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mpy_nac_sat_hl_s1";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mpy_nac_sat_lh_s0 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mpy_nac_sat_lh_s0";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mpy_nac_sat_lh_s1 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mpy_nac_sat_lh_s1";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mpy_nac_sat_ll_s0 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mpy_nac_sat_ll_s0";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mpy_nac_sat_ll_s1 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mpy_nac_sat_ll_s1";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mpy_rnd_hh_s0 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mpy_rnd_hh_s0";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mpy_rnd_hh_s1 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mpy_rnd_hh_s1";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mpy_rnd_hl_s0 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mpy_rnd_hl_s0";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mpy_rnd_hl_s1 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mpy_rnd_hl_s1";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mpy_rnd_lh_s0 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mpy_rnd_lh_s0";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mpy_rnd_lh_s1 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mpy_rnd_lh_s1";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mpy_rnd_ll_s0 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mpy_rnd_ll_s0";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mpy_rnd_ll_s1 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mpy_rnd_ll_s1";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mpy_sat_hh_s0 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mpy_sat_hh_s0";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mpy_sat_hh_s1 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mpy_sat_hh_s1";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mpy_sat_hl_s0 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mpy_sat_hl_s0";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mpy_sat_hl_s1 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mpy_sat_hl_s1";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mpy_sat_lh_s0 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mpy_sat_lh_s0";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mpy_sat_lh_s1 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mpy_sat_lh_s1";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mpy_sat_ll_s0 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mpy_sat_ll_s0";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mpy_sat_ll_s1 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mpy_sat_ll_s1";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mpy_sat_rnd_hh_s0 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mpy_sat_rnd_hh_s0";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mpy_sat_rnd_hh_s1 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mpy_sat_rnd_hh_s1";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mpy_sat_rnd_hl_s0 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mpy_sat_rnd_hl_s0";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mpy_sat_rnd_hl_s1 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mpy_sat_rnd_hl_s1";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mpy_sat_rnd_lh_s0 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mpy_sat_rnd_lh_s0";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mpy_sat_rnd_lh_s1 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mpy_sat_rnd_lh_s1";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mpy_sat_rnd_ll_s0 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mpy_sat_rnd_ll_s0";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mpy_sat_rnd_ll_s1 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mpy_sat_rnd_ll_s1";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mpy_up {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mpy_up";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mpy_up_s1 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mpy_up_s1";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mpy_up_s1_sat {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mpy_up_s1_sat";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mpyd_acc_hh_s0 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_disisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mpyd_acc_hh_s0";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mpyd_acc_hh_s1 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_disisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mpyd_acc_hh_s1";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mpyd_acc_hl_s0 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_disisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mpyd_acc_hl_s0";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mpyd_acc_hl_s1 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_disisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mpyd_acc_hl_s1";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mpyd_acc_lh_s0 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_disisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mpyd_acc_lh_s0";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mpyd_acc_lh_s1 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_disisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mpyd_acc_lh_s1";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mpyd_acc_ll_s0 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_disisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mpyd_acc_ll_s0";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mpyd_acc_ll_s1 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_disisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mpyd_acc_ll_s1";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mpyd_hh_s0 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mpyd_hh_s0";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mpyd_hh_s1 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mpyd_hh_s1";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mpyd_hl_s0 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mpyd_hl_s0";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mpyd_hl_s1 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mpyd_hl_s1";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mpyd_lh_s0 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mpyd_lh_s0";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mpyd_lh_s1 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mpyd_lh_s1";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mpyd_ll_s0 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mpyd_ll_s0";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mpyd_ll_s1 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mpyd_ll_s1";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mpyd_nac_hh_s0 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_disisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mpyd_nac_hh_s0";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mpyd_nac_hh_s1 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_disisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mpyd_nac_hh_s1";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mpyd_nac_hl_s0 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_disisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mpyd_nac_hl_s0";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mpyd_nac_hl_s1 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_disisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mpyd_nac_hl_s1";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mpyd_nac_lh_s0 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_disisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mpyd_nac_lh_s0";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mpyd_nac_lh_s1 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_disisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mpyd_nac_lh_s1";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mpyd_nac_ll_s0 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_disisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mpyd_nac_ll_s0";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mpyd_nac_ll_s1 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_disisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mpyd_nac_ll_s1";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mpyd_rnd_hh_s0 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mpyd_rnd_hh_s0";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mpyd_rnd_hh_s1 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mpyd_rnd_hh_s1";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mpyd_rnd_hl_s0 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mpyd_rnd_hl_s0";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mpyd_rnd_hl_s1 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mpyd_rnd_hl_s1";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mpyd_rnd_lh_s0 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mpyd_rnd_lh_s0";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mpyd_rnd_lh_s1 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mpyd_rnd_lh_s1";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mpyd_rnd_ll_s0 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mpyd_rnd_ll_s0";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mpyd_rnd_ll_s1 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mpyd_rnd_ll_s1";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mpyi {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mpyi";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mpysmi {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mpysmi";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mpysu_up {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mpysu_up";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mpyu_acc_hh_s0 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mpyu_acc_hh_s0";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mpyu_acc_hh_s1 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mpyu_acc_hh_s1";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mpyu_acc_hl_s0 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mpyu_acc_hl_s0";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mpyu_acc_hl_s1 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mpyu_acc_hl_s1";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mpyu_acc_lh_s0 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mpyu_acc_lh_s0";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mpyu_acc_lh_s1 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mpyu_acc_lh_s1";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mpyu_acc_ll_s0 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mpyu_acc_ll_s0";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mpyu_acc_ll_s1 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mpyu_acc_ll_s1";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mpyu_hh_s0 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mpyu_hh_s0";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mpyu_hh_s1 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mpyu_hh_s1";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mpyu_hl_s0 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mpyu_hl_s0";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mpyu_hl_s1 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mpyu_hl_s1";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mpyu_lh_s0 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mpyu_lh_s0";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mpyu_lh_s1 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mpyu_lh_s1";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mpyu_ll_s0 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mpyu_ll_s0";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mpyu_ll_s1 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mpyu_ll_s1";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mpyu_nac_hh_s0 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mpyu_nac_hh_s0";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mpyu_nac_hh_s1 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mpyu_nac_hh_s1";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mpyu_nac_hl_s0 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mpyu_nac_hl_s0";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mpyu_nac_hl_s1 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mpyu_nac_hl_s1";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mpyu_nac_lh_s0 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mpyu_nac_lh_s0";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mpyu_nac_lh_s1 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mpyu_nac_lh_s1";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mpyu_nac_ll_s0 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mpyu_nac_ll_s0";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mpyu_nac_ll_s1 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mpyu_nac_ll_s1";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mpyu_up {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mpyu_up";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mpyud_acc_hh_s0 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_disisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mpyud_acc_hh_s0";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mpyud_acc_hh_s1 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_disisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mpyud_acc_hh_s1";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mpyud_acc_hl_s0 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_disisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mpyud_acc_hl_s0";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mpyud_acc_hl_s1 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_disisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mpyud_acc_hl_s1";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mpyud_acc_lh_s0 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_disisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mpyud_acc_lh_s0";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mpyud_acc_lh_s1 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_disisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mpyud_acc_lh_s1";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mpyud_acc_ll_s0 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_disisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mpyud_acc_ll_s0";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mpyud_acc_ll_s1 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_disisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mpyud_acc_ll_s1";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mpyud_hh_s0 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mpyud_hh_s0";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mpyud_hh_s1 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mpyud_hh_s1";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mpyud_hl_s0 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mpyud_hl_s0";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mpyud_hl_s1 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mpyud_hl_s1";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mpyud_lh_s0 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mpyud_lh_s0";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mpyud_lh_s1 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mpyud_lh_s1";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mpyud_ll_s0 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mpyud_ll_s0";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mpyud_ll_s1 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mpyud_ll_s1";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mpyud_nac_hh_s0 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_disisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mpyud_nac_hh_s0";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mpyud_nac_hh_s1 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_disisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mpyud_nac_hh_s1";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mpyud_nac_hl_s0 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_disisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mpyud_nac_hl_s0";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mpyud_nac_hl_s1 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_disisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mpyud_nac_hl_s1";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mpyud_nac_lh_s0 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_disisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mpyud_nac_lh_s0";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mpyud_nac_lh_s1 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_disisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mpyud_nac_lh_s1";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mpyud_nac_ll_s0 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_disisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mpyud_nac_ll_s0";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mpyud_nac_ll_s1 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_disisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mpyud_nac_ll_s1";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_mpyui {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_mpyui";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_nacci {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_nacci";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_naccii {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_naccii";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_subacc {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_subacc";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_vabsdiffh {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_vabsdiffh";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_vabsdiffw {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_vabsdiffw";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_vcmac_s0_sat_i {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_dididi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_vcmac_s0_sat_i";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_vcmac_s0_sat_r {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_dididi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_vcmac_s0_sat_r";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_vcmpy_s0_sat_i {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_vcmpy_s0_sat_i";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_vcmpy_s0_sat_r {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_vcmpy_s0_sat_r";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_vcmpy_s1_sat_i {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_vcmpy_s1_sat_i";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_vcmpy_s1_sat_r {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_vcmpy_s1_sat_r";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_vdmacs_s0 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_dididi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_vdmacs_s0";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_vdmacs_s1 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_dididi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_vdmacs_s1";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_vdmpyrs_s0 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_didi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_vdmpyrs_s0";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_vdmpyrs_s1 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_didi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_vdmpyrs_s1";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_vdmpys_s0 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_vdmpys_s0";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_vdmpys_s1 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_vdmpys_s1";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_vmac2 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_disisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_vmac2";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_vmac2es {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_dididi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_vmac2es";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_vmac2es_s0 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_dididi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_vmac2es_s0";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_vmac2es_s1 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_dididi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_vmac2es_s1";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_vmac2s_s0 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_disisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_vmac2s_s0";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_vmac2s_s1 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_disisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_vmac2s_s1";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_vmac2su_s0 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_disisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_vmac2su_s0";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_vmac2su_s1 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_disisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_vmac2su_s1";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_vmpy2es_s0 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_vmpy2es_s0";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_vmpy2es_s1 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_vmpy2es_s1";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_vmpy2s_s0 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_vmpy2s_s0";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_vmpy2s_s0pack {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_vmpy2s_s0pack";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_vmpy2s_s1 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_vmpy2s_s1";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_vmpy2s_s1pack {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_vmpy2s_s1pack";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_vmpy2su_s0 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_vmpy2su_s0";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_vmpy2su_s1 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_vmpy2su_s1";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_vraddh {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_didi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_vraddh";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_vradduh {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_didi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_vradduh";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_vrcmaci_s0 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_dididi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_vrcmaci_s0";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_vrcmaci_s0c {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_dididi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_vrcmaci_s0c";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_vrcmacr_s0 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_dididi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_vrcmacr_s0";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_vrcmacr_s0c {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_dididi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_vrcmacr_s0c";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_vrcmpyi_s0 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_vrcmpyi_s0";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_vrcmpyi_s0c {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_vrcmpyi_s0c";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_vrcmpyr_s0 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_vrcmpyr_s0";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_vrcmpyr_s0c {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_vrcmpyr_s0c";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_vrcmpys_acc_s1 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_vrcmpys_acc_s1";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_vrcmpys_s1 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_disi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_vrcmpys_s1";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_vrcmpys_s1rp {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_disi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_vrcmpys_s1rp";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_vrmac_s0 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_dididi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_vrmac_s0";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_vrmpy_s0 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_vrmpy_s0";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M2_xor_xacc {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M2_xor_xacc";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M4_and_and {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M4_and_and";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M4_and_andn {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M4_and_andn";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M4_and_or {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M4_and_or";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M4_and_xor {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M4_and_xor";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M4_cmpyi_wh {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_disi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M4_cmpyi_wh";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M4_cmpyi_whc {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_disi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M4_cmpyi_whc";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M4_cmpyr_wh {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_disi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M4_cmpyr_wh";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M4_cmpyr_whc {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_disi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M4_cmpyr_whc";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M4_mac_up_s1_sat {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M4_mac_up_s1_sat";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M4_mpyri_addi {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M4_mpyri_addi";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M4_mpyri_addr {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M4_mpyri_addr";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M4_mpyri_addr_u2 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M4_mpyri_addr_u2";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M4_mpyrr_addi {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M4_mpyrr_addi";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M4_mpyrr_addr {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M4_mpyrr_addr";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M4_nac_up_s1_sat {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M4_nac_up_s1_sat";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M4_or_and {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M4_or_and";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M4_or_andn {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M4_or_andn";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M4_or_or {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M4_or_or";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M4_or_xor {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M4_or_xor";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M4_pmpyw {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M4_pmpyw";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M4_pmpyw_acc {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_disisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M4_pmpyw_acc";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M4_vpmpyh {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M4_vpmpyh";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M4_vpmpyh_acc {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_disisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M4_vpmpyh_acc";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M4_vrmpyeh_acc_s0 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_dididi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M4_vrmpyeh_acc_s0";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M4_vrmpyeh_acc_s1 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_dididi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M4_vrmpyeh_acc_s1";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M4_vrmpyeh_s0 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M4_vrmpyeh_s0";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M4_vrmpyeh_s1 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M4_vrmpyeh_s1";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M4_vrmpyoh_acc_s0 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_dididi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M4_vrmpyoh_acc_s0";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M4_vrmpyoh_acc_s1 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_dididi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M4_vrmpyoh_acc_s1";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M4_vrmpyoh_s0 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M4_vrmpyoh_s0";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M4_vrmpyoh_s1 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M4_vrmpyoh_s1";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M4_xor_and {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M4_xor_and";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M4_xor_andn {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M4_xor_andn";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M4_xor_or {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M4_xor_or";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M4_xor_xacc {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_dididi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M4_xor_xacc";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M5_vdmacbsu {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_dididi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M5_vdmacbsu";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M5_vdmpybsu {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M5_vdmpybsu";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M5_vmacbsu {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_disisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M5_vmacbsu";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M5_vmacbuu {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_disisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M5_vmacbuu";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M5_vmpybsu {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M5_vmpybsu";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M5_vmpybuu {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M5_vmpybuu";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M5_vrmacbsu {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_dididi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M5_vrmacbsu";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M5_vrmacbuu {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_dididi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M5_vrmacbuu";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M5_vrmpybsu {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M5_vrmpybsu";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_M5_vrmpybuu {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_M5_vrmpybuu";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_addasl_rrri {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_addasl_rrri";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_asl_i_p {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_disi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_asl_i_p";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_asl_i_p_acc {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_asl_i_p_acc";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_asl_i_p_and {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_asl_i_p_and";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_asl_i_p_nac {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_asl_i_p_nac";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_asl_i_p_or {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_asl_i_p_or";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_asl_i_p_xacc {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_asl_i_p_xacc";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_asl_i_r {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_asl_i_r";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_asl_i_r_acc {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_asl_i_r_acc";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_asl_i_r_and {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_asl_i_r_and";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_asl_i_r_nac {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_asl_i_r_nac";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_asl_i_r_or {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_asl_i_r_or";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_asl_i_r_sat {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_asl_i_r_sat";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_asl_i_r_xacc {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_asl_i_r_xacc";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_asl_i_vh {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_disi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_asl_i_vh";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_asl_i_vw {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_disi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_asl_i_vw";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_asl_r_p {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_disi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_asl_r_p";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_asl_r_p_acc {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_asl_r_p_acc";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_asl_r_p_and {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_asl_r_p_and";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_asl_r_p_nac {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_asl_r_p_nac";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_asl_r_p_or {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_asl_r_p_or";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_asl_r_p_xor {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_asl_r_p_xor";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_asl_r_r {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_asl_r_r";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_asl_r_r_acc {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_asl_r_r_acc";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_asl_r_r_and {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_asl_r_r_and";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_asl_r_r_nac {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_asl_r_r_nac";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_asl_r_r_or {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_asl_r_r_or";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_asl_r_r_sat {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_asl_r_r_sat";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_asl_r_vh {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_disi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_asl_r_vh";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_asl_r_vw {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_disi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_asl_r_vw";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_asr_i_p {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_disi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_asr_i_p";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_asr_i_p_acc {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_asr_i_p_acc";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_asr_i_p_and {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_asr_i_p_and";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_asr_i_p_nac {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_asr_i_p_nac";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_asr_i_p_or {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_asr_i_p_or";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_asr_i_p_rnd {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_disi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_asr_i_p_rnd";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_asr_i_p_rnd_goodsyntax {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_disi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_asr_i_p_rnd_goodsyntax";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_asr_i_r {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_asr_i_r";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_asr_i_r_acc {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_asr_i_r_acc";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_asr_i_r_and {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_asr_i_r_and";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_asr_i_r_nac {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_asr_i_r_nac";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_asr_i_r_or {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_asr_i_r_or";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_asr_i_r_rnd {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_asr_i_r_rnd";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_asr_i_r_rnd_goodsyntax {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_asr_i_r_rnd_goodsyntax";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_asr_i_svw_trun {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_disi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_asr_i_svw_trun";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_asr_i_vh {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_disi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_asr_i_vh";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_asr_i_vw {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_disi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_asr_i_vw";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_asr_r_p {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_disi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_asr_r_p";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_asr_r_p_acc {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_asr_r_p_acc";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_asr_r_p_and {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_asr_r_p_and";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_asr_r_p_nac {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_asr_r_p_nac";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_asr_r_p_or {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_asr_r_p_or";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_asr_r_p_xor {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_asr_r_p_xor";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_asr_r_r {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_asr_r_r";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_asr_r_r_acc {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_asr_r_r_acc";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_asr_r_r_and {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_asr_r_r_and";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_asr_r_r_nac {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_asr_r_r_nac";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_asr_r_r_or {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_asr_r_r_or";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_asr_r_r_sat {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_asr_r_r_sat";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_asr_r_svw_trun {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_disi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_asr_r_svw_trun";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_asr_r_vh {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_disi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_asr_r_vh";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_asr_r_vw {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_disi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_asr_r_vw";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_brev {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_si_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_brev";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_brevp {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_di_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_brevp";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_cl0 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_si_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_cl0";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_cl0p {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_di_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_cl0p";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_cl1 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_si_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_cl1";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_cl1p {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_di_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_cl1p";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_clb {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_si_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_clb";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_clbnorm {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_si_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_clbnorm";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_clbp {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_di_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_clbp";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_clrbit_i {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_clrbit_i";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_clrbit_r {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_clrbit_r";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_ct0 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_si_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_ct0";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_ct0p {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_di_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_ct0p";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_ct1 {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_si_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_ct1";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_ct1p {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_di_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_ct1p";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_deinterleave {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_di_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_deinterleave";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_extractu {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_extractu";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_extractu_rp {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sidi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_extractu_rp";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_extractup {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_disisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_extractup";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_extractup_rp {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_extractup_rp";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_insert {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisisisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_insert";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_insert_rp {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisidi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_insert_rp";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_insertp {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didisisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_insertp";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_insertp_rp {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_dididi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_insertp_rp";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_interleave {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_di_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_interleave";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_lfsp {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_lfsp";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_lsl_r_p {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_disi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_lsl_r_p";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_lsl_r_p_acc {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_lsl_r_p_acc";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_lsl_r_p_and {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_lsl_r_p_and";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_lsl_r_p_nac {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_lsl_r_p_nac";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_lsl_r_p_or {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_lsl_r_p_or";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_lsl_r_p_xor {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_lsl_r_p_xor";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_lsl_r_r {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_lsl_r_r";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_lsl_r_r_acc {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_lsl_r_r_acc";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_lsl_r_r_and {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_lsl_r_r_and";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_lsl_r_r_nac {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_lsl_r_r_nac";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_lsl_r_r_or {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_lsl_r_r_or";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_lsl_r_vh {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_disi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_lsl_r_vh";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_lsl_r_vw {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_disi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_lsl_r_vw";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_lsr_i_p {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_disi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_lsr_i_p";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_lsr_i_p_acc {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_lsr_i_p_acc";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_lsr_i_p_and {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_lsr_i_p_and";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_lsr_i_p_nac {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_lsr_i_p_nac";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_lsr_i_p_or {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_lsr_i_p_or";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_lsr_i_p_xacc {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_lsr_i_p_xacc";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_lsr_i_r {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_lsr_i_r";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_lsr_i_r_acc {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_lsr_i_r_acc";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_lsr_i_r_and {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_lsr_i_r_and";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_lsr_i_r_nac {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_lsr_i_r_nac";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_lsr_i_r_or {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_lsr_i_r_or";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_lsr_i_r_xacc {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_lsr_i_r_xacc";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_lsr_i_vh {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_disi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_lsr_i_vh";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_lsr_i_vw {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_disi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_lsr_i_vw";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_lsr_r_p {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_disi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_lsr_r_p";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_lsr_r_p_acc {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_lsr_r_p_acc";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_lsr_r_p_and {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_lsr_r_p_and";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_lsr_r_p_nac {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_lsr_r_p_nac";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_lsr_r_p_or {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_lsr_r_p_or";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_lsr_r_p_xor {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_lsr_r_p_xor";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_lsr_r_r {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_lsr_r_r";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_lsr_r_r_acc {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_lsr_r_r_acc";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_lsr_r_r_and {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_lsr_r_r_and";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_lsr_r_r_nac {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_lsr_r_r_nac";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_lsr_r_r_or {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_lsr_r_r_or";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_lsr_r_vh {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_disi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_lsr_r_vh";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_lsr_r_vw {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_disi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_lsr_r_vw";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_packhl {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_packhl";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_parityp {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_didi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_parityp";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_setbit_i {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_setbit_i";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_setbit_r {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_setbit_r";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_shuffeb {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_shuffeb";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_shuffeh {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_shuffeh";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_shuffob {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_shuffob";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_shuffoh {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_shuffoh";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_storew_locked {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_storew_locked";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_ptr32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrReadWriteArgMem, anonymous_279];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_svsathb {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_si_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_svsathb";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_svsathub {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_si_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_svsathub";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_tableidxb_goodsyntax {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisisisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_tableidxb_goodsyntax";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_tableidxd_goodsyntax {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisisisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_tableidxd_goodsyntax";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_tableidxh_goodsyntax {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisisisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_tableidxh_goodsyntax";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_tableidxw_goodsyntax {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisisisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_tableidxw_goodsyntax";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_togglebit_i {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_togglebit_i";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_togglebit_r {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_togglebit_r";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_tstbit_i {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_tstbit_i";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_tstbit_r {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_tstbit_r";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_valignib {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_valignib";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_valignrb {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didiqi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_valignrb";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_vcnegh {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_disi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_vcnegh";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_vcrotate {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_disi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_vcrotate";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_vrcnegh {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_vrcnegh";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_vrndpackwh {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_di_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_vrndpackwh";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_vrndpackwhs {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_di_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_vrndpackwhs";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_vsathb {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_di_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_vsathb";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_vsathb_nopack {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_di_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_vsathb_nopack";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_vsathub {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_di_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_vsathub";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_vsathub_nopack {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_di_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_vsathub_nopack";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_vsatwh {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_di_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_vsatwh";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_vsatwh_nopack {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_di_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_vsatwh_nopack";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_vsatwuh {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_di_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_vsatwuh";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_vsatwuh_nopack {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_di_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_vsatwuh_nopack";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_vsplatrb {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_si_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_vsplatrb";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_vsplatrh {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_si_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_vsplatrh";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_vspliceib {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_vspliceib";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_vsplicerb {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didiqi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_vsplicerb";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_vsxtbh {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_si_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_vsxtbh";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_vsxthw {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_si_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_vsxthw";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_vtrunehb {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_di_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_vtrunehb";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_vtrunewh {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_vtrunewh";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_vtrunohb {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_di_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_vtrunohb";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_vtrunowh {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_vtrunowh";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_vzxtbh {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_si_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_vzxtbh";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S2_vzxthw {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_si_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S2_vzxthw";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S4_addaddi {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S4_addaddi";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S4_addi_asl_ri {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S4_addi_asl_ri";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S4_addi_lsr_ri {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S4_addi_lsr_ri";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S4_andi_asl_ri {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S4_andi_asl_ri";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S4_andi_lsr_ri {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S4_andi_lsr_ri";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S4_clbaddi {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S4_clbaddi";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S4_clbpaddi {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_disi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S4_clbpaddi";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S4_clbpnorm {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_di_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S4_clbpnorm";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S4_extract {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S4_extract";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S4_extract_rp {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sidi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S4_extract_rp";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S4_extractp {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_disisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S4_extractp";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S4_extractp_rp {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S4_extractp_rp";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S4_lsli {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S4_lsli";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S4_ntstbit_i {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S4_ntstbit_i";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S4_ntstbit_r {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S4_ntstbit_r";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S4_or_andi {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S4_or_andi";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S4_or_andix {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S4_or_andix";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S4_or_ori {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S4_or_ori";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S4_ori_asl_ri {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S4_ori_asl_ri";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S4_ori_lsr_ri {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S4_ori_lsr_ri";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S4_parity {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S4_parity";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S4_stored_locked {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S4_stored_locked";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_ptr64_ty, llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrReadWriteArgMem, anonymous_280];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S4_subaddi {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S4_subaddi";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S4_subi_asl_ri {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S4_subi_asl_ri";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S4_subi_lsr_ri {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_sisisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S4_subi_lsr_ri";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S4_vrcrotate {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_disisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S4_vrcrotate";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S4_vrcrotate_acc {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didisisi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S4_vrcrotate_acc";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S4_vxaddsubh {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S4_vxaddsubh";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S4_vxaddsubhr {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S4_vxaddsubhr";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S4_vxaddsubw {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S4_vxaddsubw";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S4_vxsubaddh {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S4_vxsubaddh";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S4_vxsubaddhr {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S4_vxsubaddhr";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S4_vxsubaddw {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_didi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S4_vxsubaddw";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S5_asrhub_rnd_sat_goodsyntax {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_disi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S5_asrhub_rnd_sat_goodsyntax";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S5_asrhub_sat {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_disi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S5_asrhub_sat";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S5_popcountp {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_di_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S5_popcountp";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_S5_vasrhrnd_goodsyntax {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_di_disi_Intrinsic
  string GCCBuiltinName = "__builtin_HEXAGON_S5_vasrhrnd_goodsyntax";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_SI_to_SXTHI_asrh {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_si_si_Intrinsic
  string GCCBuiltinName = "__builtin_SI_to_SXTHI_asrh";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_brev_ldb {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_mem_memmemsi_Intrinsic
  string GCCBuiltinName = "__builtin_brev_ldb";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_ptr_ty];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_ptr_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrReadWriteArgMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_brev_ldd {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_mem_memmemsi_Intrinsic
  string GCCBuiltinName = "__builtin_brev_ldd";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_ptr_ty];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_ptr_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrReadWriteArgMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_brev_ldh {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_mem_memmemsi_Intrinsic
  string GCCBuiltinName = "__builtin_brev_ldh";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_ptr_ty];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_ptr_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrReadWriteArgMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_brev_ldub {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_mem_memmemsi_Intrinsic
  string GCCBuiltinName = "__builtin_brev_ldub";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_ptr_ty];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_ptr_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrReadWriteArgMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_brev_lduh {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_mem_memmemsi_Intrinsic
  string GCCBuiltinName = "__builtin_brev_lduh";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_ptr_ty];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_ptr_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrReadWriteArgMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_brev_ldw {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_mem_memmemsi_Intrinsic
  string GCCBuiltinName = "__builtin_brev_ldw";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_ptr_ty];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_ptr_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrReadWriteArgMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_brev_stb {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_mem_memsisi_Intrinsic
  string GCCBuiltinName = "__builtin_brev_stb";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_ptr_ty];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrReadWriteArgMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_brev_std {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_mem_memdisi_Intrinsic
  string GCCBuiltinName = "__builtin_brev_std";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_ptr_ty];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrReadWriteArgMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_brev_sth {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_mem_memsisi_Intrinsic
  string GCCBuiltinName = "__builtin_brev_sth";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_ptr_ty];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrReadWriteArgMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_brev_sthhi {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_mem_memsisi_Intrinsic
  string GCCBuiltinName = "__builtin_brev_sthhi";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_ptr_ty];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrReadWriteArgMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_brev_stw {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_mem_memsisi_Intrinsic
  string GCCBuiltinName = "__builtin_brev_stw";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_ptr_ty];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrReadWriteArgMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_circ_ldb {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_mem_memmemsisi_Intrinsic
  string GCCBuiltinName = "__builtin_circ_ldb";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_ptr_ty];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_ptr_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrReadWriteArgMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_circ_ldd {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_mem_memmemsisi_Intrinsic
  string GCCBuiltinName = "__builtin_circ_ldd";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_ptr_ty];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_ptr_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrReadWriteArgMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_circ_ldh {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_mem_memmemsisi_Intrinsic
  string GCCBuiltinName = "__builtin_circ_ldh";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_ptr_ty];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_ptr_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrReadWriteArgMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_circ_ldub {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_mem_memmemsisi_Intrinsic
  string GCCBuiltinName = "__builtin_circ_ldub";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_ptr_ty];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_ptr_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrReadWriteArgMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_circ_lduh {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_mem_memmemsisi_Intrinsic
  string GCCBuiltinName = "__builtin_circ_lduh";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_ptr_ty];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_ptr_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrReadWriteArgMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_circ_ldw {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_mem_memmemsisi_Intrinsic
  string GCCBuiltinName = "__builtin_circ_ldw";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_ptr_ty];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_ptr_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrReadWriteArgMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_circ_stb {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_mem_memsisisi_Intrinsic
  string GCCBuiltinName = "__builtin_circ_stb";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_ptr_ty];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrReadWriteArgMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_circ_std {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_mem_memdisisi_Intrinsic
  string GCCBuiltinName = "__builtin_circ_std";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_ptr_ty];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_i64_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrReadWriteArgMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_circ_sth {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_mem_memsisisi_Intrinsic
  string GCCBuiltinName = "__builtin_circ_sth";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_ptr_ty];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrReadWriteArgMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_circ_sthhi {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_mem_memsisisi_Intrinsic
  string GCCBuiltinName = "__builtin_circ_sthhi";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_ptr_ty];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrReadWriteArgMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_hexagon_circ_stw {	// GCCBuiltin SDPatternOperator Intrinsic Hexagon_Intrinsic Hexagon_mem_memsisisi_Intrinsic
  string GCCBuiltinName = "__builtin_circ_stw";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "hexagon";
  list<LLVMType> RetTypes = [llvm_ptr_ty];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrReadWriteArgMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_init_trampoline {	// SDPatternOperator Intrinsic GCCBuiltin
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_ptr_ty, llvm_ptr_ty];
  list<IntrinsicProperty> Properties = [IntrReadWriteArgMem, anonymous_52];
  bit isTarget = 0;
  string GCCBuiltinName = "__builtin_init_trampoline";
  string NAME = ?;
}
def int_instrprof_increment {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_i64_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_invariant_end {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_descriptor_ty, llvm_i64_ty, llvm_ptr_ty];
  list<IntrinsicProperty> Properties = [IntrReadWriteArgMem, anonymous_68];
  bit isTarget = 0;
  string NAME = ?;
}
def int_invariant_start {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_descriptor_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_ptr_ty];
  list<IntrinsicProperty> Properties = [IntrReadWriteArgMem, anonymous_67];
  bit isTarget = 0;
  string NAME = ?;
}
def int_lifetime_end {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_ptr_ty];
  list<IntrinsicProperty> Properties = [IntrReadWriteArgMem, anonymous_66];
  bit isTarget = 0;
  string NAME = ?;
}
def int_lifetime_start {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_ptr_ty];
  list<IntrinsicProperty> Properties = [IntrReadWriteArgMem, anonymous_65];
  bit isTarget = 0;
  string NAME = ?;
}
def int_localaddress {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_ptr_ty];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_localescape {	// SDPatternOperator Intrinsic
  list<IntrinsicProperty> Intrinsic:properties = [];
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_vararg_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_localrecover {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_ptr_ty];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_ptr_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_log {	// SDPatternOperator Intrinsic
  list<IntrinsicProperty> Intrinsic:properties = [];
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_anyfloat_ty];
  list<LLVMType> ParamTypes = [anonymous_22];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_log10 {	// SDPatternOperator Intrinsic
  list<IntrinsicProperty> Intrinsic:properties = [];
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_anyfloat_ty];
  list<LLVMType> ParamTypes = [anonymous_23];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_log2 {	// SDPatternOperator Intrinsic
  list<IntrinsicProperty> Intrinsic:properties = [];
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_anyfloat_ty];
  list<LLVMType> ParamTypes = [anonymous_24];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_longjmp {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoReturn];
  bit isTarget = 0;
  string NAME = ?;
}
def int_masked_gather {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [anonymous_74, llvm_i32_ty, anonymous_75, anonymous_76];
  list<IntrinsicProperty> Properties = [IntrReadArgMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_masked_load {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_anyvector_ty];
  list<LLVMType> ParamTypes = [anonymous_71, llvm_i32_ty, anonymous_72, anonymous_73];
  list<IntrinsicProperty> Properties = [IntrReadArgMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_masked_scatter {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_anyvector_ty, anonymous_77, llvm_i32_ty, anonymous_78];
  list<IntrinsicProperty> Properties = [IntrReadWriteArgMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_masked_store {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_anyvector_ty, anonymous_69, llvm_i32_ty, anonymous_70];
  list<IntrinsicProperty> Properties = [IntrReadWriteArgMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_maxnum {	// SDPatternOperator Intrinsic
  list<IntrinsicProperty> Intrinsic:properties = [];
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_anyfloat_ty];
  list<LLVMType> ParamTypes = [anonymous_30, anonymous_31];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_memcpy {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_anyptr_ty, llvm_anyptr_ty, llvm_anyint_ty, llvm_i32_ty, llvm_i1_ty];
  list<IntrinsicProperty> Properties = [IntrReadWriteArgMem, anonymous_3, anonymous_4, anonymous_5];
  bit isTarget = 0;
  string NAME = ?;
}
def int_memmove {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_anyptr_ty, llvm_anyptr_ty, llvm_anyint_ty, llvm_i32_ty, llvm_i1_ty];
  list<IntrinsicProperty> Properties = [IntrReadWriteArgMem, anonymous_6, anonymous_7, anonymous_8];
  bit isTarget = 0;
  string NAME = ?;
}
def int_memset {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_anyptr_ty, llvm_i8_ty, llvm_anyint_ty, llvm_i32_ty, llvm_i1_ty];
  list<IntrinsicProperty> Properties = [IntrReadWriteArgMem, anonymous_9];
  bit isTarget = 0;
  string NAME = ?;
}
def int_minnum {	// SDPatternOperator Intrinsic
  list<IntrinsicProperty> Intrinsic:properties = [];
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_anyfloat_ty];
  list<LLVMType> ParamTypes = [anonymous_28, anonymous_29];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_absq_s_ph {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_mips_absq_s_ph";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [mips_v2q15_ty];
  list<LLVMType> ParamTypes = [mips_v2q15_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_absq_s_qb {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_mips_absq_s_qb";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [mips_v4q7_ty];
  list<LLVMType> ParamTypes = [mips_v4q7_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_absq_s_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_mips_absq_s_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [mips_q31_ty];
  list<LLVMType> ParamTypes = [mips_q31_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_add_a_b {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_add_a_b";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> Properties = [Commutative, IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_add_a_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_add_a_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_v2i64_ty];
  list<IntrinsicProperty> Properties = [Commutative, IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_add_a_h {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_add_a_h";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> Properties = [Commutative, IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_add_a_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_add_a_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> Properties = [Commutative, IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_addq_ph {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_mips_addq_ph";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [mips_v2q15_ty];
  list<LLVMType> ParamTypes = [mips_v2q15_ty, mips_v2q15_ty];
  list<IntrinsicProperty> Properties = [Commutative, IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_addq_s_ph {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_mips_addq_s_ph";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [mips_v2q15_ty];
  list<LLVMType> ParamTypes = [mips_v2q15_ty, mips_v2q15_ty];
  list<IntrinsicProperty> Properties = [Commutative, IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_addq_s_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_mips_addq_s_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [mips_q31_ty];
  list<LLVMType> ParamTypes = [mips_q31_ty, mips_q31_ty];
  list<IntrinsicProperty> Properties = [Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_addqh_ph {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_mips_addqh_ph";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [mips_v2q15_ty];
  list<LLVMType> ParamTypes = [mips_v2q15_ty, mips_v2q15_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_addqh_r_ph {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_mips_addqh_r_ph";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [mips_v2q15_ty];
  list<LLVMType> ParamTypes = [mips_v2q15_ty, mips_v2q15_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_addqh_r_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_mips_addqh_r_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [mips_q31_ty];
  list<LLVMType> ParamTypes = [mips_q31_ty, mips_q31_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_addqh_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_mips_addqh_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [mips_q31_ty];
  list<LLVMType> ParamTypes = [mips_q31_ty, mips_q31_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_adds_a_b {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_adds_a_b";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> Properties = [Commutative, IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_adds_a_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_adds_a_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_v2i64_ty];
  list<IntrinsicProperty> Properties = [Commutative, IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_adds_a_h {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_adds_a_h";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> Properties = [Commutative, IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_adds_a_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_adds_a_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> Properties = [Commutative, IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_adds_s_b {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_adds_s_b";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> Properties = [Commutative, IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_adds_s_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_adds_s_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_v2i64_ty];
  list<IntrinsicProperty> Properties = [Commutative, IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_adds_s_h {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_adds_s_h";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> Properties = [Commutative, IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_adds_s_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_adds_s_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> Properties = [Commutative, IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_adds_u_b {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_adds_u_b";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> Properties = [Commutative, IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_adds_u_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_adds_u_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_v2i64_ty];
  list<IntrinsicProperty> Properties = [Commutative, IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_adds_u_h {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_adds_u_h";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> Properties = [Commutative, IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_adds_u_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_adds_u_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> Properties = [Commutative, IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_addsc {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_mips_addsc";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_addu_ph {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_mips_addu_ph";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v2i16_ty];
  list<LLVMType> ParamTypes = [llvm_v2i16_ty, llvm_v2i16_ty];
  list<IntrinsicProperty> Properties = [Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_addu_qb {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_mips_addu_qb";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4i8_ty];
  list<LLVMType> ParamTypes = [llvm_v4i8_ty, llvm_v4i8_ty];
  list<IntrinsicProperty> Properties = [Commutative, IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_addu_s_ph {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_mips_addu_s_ph";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v2i16_ty];
  list<LLVMType> ParamTypes = [llvm_v2i16_ty, llvm_v2i16_ty];
  list<IntrinsicProperty> Properties = [Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_addu_s_qb {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_mips_addu_s_qb";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4i8_ty];
  list<LLVMType> ParamTypes = [llvm_v4i8_ty, llvm_v4i8_ty];
  list<IntrinsicProperty> Properties = [Commutative, IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_adduh_qb {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_mips_adduh_qb";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4i8_ty];
  list<LLVMType> ParamTypes = [llvm_v4i8_ty, llvm_v4i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_adduh_r_qb {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_mips_adduh_r_qb";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4i8_ty];
  list<LLVMType> ParamTypes = [llvm_v4i8_ty, llvm_v4i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_addv_b {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_addv_b";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> Properties = [Commutative, IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_addv_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_addv_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_v2i64_ty];
  list<IntrinsicProperty> Properties = [Commutative, IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_addv_h {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_addv_h";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> Properties = [Commutative, IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_addv_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_addv_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> Properties = [Commutative, IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_addvi_b {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_addvi_b";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [Commutative, IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_addvi_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_addvi_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [Commutative, IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_addvi_h {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_addvi_h";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [Commutative, IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_addvi_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_addvi_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [Commutative, IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_addwc {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_mips_addwc";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_and_v {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_and_v";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_andi_b {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_andi_b";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_append {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_mips_append";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_asub_s_b {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_asub_s_b";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_asub_s_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_asub_s_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_v2i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_asub_s_h {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_asub_s_h";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_asub_s_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_asub_s_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_asub_u_b {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_asub_u_b";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_asub_u_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_asub_u_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_v2i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_asub_u_h {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_asub_u_h";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_asub_u_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_asub_u_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_ave_s_b {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_ave_s_b";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> Properties = [Commutative, IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_ave_s_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_ave_s_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_v2i64_ty];
  list<IntrinsicProperty> Properties = [Commutative, IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_ave_s_h {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_ave_s_h";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> Properties = [Commutative, IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_ave_s_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_ave_s_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> Properties = [Commutative, IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_ave_u_b {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_ave_u_b";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> Properties = [Commutative, IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_ave_u_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_ave_u_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_v2i64_ty];
  list<IntrinsicProperty> Properties = [Commutative, IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_ave_u_h {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_ave_u_h";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> Properties = [Commutative, IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_ave_u_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_ave_u_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> Properties = [Commutative, IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_aver_s_b {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_aver_s_b";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> Properties = [Commutative, IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_aver_s_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_aver_s_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_v2i64_ty];
  list<IntrinsicProperty> Properties = [Commutative, IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_aver_s_h {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_aver_s_h";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> Properties = [Commutative, IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_aver_s_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_aver_s_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> Properties = [Commutative, IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_aver_u_b {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_aver_u_b";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> Properties = [Commutative, IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_aver_u_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_aver_u_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_v2i64_ty];
  list<IntrinsicProperty> Properties = [Commutative, IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_aver_u_h {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_aver_u_h";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> Properties = [Commutative, IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_aver_u_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_aver_u_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> Properties = [Commutative, IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_balign {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_mips_balign";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_bclr_b {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_bclr_b";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_bclr_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_bclr_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_v2i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_bclr_h {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_bclr_h";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_bclr_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_bclr_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_bclri_b {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_bclri_b";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_bclri_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_bclri_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_bclri_h {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_bclri_h";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_bclri_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_bclri_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_binsl_b {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_binsl_b";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_binsl_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_binsl_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_v2i64_ty, llvm_v2i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_binsl_h {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_binsl_h";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_binsl_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_binsl_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_binsli_b {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_binsli_b";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_binsli_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_binsli_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_v2i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_binsli_h {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_binsli_h";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_binsli_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_binsli_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_binsr_b {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_binsr_b";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_binsr_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_binsr_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_v2i64_ty, llvm_v2i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_binsr_h {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_binsr_h";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_binsr_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_binsr_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_binsri_b {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_binsri_b";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_binsri_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_binsri_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_v2i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_binsri_h {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_binsri_h";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_binsri_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_binsri_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_bitrev {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_mips_bitrev";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_bmnz_v {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_bmnz_v";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_bmnzi_b {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_bmnzi_b";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_bmz_v {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_bmz_v";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_bmzi_b {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_bmzi_b";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_bneg_b {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_bneg_b";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_bneg_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_bneg_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_v2i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_bneg_h {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_bneg_h";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_bneg_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_bneg_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_bnegi_b {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_bnegi_b";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_bnegi_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_bnegi_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_bnegi_h {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_bnegi_h";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_bnegi_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_bnegi_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_bnz_b {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_bnz_b";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_bnz_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_bnz_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_bnz_h {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_bnz_h";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_bnz_v {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_bnz_v";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_bnz_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_bnz_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_bposge32 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_mips_bposge32";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> Properties = [IntrReadMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_bsel_v {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_bsel_v";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_bseli_b {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_bseli_b";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_bset_b {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_bset_b";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_bset_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_bset_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_v2i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_bset_h {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_bset_h";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_bset_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_bset_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_bseti_b {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_bseti_b";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_bseti_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_bseti_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_bseti_h {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_bseti_h";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_bseti_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_bseti_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_bz_b {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_bz_b";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_bz_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_bz_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_bz_h {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_bz_h";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_bz_v {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_bz_v";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_bz_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_bz_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_ceq_b {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_ceq_b";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_ceq_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_ceq_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_v2i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_ceq_h {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_ceq_h";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_ceq_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_ceq_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_ceqi_b {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_ceqi_b";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_ceqi_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_ceqi_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_ceqi_h {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_ceqi_h";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_ceqi_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_ceqi_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_cfcmsa {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_cfcmsa";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_cle_s_b {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_cle_s_b";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_cle_s_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_cle_s_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_v2i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_cle_s_h {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_cle_s_h";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_cle_s_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_cle_s_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_cle_u_b {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_cle_u_b";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_cle_u_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_cle_u_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_v2i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_cle_u_h {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_cle_u_h";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_cle_u_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_cle_u_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_clei_s_b {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_clei_s_b";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_clei_s_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_clei_s_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_clei_s_h {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_clei_s_h";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_clei_s_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_clei_s_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_clei_u_b {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_clei_u_b";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_clei_u_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_clei_u_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_clei_u_h {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_clei_u_h";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_clei_u_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_clei_u_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_clt_s_b {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_clt_s_b";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_clt_s_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_clt_s_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_v2i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_clt_s_h {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_clt_s_h";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_clt_s_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_clt_s_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_clt_u_b {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_clt_u_b";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_clt_u_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_clt_u_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_v2i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_clt_u_h {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_clt_u_h";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_clt_u_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_clt_u_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_clti_s_b {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_clti_s_b";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_clti_s_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_clti_s_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_clti_s_h {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_clti_s_h";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_clti_s_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_clti_s_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_clti_u_b {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_clti_u_b";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_clti_u_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_clti_u_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_clti_u_h {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_clti_u_h";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_clti_u_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_clti_u_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_cmp_eq_ph {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_mips_cmp_eq_ph";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [mips_v2q15_ty, mips_v2q15_ty];
  list<IntrinsicProperty> Properties = [Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_cmp_le_ph {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_mips_cmp_le_ph";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [mips_v2q15_ty, mips_v2q15_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_cmp_lt_ph {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_mips_cmp_lt_ph";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [mips_v2q15_ty, mips_v2q15_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_cmpgdu_eq_qb {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_mips_cmpgdu_eq_qb";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i8_ty, llvm_v4i8_ty];
  list<IntrinsicProperty> Properties = [Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_cmpgdu_le_qb {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_mips_cmpgdu_le_qb";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i8_ty, llvm_v4i8_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_cmpgdu_lt_qb {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_mips_cmpgdu_lt_qb";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i8_ty, llvm_v4i8_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_cmpgu_eq_qb {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_mips_cmpgu_eq_qb";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i8_ty, llvm_v4i8_ty];
  list<IntrinsicProperty> Properties = [Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_cmpgu_le_qb {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_mips_cmpgu_le_qb";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i8_ty, llvm_v4i8_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_cmpgu_lt_qb {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_mips_cmpgu_lt_qb";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i8_ty, llvm_v4i8_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_cmpu_eq_qb {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_mips_cmpu_eq_qb";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_v4i8_ty, llvm_v4i8_ty];
  list<IntrinsicProperty> Properties = [Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_cmpu_le_qb {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_mips_cmpu_le_qb";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_v4i8_ty, llvm_v4i8_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_cmpu_lt_qb {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_mips_cmpu_lt_qb";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_v4i8_ty, llvm_v4i8_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_copy_s_b {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_copy_s_b";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_copy_s_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_copy_s_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_copy_s_h {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_copy_s_h";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_copy_s_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_copy_s_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_copy_u_b {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_copy_u_b";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_copy_u_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_copy_u_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_copy_u_h {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_copy_u_h";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_copy_u_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_copy_u_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_ctcmsa {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_ctcmsa";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_div_s_b {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_div_s_b";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_div_s_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_div_s_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_v2i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_div_s_h {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_div_s_h";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_div_s_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_div_s_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_div_u_b {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_div_u_b";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_div_u_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_div_u_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_v2i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_div_u_h {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_div_u_h";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_div_u_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_div_u_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_dlsa {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_mips_dlsa";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_dotp_s_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_dotp_s_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_dotp_s_h {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_dotp_s_h";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_dotp_s_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_dotp_s_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_dotp_u_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_dotp_u_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_dotp_u_h {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_dotp_u_h";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_dotp_u_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_dotp_u_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_dpa_w_ph {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_mips_dpa_w_ph";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_v2i16_ty, llvm_v2i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_dpadd_s_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_dpadd_s_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_dpadd_s_h {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_dpadd_s_h";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_dpadd_s_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_dpadd_s_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v8i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_dpadd_u_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_dpadd_u_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_dpadd_u_h {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_dpadd_u_h";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_dpadd_u_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_dpadd_u_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v8i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_dpaq_s_w_ph {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_mips_dpaq_s_w_ph";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, mips_v2q15_ty, mips_v2q15_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_dpaq_sa_l_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_mips_dpaq_sa_l_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, mips_q31_ty, mips_q31_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_dpaqx_s_w_ph {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_mips_dpaqx_s_w_ph";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, mips_v2q15_ty, mips_v2q15_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_dpaqx_sa_w_ph {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_mips_dpaqx_sa_w_ph";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, mips_v2q15_ty, mips_v2q15_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_dpau_h_qbl {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_mips_dpau_h_qbl";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_v4i8_ty, llvm_v4i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_dpau_h_qbr {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_mips_dpau_h_qbr";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_v4i8_ty, llvm_v4i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_dpax_w_ph {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_mips_dpax_w_ph";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_v2i16_ty, llvm_v2i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_dps_w_ph {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_mips_dps_w_ph";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_v2i16_ty, llvm_v2i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_dpsq_s_w_ph {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_mips_dpsq_s_w_ph";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, mips_v2q15_ty, mips_v2q15_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_dpsq_sa_l_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_mips_dpsq_sa_l_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, mips_q31_ty, mips_q31_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_dpsqx_s_w_ph {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_mips_dpsqx_s_w_ph";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, mips_v2q15_ty, mips_v2q15_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_dpsqx_sa_w_ph {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_mips_dpsqx_sa_w_ph";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, mips_v2q15_ty, mips_v2q15_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_dpsu_h_qbl {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_mips_dpsu_h_qbl";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_v4i8_ty, llvm_v4i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_dpsu_h_qbr {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_mips_dpsu_h_qbr";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_v4i8_ty, llvm_v4i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_dpsub_s_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_dpsub_s_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_dpsub_s_h {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_dpsub_s_h";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_dpsub_s_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_dpsub_s_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v8i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_dpsub_u_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_dpsub_u_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_dpsub_u_h {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_dpsub_u_h";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_dpsub_u_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_dpsub_u_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v8i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_dpsx_w_ph {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_mips_dpsx_w_ph";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_v2i16_ty, llvm_v2i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_extp {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_mips_extp";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_extpdp {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_mips_extpdp";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_extr_r_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_mips_extr_r_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_extr_rs_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_mips_extr_rs_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_extr_s_h {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_mips_extr_s_h";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_extr_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_mips_extr_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_fadd_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_fadd_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v2f64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_v2f64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_fadd_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_fadd_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_v4f32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_fcaf_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_fcaf_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_v2f64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_fcaf_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_fcaf_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_v4f32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_fceq_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_fceq_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_v2f64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_fceq_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_fceq_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_v4f32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_fclass_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_fclass_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_fclass_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_fclass_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_fcle_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_fcle_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_v2f64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_fcle_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_fcle_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_v4f32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_fclt_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_fclt_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_v2f64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_fclt_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_fclt_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_v4f32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_fcne_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_fcne_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_v2f64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_fcne_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_fcne_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_v4f32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_fcor_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_fcor_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_v2f64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_fcor_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_fcor_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_v4f32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_fcueq_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_fcueq_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_v2f64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_fcueq_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_fcueq_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_v4f32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_fcule_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_fcule_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_v2f64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_fcule_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_fcule_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_v4f32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_fcult_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_fcult_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_v2f64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_fcult_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_fcult_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_v4f32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_fcun_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_fcun_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_v2f64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_fcun_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_fcun_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_v4f32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_fcune_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_fcune_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_v2f64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_fcune_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_fcune_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_v4f32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_fdiv_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_fdiv_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v2f64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_v2f64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_fdiv_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_fdiv_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_v4f32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_fexdo_h {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_fexdo_h";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v8f16_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_v4f32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_fexdo_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_fexdo_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_v2f64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_fexp2_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_fexp2_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v2f64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_v2i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_fexp2_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_fexp2_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_fexupl_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_fexupl_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v2f64_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_fexupl_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_fexupl_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v8f16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_fexupr_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_fexupr_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v2f64_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_fexupr_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_fexupr_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v8f16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_ffint_s_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_ffint_s_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v2f64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_ffint_s_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_ffint_s_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_ffint_u_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_ffint_u_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v2f64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_ffint_u_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_ffint_u_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_ffql_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_ffql_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v2f64_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_ffql_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_ffql_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_ffqr_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_ffqr_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v2f64_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_ffqr_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_ffqr_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_fill_b {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_fill_b";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_fill_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_fill_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_fill_h {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_fill_h";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_fill_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_fill_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_flog2_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_flog2_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v2f64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_flog2_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_flog2_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_fmadd_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_fmadd_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v2f64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_v2f64_ty, llvm_v2f64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_fmadd_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_fmadd_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_v4f32_ty, llvm_v4f32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_fmax_a_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_fmax_a_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v2f64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_v2f64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_fmax_a_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_fmax_a_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_v4f32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_fmax_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_fmax_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v2f64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_v2f64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_fmax_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_fmax_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_v4f32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_fmin_a_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_fmin_a_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v2f64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_v2f64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_fmin_a_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_fmin_a_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_v4f32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_fmin_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_fmin_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v2f64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_v2f64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_fmin_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_fmin_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_v4f32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_fmsub_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_fmsub_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v2f64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_v2f64_ty, llvm_v2f64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_fmsub_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_fmsub_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_v4f32_ty, llvm_v4f32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_fmul_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_fmul_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v2f64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_v2f64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_fmul_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_fmul_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_v4f32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_frcp_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_frcp_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v2f64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_frcp_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_frcp_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_frint_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_frint_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v2f64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_frint_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_frint_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_frsqrt_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_frsqrt_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v2f64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_frsqrt_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_frsqrt_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_fsaf_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_fsaf_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_v2f64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_fsaf_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_fsaf_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_v4f32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_fseq_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_fseq_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_v2f64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_fseq_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_fseq_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_v4f32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_fsle_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_fsle_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_v2f64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_fsle_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_fsle_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_v4f32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_fslt_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_fslt_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_v2f64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_fslt_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_fslt_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_v4f32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_fsne_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_fsne_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_v2f64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_fsne_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_fsne_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_v4f32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_fsor_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_fsor_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_v2f64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_fsor_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_fsor_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_v4f32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_fsqrt_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_fsqrt_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v2f64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_fsqrt_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_fsqrt_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_fsub_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_fsub_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v2f64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_v2f64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_fsub_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_fsub_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_v4f32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_fsueq_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_fsueq_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_v2f64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_fsueq_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_fsueq_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_v4f32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_fsule_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_fsule_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_v2f64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_fsule_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_fsule_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_v4f32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_fsult_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_fsult_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_v2f64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_fsult_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_fsult_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_v4f32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_fsun_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_fsun_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_v2f64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_fsun_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_fsun_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_v4f32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_fsune_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_fsune_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_v2f64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_fsune_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_fsune_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_v4f32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_ftint_s_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_ftint_s_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_ftint_s_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_ftint_s_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_ftint_u_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_ftint_u_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_ftint_u_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_ftint_u_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_ftq_h {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_ftq_h";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_v4f32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_ftq_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_ftq_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_v2f64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_ftrunc_s_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_ftrunc_s_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_ftrunc_s_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_ftrunc_s_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_ftrunc_u_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_ftrunc_u_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_ftrunc_u_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_ftrunc_u_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_hadd_s_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_hadd_s_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_hadd_s_h {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_hadd_s_h";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_hadd_s_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_hadd_s_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_hadd_u_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_hadd_u_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_hadd_u_h {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_hadd_u_h";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_hadd_u_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_hadd_u_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_hsub_s_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_hsub_s_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_hsub_s_h {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_hsub_s_h";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_hsub_s_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_hsub_s_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_hsub_u_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_hsub_u_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_hsub_u_h {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_hsub_u_h";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_hsub_u_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_hsub_u_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_ilvev_b {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_ilvev_b";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_ilvev_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_ilvev_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_v2i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_ilvev_h {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_ilvev_h";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_ilvev_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_ilvev_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_ilvl_b {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_ilvl_b";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_ilvl_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_ilvl_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_v2i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_ilvl_h {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_ilvl_h";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_ilvl_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_ilvl_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_ilvod_b {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_ilvod_b";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_ilvod_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_ilvod_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_v2i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_ilvod_h {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_ilvod_h";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_ilvod_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_ilvod_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_ilvr_b {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_ilvr_b";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_ilvr_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_ilvr_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_v2i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_ilvr_h {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_ilvr_h";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_ilvr_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_ilvr_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_insert_b {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_insert_b";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_insert_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_insert_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_i32_ty, llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_insert_h {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_insert_h";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_insert_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_insert_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_insv {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_mips_insv";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrReadMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_insve_b {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_insve_b";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_i32_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_insve_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_insve_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_i32_ty, llvm_v2i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_insve_h {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_insve_h";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_i32_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_insve_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_insve_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_lbux {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_mips_lbux";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrReadArgMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_ld_b {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_ld_b";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrReadArgMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_ld_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_ld_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrReadArgMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_ld_h {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_ld_h";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrReadArgMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_ld_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_ld_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrReadArgMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_ldi_b {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_ldi_b";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_ldi_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_ldi_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_ldi_h {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_ldi_h";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_ldi_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_ldi_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_lhx {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_mips_lhx";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrReadArgMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_lsa {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_mips_lsa";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_lwx {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_mips_lwx";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrReadArgMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_madd {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_mips_madd";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_madd_q_h {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_madd_q_h";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_madd_q_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_madd_q_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_maddr_q_h {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_maddr_q_h";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_maddr_q_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_maddr_q_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_maddu {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_mips_maddu";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_maddv_b {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_maddv_b";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_maddv_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_maddv_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_v2i64_ty, llvm_v2i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_maddv_h {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_maddv_h";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_maddv_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_maddv_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_maq_s_w_phl {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_mips_maq_s_w_phl";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, mips_v2q15_ty, mips_v2q15_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_maq_s_w_phr {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_mips_maq_s_w_phr";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, mips_v2q15_ty, mips_v2q15_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_maq_sa_w_phl {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_mips_maq_sa_w_phl";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, mips_v2q15_ty, mips_v2q15_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_maq_sa_w_phr {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_mips_maq_sa_w_phr";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, mips_v2q15_ty, mips_v2q15_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_max_a_b {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_max_a_b";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_max_a_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_max_a_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_v2i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_max_a_h {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_max_a_h";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_max_a_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_max_a_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_max_s_b {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_max_s_b";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_max_s_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_max_s_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_v2i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_max_s_h {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_max_s_h";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_max_s_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_max_s_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_max_u_b {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_max_u_b";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_max_u_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_max_u_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_v2i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_max_u_h {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_max_u_h";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_max_u_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_max_u_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_maxi_s_b {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_maxi_s_b";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_maxi_s_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_maxi_s_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_maxi_s_h {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_maxi_s_h";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_maxi_s_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_maxi_s_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_maxi_u_b {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_maxi_u_b";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_maxi_u_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_maxi_u_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_maxi_u_h {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_maxi_u_h";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_maxi_u_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_maxi_u_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_min_a_b {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_min_a_b";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_min_a_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_min_a_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_v2i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_min_a_h {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_min_a_h";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_min_a_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_min_a_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_min_s_b {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_min_s_b";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_min_s_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_min_s_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_v2i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_min_s_h {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_min_s_h";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_min_s_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_min_s_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_min_u_b {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_min_u_b";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_min_u_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_min_u_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_v2i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_min_u_h {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_min_u_h";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_min_u_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_min_u_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_mini_s_b {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_mini_s_b";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_mini_s_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_mini_s_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_mini_s_h {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_mini_s_h";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_mini_s_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_mini_s_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_mini_u_b {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_mini_u_b";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_mini_u_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_mini_u_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_mini_u_h {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_mini_u_h";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_mini_u_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_mini_u_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_mod_s_b {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_mod_s_b";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_mod_s_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_mod_s_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_v2i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_mod_s_h {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_mod_s_h";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_mod_s_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_mod_s_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_mod_u_b {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_mod_u_b";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_mod_u_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_mod_u_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_v2i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_mod_u_h {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_mod_u_h";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_mod_u_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_mod_u_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_modsub {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_mips_modsub";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_move_v {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_move_v";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_msub {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_mips_msub";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_msub_q_h {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_msub_q_h";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_msub_q_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_msub_q_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_msubr_q_h {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_msubr_q_h";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_msubr_q_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_msubr_q_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_msubu {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_mips_msubu";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_msubv_b {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_msubv_b";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_msubv_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_msubv_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_v2i64_ty, llvm_v2i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_msubv_h {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_msubv_h";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_msubv_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_msubv_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_mthlip {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_mips_mthlip";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_mul_ph {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_mips_mul_ph";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v2i16_ty];
  list<LLVMType> ParamTypes = [llvm_v2i16_ty, llvm_v2i16_ty];
  list<IntrinsicProperty> Properties = [Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_mul_q_h {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_mul_q_h";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_mul_q_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_mul_q_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_mul_s_ph {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_mips_mul_s_ph";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v2i16_ty];
  list<LLVMType> ParamTypes = [llvm_v2i16_ty, llvm_v2i16_ty];
  list<IntrinsicProperty> Properties = [Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_muleq_s_w_phl {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_mips_muleq_s_w_phl";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [mips_q31_ty];
  list<LLVMType> ParamTypes = [mips_v2q15_ty, mips_v2q15_ty];
  list<IntrinsicProperty> Properties = [Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_muleq_s_w_phr {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_mips_muleq_s_w_phr";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [mips_q31_ty];
  list<LLVMType> ParamTypes = [mips_v2q15_ty, mips_v2q15_ty];
  list<IntrinsicProperty> Properties = [Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_muleu_s_ph_qbl {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_mips_muleu_s_ph_qbl";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [mips_v2q15_ty];
  list<LLVMType> ParamTypes = [llvm_v4i8_ty, mips_v2q15_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_muleu_s_ph_qbr {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_mips_muleu_s_ph_qbr";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [mips_v2q15_ty];
  list<LLVMType> ParamTypes = [llvm_v4i8_ty, mips_v2q15_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_mulq_rs_ph {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_mips_mulq_rs_ph";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [mips_v2q15_ty];
  list<LLVMType> ParamTypes = [mips_v2q15_ty, mips_v2q15_ty];
  list<IntrinsicProperty> Properties = [Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_mulq_rs_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_mips_mulq_rs_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [mips_q31_ty];
  list<LLVMType> ParamTypes = [mips_q31_ty, mips_q31_ty];
  list<IntrinsicProperty> Properties = [Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_mulq_s_ph {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_mips_mulq_s_ph";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [mips_v2q15_ty];
  list<LLVMType> ParamTypes = [mips_v2q15_ty, mips_v2q15_ty];
  list<IntrinsicProperty> Properties = [Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_mulq_s_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_mips_mulq_s_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [mips_q31_ty];
  list<LLVMType> ParamTypes = [mips_q31_ty, mips_q31_ty];
  list<IntrinsicProperty> Properties = [Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_mulr_q_h {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_mulr_q_h";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_mulr_q_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_mulr_q_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_mulsa_w_ph {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_mips_mulsa_w_ph";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_v2i16_ty, llvm_v2i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_mulsaq_s_w_ph {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_mips_mulsaq_s_w_ph";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, mips_v2q15_ty, mips_v2q15_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_mult {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_mips_mult";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_multu {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_mips_multu";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_mulv_b {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_mulv_b";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_mulv_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_mulv_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_v2i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_mulv_h {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_mulv_h";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_mulv_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_mulv_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_nloc_b {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_nloc_b";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_nloc_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_nloc_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_nloc_h {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_nloc_h";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_nloc_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_nloc_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_nlzc_b {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_nlzc_b";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_nlzc_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_nlzc_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_nlzc_h {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_nlzc_h";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_nlzc_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_nlzc_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_nor_v {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_nor_v";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_nori_b {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_nori_b";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_or_v {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_or_v";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_ori_b {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_ori_b";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_packrl_ph {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_mips_packrl_ph";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [mips_v2q15_ty];
  list<LLVMType> ParamTypes = [mips_v2q15_ty, mips_v2q15_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_pckev_b {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_pckev_b";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_pckev_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_pckev_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_v2i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_pckev_h {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_pckev_h";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_pckev_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_pckev_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_pckod_b {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_pckod_b";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_pckod_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_pckod_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_v2i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_pckod_h {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_pckod_h";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_pckod_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_pckod_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_pcnt_b {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_pcnt_b";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_pcnt_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_pcnt_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_pcnt_h {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_pcnt_h";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_pcnt_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_pcnt_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_pick_ph {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_mips_pick_ph";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [mips_v2q15_ty];
  list<LLVMType> ParamTypes = [mips_v2q15_ty, mips_v2q15_ty];
  list<IntrinsicProperty> Properties = [IntrReadMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_pick_qb {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_mips_pick_qb";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4i8_ty];
  list<LLVMType> ParamTypes = [llvm_v4i8_ty, llvm_v4i8_ty];
  list<IntrinsicProperty> Properties = [IntrReadMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_preceq_w_phl {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_mips_preceq_w_phl";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [mips_q31_ty];
  list<LLVMType> ParamTypes = [mips_v2q15_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_preceq_w_phr {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_mips_preceq_w_phr";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [mips_q31_ty];
  list<LLVMType> ParamTypes = [mips_v2q15_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_precequ_ph_qbl {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_mips_precequ_ph_qbl";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [mips_v2q15_ty];
  list<LLVMType> ParamTypes = [llvm_v4i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_precequ_ph_qbla {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_mips_precequ_ph_qbla";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [mips_v2q15_ty];
  list<LLVMType> ParamTypes = [llvm_v4i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_precequ_ph_qbr {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_mips_precequ_ph_qbr";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [mips_v2q15_ty];
  list<LLVMType> ParamTypes = [llvm_v4i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_precequ_ph_qbra {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_mips_precequ_ph_qbra";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [mips_v2q15_ty];
  list<LLVMType> ParamTypes = [llvm_v4i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_preceu_ph_qbl {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_mips_preceu_ph_qbl";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [mips_v2q15_ty];
  list<LLVMType> ParamTypes = [llvm_v4i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_preceu_ph_qbla {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_mips_preceu_ph_qbla";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [mips_v2q15_ty];
  list<LLVMType> ParamTypes = [llvm_v4i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_preceu_ph_qbr {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_mips_preceu_ph_qbr";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [mips_v2q15_ty];
  list<LLVMType> ParamTypes = [llvm_v4i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_preceu_ph_qbra {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_mips_preceu_ph_qbra";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [mips_v2q15_ty];
  list<LLVMType> ParamTypes = [llvm_v4i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_precr_qb_ph {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_mips_precr_qb_ph";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4i8_ty];
  list<LLVMType> ParamTypes = [llvm_v2i16_ty, llvm_v2i16_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_precr_sra_ph_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_mips_precr_sra_ph_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v2i16_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_precr_sra_r_ph_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_mips_precr_sra_r_ph_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v2i16_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_precrq_ph_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_mips_precrq_ph_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [mips_v2q15_ty];
  list<LLVMType> ParamTypes = [mips_q31_ty, mips_q31_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_precrq_qb_ph {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_mips_precrq_qb_ph";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4i8_ty];
  list<LLVMType> ParamTypes = [mips_v2q15_ty, mips_v2q15_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_precrq_rs_ph_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_mips_precrq_rs_ph_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [mips_v2q15_ty];
  list<LLVMType> ParamTypes = [mips_q31_ty, mips_q31_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_precrqu_s_qb_ph {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_mips_precrqu_s_qb_ph";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4i8_ty];
  list<LLVMType> ParamTypes = [mips_v2q15_ty, mips_v2q15_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_prepend {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_mips_prepend";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_raddu_w_qb {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_mips_raddu_w_qb";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_rddsp {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_mips_rddsp";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrReadMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_repl_ph {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_mips_repl_ph";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [mips_v2q15_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_repl_qb {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_mips_repl_qb";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4i8_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_sat_s_b {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_sat_s_b";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_sat_s_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_sat_s_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_sat_s_h {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_sat_s_h";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_sat_s_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_sat_s_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_sat_u_b {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_sat_u_b";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_sat_u_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_sat_u_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_sat_u_h {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_sat_u_h";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_sat_u_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_sat_u_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_shf_b {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_shf_b";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_shf_h {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_shf_h";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_shf_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_shf_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_shilo {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_mips_shilo";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_shll_ph {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_mips_shll_ph";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [mips_v2q15_ty];
  list<LLVMType> ParamTypes = [mips_v2q15_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_shll_qb {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_mips_shll_qb";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4i8_ty];
  list<LLVMType> ParamTypes = [llvm_v4i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_shll_s_ph {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_mips_shll_s_ph";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [mips_v2q15_ty];
  list<LLVMType> ParamTypes = [mips_v2q15_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_shll_s_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_mips_shll_s_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [mips_q31_ty];
  list<LLVMType> ParamTypes = [mips_q31_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_shra_ph {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_mips_shra_ph";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [mips_v2q15_ty];
  list<LLVMType> ParamTypes = [mips_v2q15_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_shra_qb {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_mips_shra_qb";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4i8_ty];
  list<LLVMType> ParamTypes = [llvm_v4i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_shra_r_ph {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_mips_shra_r_ph";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [mips_v2q15_ty];
  list<LLVMType> ParamTypes = [mips_v2q15_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_shra_r_qb {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_mips_shra_r_qb";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4i8_ty];
  list<LLVMType> ParamTypes = [llvm_v4i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_shra_r_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_mips_shra_r_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [mips_q31_ty];
  list<LLVMType> ParamTypes = [mips_q31_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_shrl_ph {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_mips_shrl_ph";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v2i16_ty];
  list<LLVMType> ParamTypes = [llvm_v2i16_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_shrl_qb {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_mips_shrl_qb";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4i8_ty];
  list<LLVMType> ParamTypes = [llvm_v4i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_sld_b {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_sld_b";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_sld_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_sld_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_v2i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_sld_h {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_sld_h";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_sld_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_sld_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_sldi_b {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_sldi_b";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_sldi_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_sldi_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_v2i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_sldi_h {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_sldi_h";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_sldi_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_sldi_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_sll_b {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_sll_b";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_sll_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_sll_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_v2i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_sll_h {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_sll_h";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_sll_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_sll_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_slli_b {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_slli_b";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_slli_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_slli_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_slli_h {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_slli_h";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_slli_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_slli_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_splat_b {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_splat_b";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_splat_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_splat_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_splat_h {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_splat_h";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_splat_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_splat_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_splati_b {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_splati_b";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_splati_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_splati_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_splati_h {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_splati_h";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_splati_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_splati_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_sra_b {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_sra_b";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_sra_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_sra_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_v2i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_sra_h {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_sra_h";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_sra_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_sra_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_srai_b {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_srai_b";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_srai_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_srai_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_srai_h {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_srai_h";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_srai_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_srai_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_srar_b {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_srar_b";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_srar_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_srar_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_v2i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_srar_h {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_srar_h";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_srar_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_srar_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_srari_b {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_srari_b";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_srari_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_srari_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_srari_h {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_srari_h";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_srari_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_srari_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_srl_b {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_srl_b";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_srl_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_srl_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_v2i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_srl_h {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_srl_h";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_srl_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_srl_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_srli_b {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_srli_b";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_srli_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_srli_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_srli_h {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_srli_h";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_srli_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_srli_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_srlr_b {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_srlr_b";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_srlr_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_srlr_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_v2i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_srlr_h {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_srlr_h";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_srlr_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_srlr_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_srlri_b {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_srlri_b";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_srlri_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_srlri_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_srlri_h {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_srlri_h";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_srlri_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_srlri_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_st_b {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_st_b";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_ptr_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrReadWriteArgMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_st_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_st_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_ptr_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrReadWriteArgMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_st_h {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_st_h";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_ptr_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrReadWriteArgMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_st_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_st_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_ptr_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrReadWriteArgMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_subq_ph {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_mips_subq_ph";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [mips_v2q15_ty];
  list<LLVMType> ParamTypes = [mips_v2q15_ty, mips_v2q15_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_subq_s_ph {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_mips_subq_s_ph";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [mips_v2q15_ty];
  list<LLVMType> ParamTypes = [mips_v2q15_ty, mips_v2q15_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_subq_s_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_mips_subq_s_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [mips_q31_ty];
  list<LLVMType> ParamTypes = [mips_q31_ty, mips_q31_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_subqh_ph {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_mips_subqh_ph";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [mips_v2q15_ty];
  list<LLVMType> ParamTypes = [mips_v2q15_ty, mips_v2q15_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_subqh_r_ph {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_mips_subqh_r_ph";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [mips_v2q15_ty];
  list<LLVMType> ParamTypes = [mips_v2q15_ty, mips_v2q15_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_subqh_r_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_mips_subqh_r_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [mips_q31_ty];
  list<LLVMType> ParamTypes = [mips_q31_ty, mips_q31_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_subqh_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_mips_subqh_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [mips_q31_ty];
  list<LLVMType> ParamTypes = [mips_q31_ty, mips_q31_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_subs_s_b {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_subs_s_b";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_subs_s_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_subs_s_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_v2i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_subs_s_h {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_subs_s_h";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_subs_s_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_subs_s_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_subs_u_b {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_subs_u_b";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_subs_u_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_subs_u_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_v2i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_subs_u_h {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_subs_u_h";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_subs_u_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_subs_u_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_subsus_u_b {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_subsus_u_b";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_subsus_u_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_subsus_u_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_v2i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_subsus_u_h {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_subsus_u_h";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_subsus_u_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_subsus_u_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_subsuu_s_b {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_subsuu_s_b";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_subsuu_s_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_subsuu_s_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_v2i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_subsuu_s_h {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_subsuu_s_h";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_subsuu_s_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_subsuu_s_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_subu_ph {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_mips_subu_ph";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v2i16_ty];
  list<LLVMType> ParamTypes = [llvm_v2i16_ty, llvm_v2i16_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_subu_qb {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_mips_subu_qb";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4i8_ty];
  list<LLVMType> ParamTypes = [llvm_v4i8_ty, llvm_v4i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_subu_s_ph {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_mips_subu_s_ph";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v2i16_ty];
  list<LLVMType> ParamTypes = [llvm_v2i16_ty, llvm_v2i16_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_subu_s_qb {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_mips_subu_s_qb";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4i8_ty];
  list<LLVMType> ParamTypes = [llvm_v4i8_ty, llvm_v4i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_subuh_qb {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_mips_subuh_qb";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4i8_ty];
  list<LLVMType> ParamTypes = [llvm_v4i8_ty, llvm_v4i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_subuh_r_qb {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_mips_subuh_r_qb";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4i8_ty];
  list<LLVMType> ParamTypes = [llvm_v4i8_ty, llvm_v4i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_subv_b {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_subv_b";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_subv_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_subv_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_v2i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_subv_h {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_subv_h";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_subv_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_subv_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_subvi_b {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_subvi_b";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_subvi_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_subvi_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_subvi_h {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_subvi_h";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_subvi_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_subvi_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_vshf_b {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_vshf_b";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_vshf_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_vshf_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_v2i64_ty, llvm_v2i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_vshf_h {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_vshf_h";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_vshf_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_vshf_w";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_wrdsp {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_mips_wrdsp";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_xor_v {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_xor_v";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_mips_xori_b {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_msa_xori_b";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "mips";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nearbyint {	// SDPatternOperator Intrinsic
  list<IntrinsicProperty> Intrinsic:properties = [];
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_anyfloat_ty];
  list<LLVMType> ParamTypes = [anonymous_38];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_abs_i {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_abs_i";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_abs_ll {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_abs_ll";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_add_rm_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_add_rm_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_double_ty];
  list<LLVMType> ParamTypes = [llvm_double_ty, llvm_double_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_add_rm_f {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_add_rm_f";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_add_rm_ftz_f {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_add_rm_ftz_f";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_add_rn_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_add_rn_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_double_ty];
  list<LLVMType> ParamTypes = [llvm_double_ty, llvm_double_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_add_rn_f {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_add_rn_f";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_add_rn_ftz_f {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_add_rn_ftz_f";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_add_rp_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_add_rp_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_double_ty];
  list<LLVMType> ParamTypes = [llvm_double_ty, llvm_double_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_add_rp_f {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_add_rp_f";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_add_rp_ftz_f {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_add_rp_ftz_f";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_add_rz_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_add_rz_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_double_ty];
  list<LLVMType> ParamTypes = [llvm_double_ty, llvm_double_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_add_rz_f {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_add_rz_f";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_add_rz_ftz_f {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_add_rz_ftz_f";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_atomic_load_add_f32 {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_float_ty];
  list<LLVMType> ParamTypes = [anonymous_281, llvm_float_ty];
  list<IntrinsicProperty> Properties = [IntrReadWriteArgMem, anonymous_282];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_atomic_load_dec_32 {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [anonymous_285, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrReadWriteArgMem, anonymous_286];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_atomic_load_inc_32 {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [anonymous_283, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrReadWriteArgMem, anonymous_284];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_barrier0 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_bar0";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> Properties = [IntrNoDuplicate];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_barrier0_and {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_bar0_and";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoDuplicate];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_barrier0_or {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_bar0_or";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoDuplicate];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_barrier0_popc {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_bar0_popc";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoDuplicate];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_bitcast_d2ll {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_bitcast_d2ll";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_double_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_bitcast_f2i {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_bitcast_f2i";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_float_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_bitcast_i2f {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_bitcast_i2f";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_bitcast_ll2d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_bitcast_ll2d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_double_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_brev32 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_brev32";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_brev64 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_brev64";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_ceil_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_ceil_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_double_ty];
  list<LLVMType> ParamTypes = [llvm_double_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_ceil_f {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_ceil_f";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_float_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_ceil_ftz_f {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_ceil_ftz_f";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_float_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_clz_i {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_clz_i";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_clz_ll {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_clz_ll";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_compiler_error {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.compiler.error";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_anyptr_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_compiler_warn {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.compiler.warn";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_anyptr_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_cos_approx_f {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_cos_approx_f";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_float_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_cos_approx_ftz_f {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_cos_approx_ftz_f";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_float_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_d2f_rm {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_d2f_rm";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_double_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_d2f_rm_ftz {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_d2f_rm_ftz";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_double_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_d2f_rn {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_d2f_rn";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_double_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_d2f_rn_ftz {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_d2f_rn_ftz";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_double_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_d2f_rp {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_d2f_rp";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_double_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_d2f_rp_ftz {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_d2f_rp_ftz";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_double_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_d2f_rz {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_d2f_rz";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_double_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_d2f_rz_ftz {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_d2f_rz_ftz";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_double_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_d2i_hi {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_d2i_hi";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_double_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_d2i_lo {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_d2i_lo";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_double_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_d2i_rm {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_d2i_rm";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_double_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_d2i_rn {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_d2i_rn";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_double_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_d2i_rp {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_d2i_rp";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_double_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_d2i_rz {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_d2i_rz";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_double_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_d2ll_rm {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_d2ll_rm";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_double_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_d2ll_rn {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_d2ll_rn";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_double_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_d2ll_rp {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_d2ll_rp";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_double_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_d2ll_rz {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_d2ll_rz";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_double_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_d2ui_rm {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_d2ui_rm";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_double_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_d2ui_rn {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_d2ui_rn";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_double_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_d2ui_rp {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_d2ui_rp";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_double_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_d2ui_rz {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_d2ui_rz";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_double_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_d2ull_rm {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_d2ull_rm";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_double_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_d2ull_rn {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_d2ull_rn";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_double_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_d2ull_rp {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_d2ull_rp";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_double_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_d2ull_rz {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_d2ull_rz";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_double_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_div_approx_f {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_div_approx_f";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_div_approx_ftz_f {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_div_approx_ftz_f";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_div_rm_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_div_rm_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_double_ty];
  list<LLVMType> ParamTypes = [llvm_double_ty, llvm_double_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_div_rm_f {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_div_rm_f";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_div_rm_ftz_f {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_div_rm_ftz_f";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_div_rn_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_div_rn_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_double_ty];
  list<LLVMType> ParamTypes = [llvm_double_ty, llvm_double_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_div_rn_f {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_div_rn_f";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_div_rn_ftz_f {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_div_rn_ftz_f";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_div_rp_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_div_rp_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_double_ty];
  list<LLVMType> ParamTypes = [llvm_double_ty, llvm_double_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_div_rp_f {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_div_rp_f";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_div_rp_ftz_f {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_div_rp_ftz_f";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_div_rz_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_div_rz_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_double_ty];
  list<LLVMType> ParamTypes = [llvm_double_ty, llvm_double_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_div_rz_f {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_div_rz_f";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_div_rz_ftz_f {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_div_rz_ftz_f";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_ex2_approx_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_ex2_approx_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_double_ty];
  list<LLVMType> ParamTypes = [llvm_double_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_ex2_approx_f {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_ex2_approx_f";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_float_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_ex2_approx_ftz_f {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_ex2_approx_ftz_f";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_float_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_f2h_rn {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_f2h_rn";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i16_ty];
  list<LLVMType> ParamTypes = [llvm_float_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_f2h_rn_ftz {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_f2h_rn_ftz";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i16_ty];
  list<LLVMType> ParamTypes = [llvm_float_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_f2i_rm {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_f2i_rm";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_float_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_f2i_rm_ftz {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_f2i_rm_ftz";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_float_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_f2i_rn {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_f2i_rn";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_float_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_f2i_rn_ftz {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_f2i_rn_ftz";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_float_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_f2i_rp {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_f2i_rp";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_float_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_f2i_rp_ftz {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_f2i_rp_ftz";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_float_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_f2i_rz {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_f2i_rz";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_float_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_f2i_rz_ftz {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_f2i_rz_ftz";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_float_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_f2ll_rm {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_f2ll_rm";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_float_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_f2ll_rm_ftz {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_f2ll_rm_ftz";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_float_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_f2ll_rn {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_f2ll_rn";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_float_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_f2ll_rn_ftz {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_f2ll_rn_ftz";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_float_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_f2ll_rp {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_f2ll_rp";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_float_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_f2ll_rp_ftz {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_f2ll_rp_ftz";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_float_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_f2ll_rz {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_f2ll_rz";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_float_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_f2ll_rz_ftz {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_f2ll_rz_ftz";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_float_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_f2ui_rm {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_f2ui_rm";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_float_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_f2ui_rm_ftz {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_f2ui_rm_ftz";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_float_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_f2ui_rn {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_f2ui_rn";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_float_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_f2ui_rn_ftz {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_f2ui_rn_ftz";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_float_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_f2ui_rp {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_f2ui_rp";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_float_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_f2ui_rp_ftz {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_f2ui_rp_ftz";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_float_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_f2ui_rz {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_f2ui_rz";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_float_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_f2ui_rz_ftz {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_f2ui_rz_ftz";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_float_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_f2ull_rm {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_f2ull_rm";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_float_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_f2ull_rm_ftz {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_f2ull_rm_ftz";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_float_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_f2ull_rn {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_f2ull_rn";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_float_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_f2ull_rn_ftz {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_f2ull_rn_ftz";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_float_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_f2ull_rp {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_f2ull_rp";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_float_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_f2ull_rp_ftz {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_f2ull_rp_ftz";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_float_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_f2ull_rz {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_f2ull_rz";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_float_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_f2ull_rz_ftz {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_f2ull_rz_ftz";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_float_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_fabs_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_fabs_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_double_ty];
  list<LLVMType> ParamTypes = [llvm_double_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_fabs_f {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_fabs_f";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_float_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_fabs_ftz_f {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_fabs_ftz_f";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_float_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_floor_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_floor_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_double_ty];
  list<LLVMType> ParamTypes = [llvm_double_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_floor_f {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_floor_f";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_float_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_floor_ftz_f {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_floor_ftz_f";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_float_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_fma_rm_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_fma_rm_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_double_ty];
  list<LLVMType> ParamTypes = [llvm_double_ty, llvm_double_ty, llvm_double_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_fma_rm_f {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_fma_rm_f";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_float_ty, llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_fma_rm_ftz_f {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_fma_rm_ftz_f";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_float_ty, llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_fma_rn_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_fma_rn_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_double_ty];
  list<LLVMType> ParamTypes = [llvm_double_ty, llvm_double_ty, llvm_double_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_fma_rn_f {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_fma_rn_f";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_float_ty, llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_fma_rn_ftz_f {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_fma_rn_ftz_f";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_float_ty, llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_fma_rp_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_fma_rp_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_double_ty];
  list<LLVMType> ParamTypes = [llvm_double_ty, llvm_double_ty, llvm_double_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_fma_rp_f {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_fma_rp_f";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_float_ty, llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_fma_rp_ftz_f {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_fma_rp_ftz_f";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_float_ty, llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_fma_rz_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_fma_rz_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_double_ty];
  list<LLVMType> ParamTypes = [llvm_double_ty, llvm_double_ty, llvm_double_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_fma_rz_f {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_fma_rz_f";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_float_ty, llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_fma_rz_ftz_f {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_fma_rz_ftz_f";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_float_ty, llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_fmax_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_fmax_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_double_ty];
  list<LLVMType> ParamTypes = [llvm_double_ty, llvm_double_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_fmax_f {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_fmax_f";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_fmax_ftz_f {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_fmax_ftz_f";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_fmin_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_fmin_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_double_ty];
  list<LLVMType> ParamTypes = [llvm_double_ty, llvm_double_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_fmin_f {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_fmin_f";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_fmin_ftz_f {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_fmin_ftz_f";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_h2f {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_h2f";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_i2d_rm {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_i2d_rm";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_double_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_i2d_rn {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_i2d_rn";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_double_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_i2d_rp {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_i2d_rp";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_double_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_i2d_rz {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_i2d_rz";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_double_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_i2f_rm {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_i2f_rm";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_i2f_rn {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_i2f_rn";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_i2f_rp {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_i2f_rp";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_i2f_rz {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_i2f_rz";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_isspacep_const {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.isspacep.const";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i1_ty];
  list<LLVMType> ParamTypes = [llvm_ptr_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_isspacep_const";
  string NAME = ?;
}
def int_nvvm_isspacep_global {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.isspacep.global";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i1_ty];
  list<LLVMType> ParamTypes = [llvm_ptr_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_isspacep_global";
  string NAME = ?;
}
def int_nvvm_isspacep_local {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.isspacep.local";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i1_ty];
  list<LLVMType> ParamTypes = [llvm_ptr_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_isspacep_local";
  string NAME = ?;
}
def int_nvvm_isspacep_shared {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.isspacep.shared";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i1_ty];
  list<LLVMType> ParamTypes = [llvm_ptr_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_isspacep_shared";
  string NAME = ?;
}
def int_nvvm_istypep_sampler {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.istypep.sampler";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i1_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_istypep_sampler";
  string NAME = ?;
}
def int_nvvm_istypep_surface {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.istypep.surface";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i1_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_istypep_surface";
  string NAME = ?;
}
def int_nvvm_istypep_texture {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.istypep.texture";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i1_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_istypep_texture";
  string NAME = ?;
}
def int_nvvm_ldg_global_f {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.ldg.global.f";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_anyfloat_ty];
  list<LLVMType> ParamTypes = [anonymous_300, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrReadMem, anonymous_301];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_ldg_global_i {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.ldg.global.i";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_anyint_ty];
  list<LLVMType> ParamTypes = [anonymous_297, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrReadMem, anonymous_298];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_ldg_global_p {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.ldg.global.p";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_anyptr_ty];
  list<LLVMType> ParamTypes = [anonymous_303, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrReadMem, anonymous_304];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_ldu_global_f {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.ldu.global.f";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_anyfloat_ty];
  list<LLVMType> ParamTypes = [anonymous_291, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrReadMem, anonymous_292];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_ldu_global_i {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.ldu.global.i";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_anyint_ty];
  list<LLVMType> ParamTypes = [anonymous_288, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrReadMem, anonymous_289];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_ldu_global_p {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.ldu.global.p";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_anyptr_ty];
  list<LLVMType> ParamTypes = [anonymous_294, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrReadMem, anonymous_295];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_lg2_approx_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_lg2_approx_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_double_ty];
  list<LLVMType> ParamTypes = [llvm_double_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_lg2_approx_f {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_lg2_approx_f";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_float_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_lg2_approx_ftz_f {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_lg2_approx_ftz_f";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_float_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_ll2d_rm {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_ll2d_rm";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_double_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_ll2d_rn {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_ll2d_rn";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_double_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_ll2d_rp {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_ll2d_rp";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_double_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_ll2d_rz {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_ll2d_rz";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_double_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_ll2f_rm {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_ll2f_rm";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_ll2f_rn {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_ll2f_rn";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_ll2f_rp {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_ll2f_rp";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_ll2f_rz {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_ll2f_rz";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_lohi_i2d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_lohi_i2d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_double_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_max_i {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_max_i";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_max_ll {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_max_ll";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_max_ui {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_max_ui";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_max_ull {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_max_ull";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_membar_cta {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_membar_cta";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_membar_gl {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_membar_gl";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_membar_sys {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_membar_sys";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_min_i {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_min_i";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_min_ll {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_min_ll";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_min_ui {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_min_ui";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_min_ull {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_min_ull";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_move_double {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.move.double";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_double_ty];
  list<LLVMType> ParamTypes = [llvm_double_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_move_float {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.move.float";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_float_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_move_i16 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.move.i16";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i16_ty];
  list<LLVMType> ParamTypes = [llvm_i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_move_i32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.move.i32";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_move_i64 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.move.i64";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_move_ptr {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.move.ptr";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_anyptr_ty];
  list<LLVMType> ParamTypes = [llvm_anyptr_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem, anonymous_305];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_mul24_i {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_mul24_i";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_mul24_ui {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_mul24_ui";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_mul_rm_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_mul_rm_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_double_ty];
  list<LLVMType> ParamTypes = [llvm_double_ty, llvm_double_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_mul_rm_f {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_mul_rm_f";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_mul_rm_ftz_f {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_mul_rm_ftz_f";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_mul_rn_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_mul_rn_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_double_ty];
  list<LLVMType> ParamTypes = [llvm_double_ty, llvm_double_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_mul_rn_f {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_mul_rn_f";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_mul_rn_ftz_f {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_mul_rn_ftz_f";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_mul_rp_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_mul_rp_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_double_ty];
  list<LLVMType> ParamTypes = [llvm_double_ty, llvm_double_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_mul_rp_f {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_mul_rp_f";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_mul_rp_ftz_f {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_mul_rp_ftz_f";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_mul_rz_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_mul_rz_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_double_ty];
  list<LLVMType> ParamTypes = [llvm_double_ty, llvm_double_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_mul_rz_f {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_mul_rz_f";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_mul_rz_ftz_f {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_mul_rz_ftz_f";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_mulhi_i {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_mulhi_i";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_mulhi_ll {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_mulhi_ll";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_mulhi_ui {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_mulhi_ui";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_mulhi_ull {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_mulhi_ull";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_popc_i {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_popc_i";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_popc_ll {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_popc_ll";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_prmt {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_prmt";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_ptr_constant_to_gen {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.ptr.constant.to.gen";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_anyptr_ty];
  list<LLVMType> ParamTypes = [llvm_anyptr_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_ptr_gen_to_constant {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.ptr.gen.to.constant";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_anyptr_ty];
  list<LLVMType> ParamTypes = [llvm_anyptr_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_ptr_gen_to_global {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.ptr.gen.to.global";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_anyptr_ty];
  list<LLVMType> ParamTypes = [llvm_anyptr_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_ptr_gen_to_local {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.ptr.gen.to.local";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_anyptr_ty];
  list<LLVMType> ParamTypes = [llvm_anyptr_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_ptr_gen_to_param {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.ptr.gen.to.param";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_anyptr_ty];
  list<LLVMType> ParamTypes = [llvm_anyptr_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_ptr_gen_to_shared {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.ptr.gen.to.shared";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_anyptr_ty];
  list<LLVMType> ParamTypes = [llvm_anyptr_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_ptr_global_to_gen {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.ptr.global.to.gen";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_anyptr_ty];
  list<LLVMType> ParamTypes = [llvm_anyptr_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_ptr_local_to_gen {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.ptr.local.to.gen";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_anyptr_ty];
  list<LLVMType> ParamTypes = [llvm_anyptr_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_ptr_shared_to_gen {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.ptr.shared.to.gen";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_anyptr_ty];
  list<LLVMType> ParamTypes = [llvm_anyptr_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_rcp_approx_ftz_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_rcp_approx_ftz_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_double_ty];
  list<LLVMType> ParamTypes = [llvm_double_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_rcp_rm_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_rcp_rm_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_double_ty];
  list<LLVMType> ParamTypes = [llvm_double_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_rcp_rm_f {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_rcp_rm_f";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_float_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_rcp_rm_ftz_f {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_rcp_rm_ftz_f";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_float_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_rcp_rn_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_rcp_rn_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_double_ty];
  list<LLVMType> ParamTypes = [llvm_double_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_rcp_rn_f {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_rcp_rn_f";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_float_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_rcp_rn_ftz_f {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_rcp_rn_ftz_f";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_float_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_rcp_rp_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_rcp_rp_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_double_ty];
  list<LLVMType> ParamTypes = [llvm_double_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_rcp_rp_f {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_rcp_rp_f";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_float_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_rcp_rp_ftz_f {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_rcp_rp_ftz_f";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_float_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_rcp_rz_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_rcp_rz_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_double_ty];
  list<LLVMType> ParamTypes = [llvm_double_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_rcp_rz_f {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_rcp_rz_f";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_float_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_rcp_rz_ftz_f {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_rcp_rz_ftz_f";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_float_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_read_ptx_sreg_ctaid_x {	// SDPatternOperator Intrinsic GCCBuiltin
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_read_ptx_sreg_ctaid_x";
  string NAME = ?;
}
def int_nvvm_read_ptx_sreg_ctaid_y {	// SDPatternOperator Intrinsic GCCBuiltin
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_read_ptx_sreg_ctaid_y";
  string NAME = ?;
}
def int_nvvm_read_ptx_sreg_ctaid_z {	// SDPatternOperator Intrinsic GCCBuiltin
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_read_ptx_sreg_ctaid_z";
  string NAME = ?;
}
def int_nvvm_read_ptx_sreg_envreg0 {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.read.ptx.sreg.envreg0";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_read_ptx_sreg_envreg0";
  string NAME = ?;
}
def int_nvvm_read_ptx_sreg_envreg1 {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.read.ptx.sreg.envreg1";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_read_ptx_sreg_envreg1";
  string NAME = ?;
}
def int_nvvm_read_ptx_sreg_envreg10 {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.read.ptx.sreg.envreg10";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_read_ptx_sreg_envreg10";
  string NAME = ?;
}
def int_nvvm_read_ptx_sreg_envreg11 {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.read.ptx.sreg.envreg11";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_read_ptx_sreg_envreg11";
  string NAME = ?;
}
def int_nvvm_read_ptx_sreg_envreg12 {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.read.ptx.sreg.envreg12";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_read_ptx_sreg_envreg12";
  string NAME = ?;
}
def int_nvvm_read_ptx_sreg_envreg13 {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.read.ptx.sreg.envreg13";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_read_ptx_sreg_envreg13";
  string NAME = ?;
}
def int_nvvm_read_ptx_sreg_envreg14 {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.read.ptx.sreg.envreg14";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_read_ptx_sreg_envreg14";
  string NAME = ?;
}
def int_nvvm_read_ptx_sreg_envreg15 {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.read.ptx.sreg.envreg15";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_read_ptx_sreg_envreg15";
  string NAME = ?;
}
def int_nvvm_read_ptx_sreg_envreg16 {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.read.ptx.sreg.envreg16";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_read_ptx_sreg_envreg16";
  string NAME = ?;
}
def int_nvvm_read_ptx_sreg_envreg17 {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.read.ptx.sreg.envreg17";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_read_ptx_sreg_envreg17";
  string NAME = ?;
}
def int_nvvm_read_ptx_sreg_envreg18 {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.read.ptx.sreg.envreg18";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_read_ptx_sreg_envreg18";
  string NAME = ?;
}
def int_nvvm_read_ptx_sreg_envreg19 {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.read.ptx.sreg.envreg19";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_read_ptx_sreg_envreg19";
  string NAME = ?;
}
def int_nvvm_read_ptx_sreg_envreg2 {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.read.ptx.sreg.envreg2";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_read_ptx_sreg_envreg2";
  string NAME = ?;
}
def int_nvvm_read_ptx_sreg_envreg20 {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.read.ptx.sreg.envreg20";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_read_ptx_sreg_envreg20";
  string NAME = ?;
}
def int_nvvm_read_ptx_sreg_envreg21 {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.read.ptx.sreg.envreg21";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_read_ptx_sreg_envreg21";
  string NAME = ?;
}
def int_nvvm_read_ptx_sreg_envreg22 {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.read.ptx.sreg.envreg22";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_read_ptx_sreg_envreg22";
  string NAME = ?;
}
def int_nvvm_read_ptx_sreg_envreg23 {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.read.ptx.sreg.envreg23";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_read_ptx_sreg_envreg23";
  string NAME = ?;
}
def int_nvvm_read_ptx_sreg_envreg24 {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.read.ptx.sreg.envreg24";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_read_ptx_sreg_envreg24";
  string NAME = ?;
}
def int_nvvm_read_ptx_sreg_envreg25 {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.read.ptx.sreg.envreg25";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_read_ptx_sreg_envreg25";
  string NAME = ?;
}
def int_nvvm_read_ptx_sreg_envreg26 {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.read.ptx.sreg.envreg26";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_read_ptx_sreg_envreg26";
  string NAME = ?;
}
def int_nvvm_read_ptx_sreg_envreg27 {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.read.ptx.sreg.envreg27";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_read_ptx_sreg_envreg27";
  string NAME = ?;
}
def int_nvvm_read_ptx_sreg_envreg28 {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.read.ptx.sreg.envreg28";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_read_ptx_sreg_envreg28";
  string NAME = ?;
}
def int_nvvm_read_ptx_sreg_envreg29 {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.read.ptx.sreg.envreg29";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_read_ptx_sreg_envreg29";
  string NAME = ?;
}
def int_nvvm_read_ptx_sreg_envreg3 {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.read.ptx.sreg.envreg3";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_read_ptx_sreg_envreg3";
  string NAME = ?;
}
def int_nvvm_read_ptx_sreg_envreg30 {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.read.ptx.sreg.envreg30";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_read_ptx_sreg_envreg30";
  string NAME = ?;
}
def int_nvvm_read_ptx_sreg_envreg31 {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.read.ptx.sreg.envreg31";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_read_ptx_sreg_envreg31";
  string NAME = ?;
}
def int_nvvm_read_ptx_sreg_envreg4 {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.read.ptx.sreg.envreg4";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_read_ptx_sreg_envreg4";
  string NAME = ?;
}
def int_nvvm_read_ptx_sreg_envreg5 {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.read.ptx.sreg.envreg5";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_read_ptx_sreg_envreg5";
  string NAME = ?;
}
def int_nvvm_read_ptx_sreg_envreg6 {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.read.ptx.sreg.envreg6";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_read_ptx_sreg_envreg6";
  string NAME = ?;
}
def int_nvvm_read_ptx_sreg_envreg7 {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.read.ptx.sreg.envreg7";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_read_ptx_sreg_envreg7";
  string NAME = ?;
}
def int_nvvm_read_ptx_sreg_envreg8 {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.read.ptx.sreg.envreg8";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_read_ptx_sreg_envreg8";
  string NAME = ?;
}
def int_nvvm_read_ptx_sreg_envreg9 {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.read.ptx.sreg.envreg9";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_read_ptx_sreg_envreg9";
  string NAME = ?;
}
def int_nvvm_read_ptx_sreg_nctaid_x {	// SDPatternOperator Intrinsic GCCBuiltin
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_read_ptx_sreg_nctaid_x";
  string NAME = ?;
}
def int_nvvm_read_ptx_sreg_nctaid_y {	// SDPatternOperator Intrinsic GCCBuiltin
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_read_ptx_sreg_nctaid_y";
  string NAME = ?;
}
def int_nvvm_read_ptx_sreg_nctaid_z {	// SDPatternOperator Intrinsic GCCBuiltin
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_read_ptx_sreg_nctaid_z";
  string NAME = ?;
}
def int_nvvm_read_ptx_sreg_ntid_x {	// SDPatternOperator Intrinsic GCCBuiltin
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_read_ptx_sreg_ntid_x";
  string NAME = ?;
}
def int_nvvm_read_ptx_sreg_ntid_y {	// SDPatternOperator Intrinsic GCCBuiltin
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_read_ptx_sreg_ntid_y";
  string NAME = ?;
}
def int_nvvm_read_ptx_sreg_ntid_z {	// SDPatternOperator Intrinsic GCCBuiltin
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_read_ptx_sreg_ntid_z";
  string NAME = ?;
}
def int_nvvm_read_ptx_sreg_tid_x {	// SDPatternOperator Intrinsic GCCBuiltin
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_read_ptx_sreg_tid_x";
  string NAME = ?;
}
def int_nvvm_read_ptx_sreg_tid_y {	// SDPatternOperator Intrinsic GCCBuiltin
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_read_ptx_sreg_tid_y";
  string NAME = ?;
}
def int_nvvm_read_ptx_sreg_tid_z {	// SDPatternOperator Intrinsic GCCBuiltin
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_read_ptx_sreg_tid_z";
  string NAME = ?;
}
def int_nvvm_read_ptx_sreg_warpsize {	// SDPatternOperator Intrinsic GCCBuiltin
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_read_ptx_sreg_warpsize";
  string NAME = ?;
}
def int_nvvm_reflect {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.reflect";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_anyptr_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_rotate_b32 {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.rotate.b32";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_rotate_b32";
  string NAME = ?;
}
def int_nvvm_rotate_b64 {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.rotate.b64";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_rotate_b64";
  string NAME = ?;
}
def int_nvvm_rotate_right_b64 {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.rotate.right.b64";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_rotate_right_b64";
  string NAME = ?;
}
def int_nvvm_round_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_round_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_double_ty];
  list<LLVMType> ParamTypes = [llvm_double_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_round_f {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_round_f";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_float_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_round_ftz_f {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_round_ftz_f";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_float_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_rsqrt_approx_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_rsqrt_approx_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_double_ty];
  list<LLVMType> ParamTypes = [llvm_double_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_rsqrt_approx_f {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_rsqrt_approx_f";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_float_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_rsqrt_approx_ftz_f {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_rsqrt_approx_ftz_f";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_float_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_sad_i {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_sad_i";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_sad_ui {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_sad_ui";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_saturate_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_saturate_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_double_ty];
  list<LLVMType> ParamTypes = [llvm_double_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_saturate_f {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_saturate_f";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_float_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_saturate_ftz_f {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_saturate_ftz_f";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_float_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_sin_approx_f {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_sin_approx_f";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_float_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_sin_approx_ftz_f {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_sin_approx_ftz_f";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_float_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_sqrt_approx_f {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_sqrt_approx_f";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_float_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_sqrt_approx_ftz_f {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_sqrt_approx_ftz_f";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_float_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_sqrt_f {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_sqrt_f";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_float_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_sqrt_rm_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_sqrt_rm_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_double_ty];
  list<LLVMType> ParamTypes = [llvm_double_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_sqrt_rm_f {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_sqrt_rm_f";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_float_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_sqrt_rm_ftz_f {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_sqrt_rm_ftz_f";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_float_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_sqrt_rn_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_sqrt_rn_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_double_ty];
  list<LLVMType> ParamTypes = [llvm_double_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_sqrt_rn_f {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_sqrt_rn_f";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_float_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_sqrt_rn_ftz_f {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_sqrt_rn_ftz_f";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_float_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_sqrt_rp_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_sqrt_rp_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_double_ty];
  list<LLVMType> ParamTypes = [llvm_double_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_sqrt_rp_f {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_sqrt_rp_f";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_float_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_sqrt_rp_ftz_f {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_sqrt_rp_ftz_f";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_float_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_sqrt_rz_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_sqrt_rz_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_double_ty];
  list<LLVMType> ParamTypes = [llvm_double_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_sqrt_rz_f {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_sqrt_rz_f";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_float_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_sqrt_rz_ftz_f {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_sqrt_rz_ftz_f";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_float_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_1d_array_i16_clamp {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.1d.array.i16.clamp";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i16_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_1d_array_i16_trap {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.1d.array.i16.trap";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i16_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_1d_array_i16_zero {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.1d.array.i16.zero";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i16_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_1d_array_i32_clamp {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.1d.array.i32.clamp";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_1d_array_i32_trap {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.1d.array.i32.trap";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_1d_array_i32_zero {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.1d.array.i32.zero";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_1d_array_i64_clamp {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.1d.array.i64.clamp";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_1d_array_i64_trap {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.1d.array.i64.trap";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_1d_array_i64_zero {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.1d.array.i64.zero";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_1d_array_i8_clamp {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.1d.array.i8.clamp";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i16_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_1d_array_i8_trap {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.1d.array.i8.trap";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i16_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_1d_array_i8_zero {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.1d.array.i8.zero";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i16_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_1d_array_v2i16_clamp {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.1d.array.v2i16.clamp";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i16_ty, llvm_i16_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_1d_array_v2i16_trap {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.1d.array.v2i16.trap";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i16_ty, llvm_i16_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_1d_array_v2i16_zero {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.1d.array.v2i16.zero";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i16_ty, llvm_i16_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_1d_array_v2i32_clamp {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.1d.array.v2i32.clamp";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_1d_array_v2i32_trap {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.1d.array.v2i32.trap";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_1d_array_v2i32_zero {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.1d.array.v2i32.zero";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_1d_array_v2i64_clamp {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.1d.array.v2i64.clamp";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i64_ty, llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_1d_array_v2i64_trap {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.1d.array.v2i64.trap";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i64_ty, llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_1d_array_v2i64_zero {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.1d.array.v2i64.zero";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i64_ty, llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_1d_array_v2i8_clamp {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.1d.array.v2i8.clamp";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i16_ty, llvm_i16_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_1d_array_v2i8_trap {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.1d.array.v2i8.trap";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i16_ty, llvm_i16_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_1d_array_v2i8_zero {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.1d.array.v2i8.zero";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i16_ty, llvm_i16_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_1d_array_v4i16_clamp {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.1d.array.v4i16.clamp";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i16_ty, llvm_i16_ty, llvm_i16_ty, llvm_i16_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_1d_array_v4i16_trap {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.1d.array.v4i16.trap";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i16_ty, llvm_i16_ty, llvm_i16_ty, llvm_i16_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_1d_array_v4i16_zero {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.1d.array.v4i16.zero";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i16_ty, llvm_i16_ty, llvm_i16_ty, llvm_i16_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_1d_array_v4i32_clamp {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.1d.array.v4i32.clamp";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_1d_array_v4i32_trap {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.1d.array.v4i32.trap";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_1d_array_v4i32_zero {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.1d.array.v4i32.zero";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_1d_array_v4i8_clamp {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.1d.array.v4i8.clamp";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i16_ty, llvm_i16_ty, llvm_i16_ty, llvm_i16_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_1d_array_v4i8_trap {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.1d.array.v4i8.trap";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i16_ty, llvm_i16_ty, llvm_i16_ty, llvm_i16_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_1d_array_v4i8_zero {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.1d.array.v4i8.zero";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i16_ty, llvm_i16_ty, llvm_i16_ty, llvm_i16_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_1d_i16_clamp {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.1d.i16.clamp";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i16_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_1d_i16_trap {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.1d.i16.trap";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i16_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_1d_i16_zero {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.1d.i16.zero";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i16_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_1d_i32_clamp {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.1d.i32.clamp";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_1d_i32_trap {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.1d.i32.trap";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_1d_i32_zero {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.1d.i32.zero";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_1d_i64_clamp {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.1d.i64.clamp";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_1d_i64_trap {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.1d.i64.trap";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_1d_i64_zero {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.1d.i64.zero";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_1d_i8_clamp {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.1d.i8.clamp";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i16_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_1d_i8_trap {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.1d.i8.trap";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i16_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_1d_i8_zero {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.1d.i8.zero";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i16_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_1d_v2i16_clamp {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.1d.v2i16.clamp";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i16_ty, llvm_i16_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_1d_v2i16_trap {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.1d.v2i16.trap";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i16_ty, llvm_i16_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_1d_v2i16_zero {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.1d.v2i16.zero";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i16_ty, llvm_i16_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_1d_v2i32_clamp {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.1d.v2i32.clamp";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_1d_v2i32_trap {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.1d.v2i32.trap";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_1d_v2i32_zero {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.1d.v2i32.zero";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_1d_v2i64_clamp {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.1d.v2i64.clamp";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i64_ty, llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_1d_v2i64_trap {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.1d.v2i64.trap";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i64_ty, llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_1d_v2i64_zero {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.1d.v2i64.zero";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i64_ty, llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_1d_v2i8_clamp {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.1d.v2i8.clamp";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i16_ty, llvm_i16_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_1d_v2i8_trap {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.1d.v2i8.trap";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i16_ty, llvm_i16_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_1d_v2i8_zero {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.1d.v2i8.zero";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i16_ty, llvm_i16_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_1d_v4i16_clamp {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.1d.v4i16.clamp";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i16_ty, llvm_i16_ty, llvm_i16_ty, llvm_i16_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_1d_v4i16_trap {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.1d.v4i16.trap";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i16_ty, llvm_i16_ty, llvm_i16_ty, llvm_i16_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_1d_v4i16_zero {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.1d.v4i16.zero";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i16_ty, llvm_i16_ty, llvm_i16_ty, llvm_i16_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_1d_v4i32_clamp {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.1d.v4i32.clamp";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_1d_v4i32_trap {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.1d.v4i32.trap";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_1d_v4i32_zero {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.1d.v4i32.zero";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_1d_v4i8_clamp {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.1d.v4i8.clamp";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i16_ty, llvm_i16_ty, llvm_i16_ty, llvm_i16_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_1d_v4i8_trap {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.1d.v4i8.trap";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i16_ty, llvm_i16_ty, llvm_i16_ty, llvm_i16_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_1d_v4i8_zero {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.1d.v4i8.zero";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i16_ty, llvm_i16_ty, llvm_i16_ty, llvm_i16_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_2d_array_i16_clamp {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.2d.array.i16.clamp";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i16_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_2d_array_i16_trap {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.2d.array.i16.trap";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i16_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_2d_array_i16_zero {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.2d.array.i16.zero";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i16_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_2d_array_i32_clamp {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.2d.array.i32.clamp";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_2d_array_i32_trap {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.2d.array.i32.trap";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_2d_array_i32_zero {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.2d.array.i32.zero";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_2d_array_i64_clamp {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.2d.array.i64.clamp";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_2d_array_i64_trap {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.2d.array.i64.trap";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_2d_array_i64_zero {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.2d.array.i64.zero";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_2d_array_i8_clamp {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.2d.array.i8.clamp";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i16_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_2d_array_i8_trap {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.2d.array.i8.trap";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i16_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_2d_array_i8_zero {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.2d.array.i8.zero";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i16_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_2d_array_v2i16_clamp {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.2d.array.v2i16.clamp";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i16_ty, llvm_i16_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_2d_array_v2i16_trap {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.2d.array.v2i16.trap";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i16_ty, llvm_i16_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_2d_array_v2i16_zero {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.2d.array.v2i16.zero";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i16_ty, llvm_i16_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_2d_array_v2i32_clamp {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.2d.array.v2i32.clamp";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_2d_array_v2i32_trap {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.2d.array.v2i32.trap";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_2d_array_v2i32_zero {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.2d.array.v2i32.zero";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_2d_array_v2i64_clamp {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.2d.array.v2i64.clamp";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i64_ty, llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_2d_array_v2i64_trap {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.2d.array.v2i64.trap";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i64_ty, llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_2d_array_v2i64_zero {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.2d.array.v2i64.zero";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i64_ty, llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_2d_array_v2i8_clamp {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.2d.array.v2i8.clamp";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i16_ty, llvm_i16_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_2d_array_v2i8_trap {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.2d.array.v2i8.trap";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i16_ty, llvm_i16_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_2d_array_v2i8_zero {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.2d.array.v2i8.zero";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i16_ty, llvm_i16_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_2d_array_v4i16_clamp {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.2d.array.v4i16.clamp";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i16_ty, llvm_i16_ty, llvm_i16_ty, llvm_i16_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_2d_array_v4i16_trap {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.2d.array.v4i16.trap";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i16_ty, llvm_i16_ty, llvm_i16_ty, llvm_i16_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_2d_array_v4i16_zero {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.2d.array.v4i16.zero";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i16_ty, llvm_i16_ty, llvm_i16_ty, llvm_i16_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_2d_array_v4i32_clamp {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.2d.array.v4i32.clamp";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_2d_array_v4i32_trap {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.2d.array.v4i32.trap";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_2d_array_v4i32_zero {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.2d.array.v4i32.zero";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_2d_array_v4i8_clamp {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.2d.array.v4i8.clamp";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i16_ty, llvm_i16_ty, llvm_i16_ty, llvm_i16_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_2d_array_v4i8_trap {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.2d.array.v4i8.trap";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i16_ty, llvm_i16_ty, llvm_i16_ty, llvm_i16_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_2d_array_v4i8_zero {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.2d.array.v4i8.zero";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i16_ty, llvm_i16_ty, llvm_i16_ty, llvm_i16_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_2d_i16_clamp {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.2d.i16.clamp";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i16_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_2d_i16_trap {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.2d.i16.trap";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i16_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_2d_i16_zero {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.2d.i16.zero";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i16_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_2d_i32_clamp {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.2d.i32.clamp";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_2d_i32_trap {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.2d.i32.trap";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_2d_i32_zero {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.2d.i32.zero";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_2d_i64_clamp {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.2d.i64.clamp";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_2d_i64_trap {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.2d.i64.trap";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_2d_i64_zero {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.2d.i64.zero";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_2d_i8_clamp {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.2d.i8.clamp";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i16_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_2d_i8_trap {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.2d.i8.trap";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i16_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_2d_i8_zero {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.2d.i8.zero";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i16_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_2d_v2i16_clamp {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.2d.v2i16.clamp";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i16_ty, llvm_i16_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_2d_v2i16_trap {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.2d.v2i16.trap";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i16_ty, llvm_i16_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_2d_v2i16_zero {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.2d.v2i16.zero";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i16_ty, llvm_i16_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_2d_v2i32_clamp {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.2d.v2i32.clamp";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_2d_v2i32_trap {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.2d.v2i32.trap";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_2d_v2i32_zero {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.2d.v2i32.zero";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_2d_v2i64_clamp {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.2d.v2i64.clamp";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i64_ty, llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_2d_v2i64_trap {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.2d.v2i64.trap";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i64_ty, llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_2d_v2i64_zero {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.2d.v2i64.zero";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i64_ty, llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_2d_v2i8_clamp {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.2d.v2i8.clamp";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i16_ty, llvm_i16_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_2d_v2i8_trap {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.2d.v2i8.trap";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i16_ty, llvm_i16_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_2d_v2i8_zero {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.2d.v2i8.zero";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i16_ty, llvm_i16_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_2d_v4i16_clamp {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.2d.v4i16.clamp";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i16_ty, llvm_i16_ty, llvm_i16_ty, llvm_i16_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_2d_v4i16_trap {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.2d.v4i16.trap";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i16_ty, llvm_i16_ty, llvm_i16_ty, llvm_i16_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_2d_v4i16_zero {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.2d.v4i16.zero";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i16_ty, llvm_i16_ty, llvm_i16_ty, llvm_i16_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_2d_v4i32_clamp {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.2d.v4i32.clamp";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_2d_v4i32_trap {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.2d.v4i32.trap";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_2d_v4i32_zero {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.2d.v4i32.zero";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_2d_v4i8_clamp {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.2d.v4i8.clamp";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i16_ty, llvm_i16_ty, llvm_i16_ty, llvm_i16_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_2d_v4i8_trap {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.2d.v4i8.trap";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i16_ty, llvm_i16_ty, llvm_i16_ty, llvm_i16_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_2d_v4i8_zero {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.2d.v4i8.zero";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i16_ty, llvm_i16_ty, llvm_i16_ty, llvm_i16_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_3d_i16_clamp {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.3d.i16.clamp";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i16_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_3d_i16_trap {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.3d.i16.trap";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i16_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_3d_i16_zero {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.3d.i16.zero";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i16_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_3d_i32_clamp {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.3d.i32.clamp";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_3d_i32_trap {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.3d.i32.trap";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_3d_i32_zero {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.3d.i32.zero";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_3d_i64_clamp {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.3d.i64.clamp";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_3d_i64_trap {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.3d.i64.trap";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_3d_i64_zero {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.3d.i64.zero";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_3d_i8_clamp {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.3d.i8.clamp";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i16_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_3d_i8_trap {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.3d.i8.trap";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i16_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_3d_i8_zero {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.3d.i8.zero";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i16_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_3d_v2i16_clamp {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.3d.v2i16.clamp";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i16_ty, llvm_i16_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_3d_v2i16_trap {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.3d.v2i16.trap";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i16_ty, llvm_i16_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_3d_v2i16_zero {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.3d.v2i16.zero";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i16_ty, llvm_i16_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_3d_v2i32_clamp {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.3d.v2i32.clamp";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_3d_v2i32_trap {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.3d.v2i32.trap";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_3d_v2i32_zero {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.3d.v2i32.zero";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_3d_v2i64_clamp {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.3d.v2i64.clamp";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i64_ty, llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_3d_v2i64_trap {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.3d.v2i64.trap";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i64_ty, llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_3d_v2i64_zero {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.3d.v2i64.zero";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i64_ty, llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_3d_v2i8_clamp {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.3d.v2i8.clamp";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i16_ty, llvm_i16_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_3d_v2i8_trap {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.3d.v2i8.trap";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i16_ty, llvm_i16_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_3d_v2i8_zero {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.3d.v2i8.zero";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i16_ty, llvm_i16_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_3d_v4i16_clamp {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.3d.v4i16.clamp";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i16_ty, llvm_i16_ty, llvm_i16_ty, llvm_i16_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_3d_v4i16_trap {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.3d.v4i16.trap";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i16_ty, llvm_i16_ty, llvm_i16_ty, llvm_i16_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_3d_v4i16_zero {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.3d.v4i16.zero";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i16_ty, llvm_i16_ty, llvm_i16_ty, llvm_i16_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_3d_v4i32_clamp {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.3d.v4i32.clamp";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_3d_v4i32_trap {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.3d.v4i32.trap";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_3d_v4i32_zero {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.3d.v4i32.zero";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_3d_v4i8_clamp {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.3d.v4i8.clamp";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i16_ty, llvm_i16_ty, llvm_i16_ty, llvm_i16_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_3d_v4i8_trap {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.3d.v4i8.trap";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i16_ty, llvm_i16_ty, llvm_i16_ty, llvm_i16_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suld_3d_v4i8_zero {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.suld.3d.v4i8.zero";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i16_ty, llvm_i16_ty, llvm_i16_ty, llvm_i16_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_suq_array_size {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.suq.array.size";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_suq_array_size";
  string NAME = ?;
}
def int_nvvm_suq_channel_data_type {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.suq.channel.data.type";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_suq_channel_data_type";
  string NAME = ?;
}
def int_nvvm_suq_channel_order {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.suq.channel.order";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_suq_channel_order";
  string NAME = ?;
}
def int_nvvm_suq_depth {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.suq.depth";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_suq_depth";
  string NAME = ?;
}
def int_nvvm_suq_height {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.suq.height";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_suq_height";
  string NAME = ?;
}
def int_nvvm_suq_width {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.suq.width";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_suq_width";
  string NAME = ?;
}
def int_nvvm_sust_b_1d_array_i16_clamp {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.1d.array.i16.clamp";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i16_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_1d_array_i16_clamp";
  string NAME = ?;
}
def int_nvvm_sust_b_1d_array_i16_trap {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.1d.array.i16.trap";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i16_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_1d_array_i16_trap";
  string NAME = ?;
}
def int_nvvm_sust_b_1d_array_i16_zero {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.1d.array.i16.zero";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i16_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_1d_array_i16_zero";
  string NAME = ?;
}
def int_nvvm_sust_b_1d_array_i32_clamp {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.1d.array.i32.clamp";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_1d_array_i32_clamp";
  string NAME = ?;
}
def int_nvvm_sust_b_1d_array_i32_trap {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.1d.array.i32.trap";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_1d_array_i32_trap";
  string NAME = ?;
}
def int_nvvm_sust_b_1d_array_i32_zero {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.1d.array.i32.zero";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_1d_array_i32_zero";
  string NAME = ?;
}
def int_nvvm_sust_b_1d_array_i64_clamp {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.1d.array.i64.clamp";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i64_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_1d_array_i64_clamp";
  string NAME = ?;
}
def int_nvvm_sust_b_1d_array_i64_trap {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.1d.array.i64.trap";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i64_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_1d_array_i64_trap";
  string NAME = ?;
}
def int_nvvm_sust_b_1d_array_i64_zero {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.1d.array.i64.zero";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i64_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_1d_array_i64_zero";
  string NAME = ?;
}
def int_nvvm_sust_b_1d_array_i8_clamp {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.1d.array.i8.clamp";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i16_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_1d_array_i8_clamp";
  string NAME = ?;
}
def int_nvvm_sust_b_1d_array_i8_trap {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.1d.array.i8.trap";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i16_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_1d_array_i8_trap";
  string NAME = ?;
}
def int_nvvm_sust_b_1d_array_i8_zero {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.1d.array.i8.zero";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i16_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_1d_array_i8_zero";
  string NAME = ?;
}
def int_nvvm_sust_b_1d_array_v2i16_clamp {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.1d.array.v2i16.clamp";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i16_ty, llvm_i16_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_1d_array_v2i16_clamp";
  string NAME = ?;
}
def int_nvvm_sust_b_1d_array_v2i16_trap {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.1d.array.v2i16.trap";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i16_ty, llvm_i16_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_1d_array_v2i16_trap";
  string NAME = ?;
}
def int_nvvm_sust_b_1d_array_v2i16_zero {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.1d.array.v2i16.zero";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i16_ty, llvm_i16_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_1d_array_v2i16_zero";
  string NAME = ?;
}
def int_nvvm_sust_b_1d_array_v2i32_clamp {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.1d.array.v2i32.clamp";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_1d_array_v2i32_clamp";
  string NAME = ?;
}
def int_nvvm_sust_b_1d_array_v2i32_trap {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.1d.array.v2i32.trap";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_1d_array_v2i32_trap";
  string NAME = ?;
}
def int_nvvm_sust_b_1d_array_v2i32_zero {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.1d.array.v2i32.zero";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_1d_array_v2i32_zero";
  string NAME = ?;
}
def int_nvvm_sust_b_1d_array_v2i64_clamp {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.1d.array.v2i64.clamp";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_1d_array_v2i64_clamp";
  string NAME = ?;
}
def int_nvvm_sust_b_1d_array_v2i64_trap {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.1d.array.v2i64.trap";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_1d_array_v2i64_trap";
  string NAME = ?;
}
def int_nvvm_sust_b_1d_array_v2i64_zero {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.1d.array.v2i64.zero";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_1d_array_v2i64_zero";
  string NAME = ?;
}
def int_nvvm_sust_b_1d_array_v2i8_clamp {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.1d.array.v2i8.clamp";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i16_ty, llvm_i16_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_1d_array_v2i8_clamp";
  string NAME = ?;
}
def int_nvvm_sust_b_1d_array_v2i8_trap {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.1d.array.v2i8.trap";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i16_ty, llvm_i16_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_1d_array_v2i8_trap";
  string NAME = ?;
}
def int_nvvm_sust_b_1d_array_v2i8_zero {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.1d.array.v2i8.zero";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i16_ty, llvm_i16_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_1d_array_v2i8_zero";
  string NAME = ?;
}
def int_nvvm_sust_b_1d_array_v4i16_clamp {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.1d.array.v4i16.clamp";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i16_ty, llvm_i16_ty, llvm_i16_ty, llvm_i16_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_1d_array_v4i16_clamp";
  string NAME = ?;
}
def int_nvvm_sust_b_1d_array_v4i16_trap {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.1d.array.v4i16.trap";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i16_ty, llvm_i16_ty, llvm_i16_ty, llvm_i16_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_1d_array_v4i16_trap";
  string NAME = ?;
}
def int_nvvm_sust_b_1d_array_v4i16_zero {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.1d.array.v4i16.zero";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i16_ty, llvm_i16_ty, llvm_i16_ty, llvm_i16_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_1d_array_v4i16_zero";
  string NAME = ?;
}
def int_nvvm_sust_b_1d_array_v4i32_clamp {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.1d.array.v4i32.clamp";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_1d_array_v4i32_clamp";
  string NAME = ?;
}
def int_nvvm_sust_b_1d_array_v4i32_trap {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.1d.array.v4i32.trap";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_1d_array_v4i32_trap";
  string NAME = ?;
}
def int_nvvm_sust_b_1d_array_v4i32_zero {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.1d.array.v4i32.zero";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_1d_array_v4i32_zero";
  string NAME = ?;
}
def int_nvvm_sust_b_1d_array_v4i8_clamp {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.1d.array.v4i8.clamp";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i16_ty, llvm_i16_ty, llvm_i16_ty, llvm_i16_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_1d_array_v4i8_clamp";
  string NAME = ?;
}
def int_nvvm_sust_b_1d_array_v4i8_trap {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.1d.array.v4i8.trap";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i16_ty, llvm_i16_ty, llvm_i16_ty, llvm_i16_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_1d_array_v4i8_trap";
  string NAME = ?;
}
def int_nvvm_sust_b_1d_array_v4i8_zero {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.1d.array.v4i8.zero";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i16_ty, llvm_i16_ty, llvm_i16_ty, llvm_i16_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_1d_array_v4i8_zero";
  string NAME = ?;
}
def int_nvvm_sust_b_1d_i16_clamp {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.1d.i16.clamp";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i16_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_1d_i16_clamp";
  string NAME = ?;
}
def int_nvvm_sust_b_1d_i16_trap {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.1d.i16.trap";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i16_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_1d_i16_trap";
  string NAME = ?;
}
def int_nvvm_sust_b_1d_i16_zero {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.1d.i16.zero";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i16_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_1d_i16_zero";
  string NAME = ?;
}
def int_nvvm_sust_b_1d_i32_clamp {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.1d.i32.clamp";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_1d_i32_clamp";
  string NAME = ?;
}
def int_nvvm_sust_b_1d_i32_trap {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.1d.i32.trap";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_1d_i32_trap";
  string NAME = ?;
}
def int_nvvm_sust_b_1d_i32_zero {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.1d.i32.zero";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_1d_i32_zero";
  string NAME = ?;
}
def int_nvvm_sust_b_1d_i64_clamp {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.1d.i64.clamp";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i64_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_1d_i64_clamp";
  string NAME = ?;
}
def int_nvvm_sust_b_1d_i64_trap {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.1d.i64.trap";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i64_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_1d_i64_trap";
  string NAME = ?;
}
def int_nvvm_sust_b_1d_i64_zero {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.1d.i64.zero";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i64_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_1d_i64_zero";
  string NAME = ?;
}
def int_nvvm_sust_b_1d_i8_clamp {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.1d.i8.clamp";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i16_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_1d_i8_clamp";
  string NAME = ?;
}
def int_nvvm_sust_b_1d_i8_trap {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.1d.i8.trap";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i16_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_1d_i8_trap";
  string NAME = ?;
}
def int_nvvm_sust_b_1d_i8_zero {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.1d.i8.zero";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i16_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_1d_i8_zero";
  string NAME = ?;
}
def int_nvvm_sust_b_1d_v2i16_clamp {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.1d.v2i16.clamp";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i16_ty, llvm_i16_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_1d_v2i16_clamp";
  string NAME = ?;
}
def int_nvvm_sust_b_1d_v2i16_trap {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.1d.v2i16.trap";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i16_ty, llvm_i16_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_1d_v2i16_trap";
  string NAME = ?;
}
def int_nvvm_sust_b_1d_v2i16_zero {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.1d.v2i16.zero";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i16_ty, llvm_i16_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_1d_v2i16_zero";
  string NAME = ?;
}
def int_nvvm_sust_b_1d_v2i32_clamp {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.1d.v2i32.clamp";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_1d_v2i32_clamp";
  string NAME = ?;
}
def int_nvvm_sust_b_1d_v2i32_trap {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.1d.v2i32.trap";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_1d_v2i32_trap";
  string NAME = ?;
}
def int_nvvm_sust_b_1d_v2i32_zero {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.1d.v2i32.zero";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_1d_v2i32_zero";
  string NAME = ?;
}
def int_nvvm_sust_b_1d_v2i64_clamp {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.1d.v2i64.clamp";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_1d_v2i64_clamp";
  string NAME = ?;
}
def int_nvvm_sust_b_1d_v2i64_trap {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.1d.v2i64.trap";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_1d_v2i64_trap";
  string NAME = ?;
}
def int_nvvm_sust_b_1d_v2i64_zero {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.1d.v2i64.zero";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_1d_v2i64_zero";
  string NAME = ?;
}
def int_nvvm_sust_b_1d_v2i8_clamp {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.1d.v2i8.clamp";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i16_ty, llvm_i16_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_1d_v2i8_clamp";
  string NAME = ?;
}
def int_nvvm_sust_b_1d_v2i8_trap {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.1d.v2i8.trap";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i16_ty, llvm_i16_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_1d_v2i8_trap";
  string NAME = ?;
}
def int_nvvm_sust_b_1d_v2i8_zero {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.1d.v2i8.zero";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i16_ty, llvm_i16_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_1d_v2i8_zero";
  string NAME = ?;
}
def int_nvvm_sust_b_1d_v4i16_clamp {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.1d.v4i16.clamp";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i16_ty, llvm_i16_ty, llvm_i16_ty, llvm_i16_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_1d_v4i16_clamp";
  string NAME = ?;
}
def int_nvvm_sust_b_1d_v4i16_trap {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.1d.v4i16.trap";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i16_ty, llvm_i16_ty, llvm_i16_ty, llvm_i16_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_1d_v4i16_trap";
  string NAME = ?;
}
def int_nvvm_sust_b_1d_v4i16_zero {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.1d.v4i16.zero";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i16_ty, llvm_i16_ty, llvm_i16_ty, llvm_i16_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_1d_v4i16_zero";
  string NAME = ?;
}
def int_nvvm_sust_b_1d_v4i32_clamp {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.1d.v4i32.clamp";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_1d_v4i32_clamp";
  string NAME = ?;
}
def int_nvvm_sust_b_1d_v4i32_trap {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.1d.v4i32.trap";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_1d_v4i32_trap";
  string NAME = ?;
}
def int_nvvm_sust_b_1d_v4i32_zero {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.1d.v4i32.zero";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_1d_v4i32_zero";
  string NAME = ?;
}
def int_nvvm_sust_b_1d_v4i8_clamp {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.1d.v4i8.clamp";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i16_ty, llvm_i16_ty, llvm_i16_ty, llvm_i16_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_1d_v4i8_clamp";
  string NAME = ?;
}
def int_nvvm_sust_b_1d_v4i8_trap {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.1d.v4i8.trap";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i16_ty, llvm_i16_ty, llvm_i16_ty, llvm_i16_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_1d_v4i8_trap";
  string NAME = ?;
}
def int_nvvm_sust_b_1d_v4i8_zero {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.1d.v4i8.zero";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i16_ty, llvm_i16_ty, llvm_i16_ty, llvm_i16_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_1d_v4i8_zero";
  string NAME = ?;
}
def int_nvvm_sust_b_2d_array_i16_clamp {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.2d.array.i16.clamp";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i16_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_2d_array_i16_clamp";
  string NAME = ?;
}
def int_nvvm_sust_b_2d_array_i16_trap {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.2d.array.i16.trap";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i16_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_2d_array_i16_trap";
  string NAME = ?;
}
def int_nvvm_sust_b_2d_array_i16_zero {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.2d.array.i16.zero";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i16_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_2d_array_i16_zero";
  string NAME = ?;
}
def int_nvvm_sust_b_2d_array_i32_clamp {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.2d.array.i32.clamp";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_2d_array_i32_clamp";
  string NAME = ?;
}
def int_nvvm_sust_b_2d_array_i32_trap {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.2d.array.i32.trap";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_2d_array_i32_trap";
  string NAME = ?;
}
def int_nvvm_sust_b_2d_array_i32_zero {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.2d.array.i32.zero";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_2d_array_i32_zero";
  string NAME = ?;
}
def int_nvvm_sust_b_2d_array_i64_clamp {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.2d.array.i64.clamp";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i64_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_2d_array_i64_clamp";
  string NAME = ?;
}
def int_nvvm_sust_b_2d_array_i64_trap {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.2d.array.i64.trap";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i64_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_2d_array_i64_trap";
  string NAME = ?;
}
def int_nvvm_sust_b_2d_array_i64_zero {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.2d.array.i64.zero";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i64_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_2d_array_i64_zero";
  string NAME = ?;
}
def int_nvvm_sust_b_2d_array_i8_clamp {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.2d.array.i8.clamp";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i16_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_2d_array_i8_clamp";
  string NAME = ?;
}
def int_nvvm_sust_b_2d_array_i8_trap {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.2d.array.i8.trap";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i16_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_2d_array_i8_trap";
  string NAME = ?;
}
def int_nvvm_sust_b_2d_array_i8_zero {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.2d.array.i8.zero";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i16_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_2d_array_i8_zero";
  string NAME = ?;
}
def int_nvvm_sust_b_2d_array_v2i16_clamp {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.2d.array.v2i16.clamp";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i16_ty, llvm_i16_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_2d_array_v2i16_clamp";
  string NAME = ?;
}
def int_nvvm_sust_b_2d_array_v2i16_trap {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.2d.array.v2i16.trap";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i16_ty, llvm_i16_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_2d_array_v2i16_trap";
  string NAME = ?;
}
def int_nvvm_sust_b_2d_array_v2i16_zero {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.2d.array.v2i16.zero";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i16_ty, llvm_i16_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_2d_array_v2i16_zero";
  string NAME = ?;
}
def int_nvvm_sust_b_2d_array_v2i32_clamp {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.2d.array.v2i32.clamp";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_2d_array_v2i32_clamp";
  string NAME = ?;
}
def int_nvvm_sust_b_2d_array_v2i32_trap {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.2d.array.v2i32.trap";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_2d_array_v2i32_trap";
  string NAME = ?;
}
def int_nvvm_sust_b_2d_array_v2i32_zero {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.2d.array.v2i32.zero";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_2d_array_v2i32_zero";
  string NAME = ?;
}
def int_nvvm_sust_b_2d_array_v2i64_clamp {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.2d.array.v2i64.clamp";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_2d_array_v2i64_clamp";
  string NAME = ?;
}
def int_nvvm_sust_b_2d_array_v2i64_trap {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.2d.array.v2i64.trap";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_2d_array_v2i64_trap";
  string NAME = ?;
}
def int_nvvm_sust_b_2d_array_v2i64_zero {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.2d.array.v2i64.zero";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_2d_array_v2i64_zero";
  string NAME = ?;
}
def int_nvvm_sust_b_2d_array_v2i8_clamp {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.2d.array.v2i8.clamp";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i16_ty, llvm_i16_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_2d_array_v2i8_clamp";
  string NAME = ?;
}
def int_nvvm_sust_b_2d_array_v2i8_trap {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.2d.array.v2i8.trap";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i16_ty, llvm_i16_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_2d_array_v2i8_trap";
  string NAME = ?;
}
def int_nvvm_sust_b_2d_array_v2i8_zero {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.2d.array.v2i8.zero";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i16_ty, llvm_i16_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_2d_array_v2i8_zero";
  string NAME = ?;
}
def int_nvvm_sust_b_2d_array_v4i16_clamp {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.2d.array.v4i16.clamp";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i16_ty, llvm_i16_ty, llvm_i16_ty, llvm_i16_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_2d_array_v4i16_clamp";
  string NAME = ?;
}
def int_nvvm_sust_b_2d_array_v4i16_trap {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.2d.array.v4i16.trap";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i16_ty, llvm_i16_ty, llvm_i16_ty, llvm_i16_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_2d_array_v4i16_trap";
  string NAME = ?;
}
def int_nvvm_sust_b_2d_array_v4i16_zero {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.2d.array.v4i16.zero";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i16_ty, llvm_i16_ty, llvm_i16_ty, llvm_i16_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_2d_array_v4i16_zero";
  string NAME = ?;
}
def int_nvvm_sust_b_2d_array_v4i32_clamp {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.2d.array.v4i32.clamp";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_2d_array_v4i32_clamp";
  string NAME = ?;
}
def int_nvvm_sust_b_2d_array_v4i32_trap {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.2d.array.v4i32.trap";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_2d_array_v4i32_trap";
  string NAME = ?;
}
def int_nvvm_sust_b_2d_array_v4i32_zero {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.2d.array.v4i32.zero";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_2d_array_v4i32_zero";
  string NAME = ?;
}
def int_nvvm_sust_b_2d_array_v4i8_clamp {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.2d.array.v4i8.clamp";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i16_ty, llvm_i16_ty, llvm_i16_ty, llvm_i16_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_2d_array_v4i8_clamp";
  string NAME = ?;
}
def int_nvvm_sust_b_2d_array_v4i8_trap {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.2d.array.v4i8.trap";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i16_ty, llvm_i16_ty, llvm_i16_ty, llvm_i16_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_2d_array_v4i8_trap";
  string NAME = ?;
}
def int_nvvm_sust_b_2d_array_v4i8_zero {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.2d.array.v4i8.zero";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i16_ty, llvm_i16_ty, llvm_i16_ty, llvm_i16_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_2d_array_v4i8_zero";
  string NAME = ?;
}
def int_nvvm_sust_b_2d_i16_clamp {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.2d.i16.clamp";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i16_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_2d_i16_clamp";
  string NAME = ?;
}
def int_nvvm_sust_b_2d_i16_trap {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.2d.i16.trap";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i16_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_2d_i16_trap";
  string NAME = ?;
}
def int_nvvm_sust_b_2d_i16_zero {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.2d.i16.zero";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i16_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_2d_i16_zero";
  string NAME = ?;
}
def int_nvvm_sust_b_2d_i32_clamp {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.2d.i32.clamp";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_2d_i32_clamp";
  string NAME = ?;
}
def int_nvvm_sust_b_2d_i32_trap {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.2d.i32.trap";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_2d_i32_trap";
  string NAME = ?;
}
def int_nvvm_sust_b_2d_i32_zero {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.2d.i32.zero";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_2d_i32_zero";
  string NAME = ?;
}
def int_nvvm_sust_b_2d_i64_clamp {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.2d.i64.clamp";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i64_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_2d_i64_clamp";
  string NAME = ?;
}
def int_nvvm_sust_b_2d_i64_trap {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.2d.i64.trap";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i64_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_2d_i64_trap";
  string NAME = ?;
}
def int_nvvm_sust_b_2d_i64_zero {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.2d.i64.zero";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i64_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_2d_i64_zero";
  string NAME = ?;
}
def int_nvvm_sust_b_2d_i8_clamp {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.2d.i8.clamp";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i16_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_2d_i8_clamp";
  string NAME = ?;
}
def int_nvvm_sust_b_2d_i8_trap {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.2d.i8.trap";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i16_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_2d_i8_trap";
  string NAME = ?;
}
def int_nvvm_sust_b_2d_i8_zero {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.2d.i8.zero";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i16_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_2d_i8_zero";
  string NAME = ?;
}
def int_nvvm_sust_b_2d_v2i16_clamp {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.2d.v2i16.clamp";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i16_ty, llvm_i16_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_2d_v2i16_clamp";
  string NAME = ?;
}
def int_nvvm_sust_b_2d_v2i16_trap {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.2d.v2i16.trap";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i16_ty, llvm_i16_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_2d_v2i16_trap";
  string NAME = ?;
}
def int_nvvm_sust_b_2d_v2i16_zero {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.2d.v2i16.zero";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i16_ty, llvm_i16_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_2d_v2i16_zero";
  string NAME = ?;
}
def int_nvvm_sust_b_2d_v2i32_clamp {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.2d.v2i32.clamp";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_2d_v2i32_clamp";
  string NAME = ?;
}
def int_nvvm_sust_b_2d_v2i32_trap {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.2d.v2i32.trap";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_2d_v2i32_trap";
  string NAME = ?;
}
def int_nvvm_sust_b_2d_v2i32_zero {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.2d.v2i32.zero";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_2d_v2i32_zero";
  string NAME = ?;
}
def int_nvvm_sust_b_2d_v2i64_clamp {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.2d.v2i64.clamp";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_2d_v2i64_clamp";
  string NAME = ?;
}
def int_nvvm_sust_b_2d_v2i64_trap {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.2d.v2i64.trap";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_2d_v2i64_trap";
  string NAME = ?;
}
def int_nvvm_sust_b_2d_v2i64_zero {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.2d.v2i64.zero";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_2d_v2i64_zero";
  string NAME = ?;
}
def int_nvvm_sust_b_2d_v2i8_clamp {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.2d.v2i8.clamp";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i16_ty, llvm_i16_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_2d_v2i8_clamp";
  string NAME = ?;
}
def int_nvvm_sust_b_2d_v2i8_trap {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.2d.v2i8.trap";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i16_ty, llvm_i16_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_2d_v2i8_trap";
  string NAME = ?;
}
def int_nvvm_sust_b_2d_v2i8_zero {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.2d.v2i8.zero";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i16_ty, llvm_i16_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_2d_v2i8_zero";
  string NAME = ?;
}
def int_nvvm_sust_b_2d_v4i16_clamp {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.2d.v4i16.clamp";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i16_ty, llvm_i16_ty, llvm_i16_ty, llvm_i16_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_2d_v4i16_clamp";
  string NAME = ?;
}
def int_nvvm_sust_b_2d_v4i16_trap {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.2d.v4i16.trap";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i16_ty, llvm_i16_ty, llvm_i16_ty, llvm_i16_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_2d_v4i16_trap";
  string NAME = ?;
}
def int_nvvm_sust_b_2d_v4i16_zero {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.2d.v4i16.zero";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i16_ty, llvm_i16_ty, llvm_i16_ty, llvm_i16_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_2d_v4i16_zero";
  string NAME = ?;
}
def int_nvvm_sust_b_2d_v4i32_clamp {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.2d.v4i32.clamp";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_2d_v4i32_clamp";
  string NAME = ?;
}
def int_nvvm_sust_b_2d_v4i32_trap {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.2d.v4i32.trap";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_2d_v4i32_trap";
  string NAME = ?;
}
def int_nvvm_sust_b_2d_v4i32_zero {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.2d.v4i32.zero";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_2d_v4i32_zero";
  string NAME = ?;
}
def int_nvvm_sust_b_2d_v4i8_clamp {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.2d.v4i8.clamp";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i16_ty, llvm_i16_ty, llvm_i16_ty, llvm_i16_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_2d_v4i8_clamp";
  string NAME = ?;
}
def int_nvvm_sust_b_2d_v4i8_trap {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.2d.v4i8.trap";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i16_ty, llvm_i16_ty, llvm_i16_ty, llvm_i16_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_2d_v4i8_trap";
  string NAME = ?;
}
def int_nvvm_sust_b_2d_v4i8_zero {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.2d.v4i8.zero";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i16_ty, llvm_i16_ty, llvm_i16_ty, llvm_i16_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_2d_v4i8_zero";
  string NAME = ?;
}
def int_nvvm_sust_b_3d_i16_clamp {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.3d.i16.clamp";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i16_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_3d_i16_clamp";
  string NAME = ?;
}
def int_nvvm_sust_b_3d_i16_trap {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.3d.i16.trap";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i16_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_3d_i16_trap";
  string NAME = ?;
}
def int_nvvm_sust_b_3d_i16_zero {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.3d.i16.zero";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i16_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_3d_i16_zero";
  string NAME = ?;
}
def int_nvvm_sust_b_3d_i32_clamp {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.3d.i32.clamp";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_3d_i32_clamp";
  string NAME = ?;
}
def int_nvvm_sust_b_3d_i32_trap {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.3d.i32.trap";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_3d_i32_trap";
  string NAME = ?;
}
def int_nvvm_sust_b_3d_i32_zero {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.3d.i32.zero";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_3d_i32_zero";
  string NAME = ?;
}
def int_nvvm_sust_b_3d_i64_clamp {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.3d.i64.clamp";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i64_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_3d_i64_clamp";
  string NAME = ?;
}
def int_nvvm_sust_b_3d_i64_trap {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.3d.i64.trap";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i64_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_3d_i64_trap";
  string NAME = ?;
}
def int_nvvm_sust_b_3d_i64_zero {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.3d.i64.zero";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i64_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_3d_i64_zero";
  string NAME = ?;
}
def int_nvvm_sust_b_3d_i8_clamp {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.3d.i8.clamp";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i16_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_3d_i8_clamp";
  string NAME = ?;
}
def int_nvvm_sust_b_3d_i8_trap {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.3d.i8.trap";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i16_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_3d_i8_trap";
  string NAME = ?;
}
def int_nvvm_sust_b_3d_i8_zero {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.3d.i8.zero";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i16_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_3d_i8_zero";
  string NAME = ?;
}
def int_nvvm_sust_b_3d_v2i16_clamp {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.3d.v2i16.clamp";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i16_ty, llvm_i16_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_3d_v2i16_clamp";
  string NAME = ?;
}
def int_nvvm_sust_b_3d_v2i16_trap {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.3d.v2i16.trap";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i16_ty, llvm_i16_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_3d_v2i16_trap";
  string NAME = ?;
}
def int_nvvm_sust_b_3d_v2i16_zero {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.3d.v2i16.zero";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i16_ty, llvm_i16_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_3d_v2i16_zero";
  string NAME = ?;
}
def int_nvvm_sust_b_3d_v2i32_clamp {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.3d.v2i32.clamp";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_3d_v2i32_clamp";
  string NAME = ?;
}
def int_nvvm_sust_b_3d_v2i32_trap {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.3d.v2i32.trap";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_3d_v2i32_trap";
  string NAME = ?;
}
def int_nvvm_sust_b_3d_v2i32_zero {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.3d.v2i32.zero";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_3d_v2i32_zero";
  string NAME = ?;
}
def int_nvvm_sust_b_3d_v2i64_clamp {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.3d.v2i64.clamp";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_3d_v2i64_clamp";
  string NAME = ?;
}
def int_nvvm_sust_b_3d_v2i64_trap {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.3d.v2i64.trap";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_3d_v2i64_trap";
  string NAME = ?;
}
def int_nvvm_sust_b_3d_v2i64_zero {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.3d.v2i64.zero";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_3d_v2i64_zero";
  string NAME = ?;
}
def int_nvvm_sust_b_3d_v2i8_clamp {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.3d.v2i8.clamp";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i16_ty, llvm_i16_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_3d_v2i8_clamp";
  string NAME = ?;
}
def int_nvvm_sust_b_3d_v2i8_trap {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.3d.v2i8.trap";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i16_ty, llvm_i16_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_3d_v2i8_trap";
  string NAME = ?;
}
def int_nvvm_sust_b_3d_v2i8_zero {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.3d.v2i8.zero";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i16_ty, llvm_i16_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_3d_v2i8_zero";
  string NAME = ?;
}
def int_nvvm_sust_b_3d_v4i16_clamp {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.3d.v4i16.clamp";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i16_ty, llvm_i16_ty, llvm_i16_ty, llvm_i16_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_3d_v4i16_clamp";
  string NAME = ?;
}
def int_nvvm_sust_b_3d_v4i16_trap {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.3d.v4i16.trap";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i16_ty, llvm_i16_ty, llvm_i16_ty, llvm_i16_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_3d_v4i16_trap";
  string NAME = ?;
}
def int_nvvm_sust_b_3d_v4i16_zero {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.3d.v4i16.zero";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i16_ty, llvm_i16_ty, llvm_i16_ty, llvm_i16_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_3d_v4i16_zero";
  string NAME = ?;
}
def int_nvvm_sust_b_3d_v4i32_clamp {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.3d.v4i32.clamp";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_3d_v4i32_clamp";
  string NAME = ?;
}
def int_nvvm_sust_b_3d_v4i32_trap {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.3d.v4i32.trap";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_3d_v4i32_trap";
  string NAME = ?;
}
def int_nvvm_sust_b_3d_v4i32_zero {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.3d.v4i32.zero";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_3d_v4i32_zero";
  string NAME = ?;
}
def int_nvvm_sust_b_3d_v4i8_clamp {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.3d.v4i8.clamp";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i16_ty, llvm_i16_ty, llvm_i16_ty, llvm_i16_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_3d_v4i8_clamp";
  string NAME = ?;
}
def int_nvvm_sust_b_3d_v4i8_trap {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.3d.v4i8.trap";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i16_ty, llvm_i16_ty, llvm_i16_ty, llvm_i16_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_3d_v4i8_trap";
  string NAME = ?;
}
def int_nvvm_sust_b_3d_v4i8_zero {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.b.3d.v4i8.zero";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i16_ty, llvm_i16_ty, llvm_i16_ty, llvm_i16_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_b_3d_v4i8_zero";
  string NAME = ?;
}
def int_nvvm_sust_p_1d_array_i16_trap {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.p.1d.array.i16.trap";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i16_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_p_1d_array_i16_trap";
  string NAME = ?;
}
def int_nvvm_sust_p_1d_array_i32_trap {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.p.1d.array.i32.trap";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_p_1d_array_i32_trap";
  string NAME = ?;
}
def int_nvvm_sust_p_1d_array_i8_trap {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.p.1d.array.i8.trap";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i16_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_p_1d_array_i8_trap";
  string NAME = ?;
}
def int_nvvm_sust_p_1d_array_v2i16_trap {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.p.1d.array.v2i16.trap";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i16_ty, llvm_i16_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_p_1d_array_v2i16_trap";
  string NAME = ?;
}
def int_nvvm_sust_p_1d_array_v2i32_trap {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.p.1d.array.v2i32.trap";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_p_1d_array_v2i32_trap";
  string NAME = ?;
}
def int_nvvm_sust_p_1d_array_v2i8_trap {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.p.1d.array.v2i8.trap";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i16_ty, llvm_i16_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_p_1d_array_v2i8_trap";
  string NAME = ?;
}
def int_nvvm_sust_p_1d_array_v4i16_trap {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.p.1d.array.v4i16.trap";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i16_ty, llvm_i16_ty, llvm_i16_ty, llvm_i16_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_p_1d_array_v4i16_trap";
  string NAME = ?;
}
def int_nvvm_sust_p_1d_array_v4i32_trap {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.p.1d.array.v4i32.trap";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_p_1d_array_v4i32_trap";
  string NAME = ?;
}
def int_nvvm_sust_p_1d_array_v4i8_trap {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.p.1d.array.v4i8.trap";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i16_ty, llvm_i16_ty, llvm_i16_ty, llvm_i16_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_p_1d_array_v4i8_trap";
  string NAME = ?;
}
def int_nvvm_sust_p_1d_i16_trap {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.p.1d.i16.trap";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i16_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_p_1d_i16_trap";
  string NAME = ?;
}
def int_nvvm_sust_p_1d_i32_trap {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.p.1d.i32.trap";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_p_1d_i32_trap";
  string NAME = ?;
}
def int_nvvm_sust_p_1d_i8_trap {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.p.1d.i8.trap";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i16_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_p_1d_i8_trap";
  string NAME = ?;
}
def int_nvvm_sust_p_1d_v2i16_trap {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.p.1d.v2i16.trap";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i16_ty, llvm_i16_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_p_1d_v2i16_trap";
  string NAME = ?;
}
def int_nvvm_sust_p_1d_v2i32_trap {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.p.1d.v2i32.trap";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_p_1d_v2i32_trap";
  string NAME = ?;
}
def int_nvvm_sust_p_1d_v2i8_trap {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.p.1d.v2i8.trap";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i16_ty, llvm_i16_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_p_1d_v2i8_trap";
  string NAME = ?;
}
def int_nvvm_sust_p_1d_v4i16_trap {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.p.1d.v4i16.trap";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i16_ty, llvm_i16_ty, llvm_i16_ty, llvm_i16_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_p_1d_v4i16_trap";
  string NAME = ?;
}
def int_nvvm_sust_p_1d_v4i32_trap {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.p.1d.v4i32.trap";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_p_1d_v4i32_trap";
  string NAME = ?;
}
def int_nvvm_sust_p_1d_v4i8_trap {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.p.1d.v4i8.trap";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i16_ty, llvm_i16_ty, llvm_i16_ty, llvm_i16_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_p_1d_v4i8_trap";
  string NAME = ?;
}
def int_nvvm_sust_p_2d_array_i16_trap {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.p.2d.array.i16.trap";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i16_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_p_2d_array_i16_trap";
  string NAME = ?;
}
def int_nvvm_sust_p_2d_array_i32_trap {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.p.2d.array.i32.trap";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_p_2d_array_i32_trap";
  string NAME = ?;
}
def int_nvvm_sust_p_2d_array_i8_trap {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.p.2d.array.i8.trap";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i16_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_p_2d_array_i8_trap";
  string NAME = ?;
}
def int_nvvm_sust_p_2d_array_v2i16_trap {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.p.2d.array.v2i16.trap";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i16_ty, llvm_i16_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_p_2d_array_v2i16_trap";
  string NAME = ?;
}
def int_nvvm_sust_p_2d_array_v2i32_trap {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.p.2d.array.v2i32.trap";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_p_2d_array_v2i32_trap";
  string NAME = ?;
}
def int_nvvm_sust_p_2d_array_v2i8_trap {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.p.2d.array.v2i8.trap";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i16_ty, llvm_i16_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_p_2d_array_v2i8_trap";
  string NAME = ?;
}
def int_nvvm_sust_p_2d_array_v4i16_trap {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.p.2d.array.v4i16.trap";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i16_ty, llvm_i16_ty, llvm_i16_ty, llvm_i16_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_p_2d_array_v4i16_trap";
  string NAME = ?;
}
def int_nvvm_sust_p_2d_array_v4i32_trap {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.p.2d.array.v4i32.trap";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_p_2d_array_v4i32_trap";
  string NAME = ?;
}
def int_nvvm_sust_p_2d_array_v4i8_trap {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.p.2d.array.v4i8.trap";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i16_ty, llvm_i16_ty, llvm_i16_ty, llvm_i16_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_p_2d_array_v4i8_trap";
  string NAME = ?;
}
def int_nvvm_sust_p_2d_i16_trap {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.p.2d.i16.trap";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i16_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_p_2d_i16_trap";
  string NAME = ?;
}
def int_nvvm_sust_p_2d_i32_trap {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.p.2d.i32.trap";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_p_2d_i32_trap";
  string NAME = ?;
}
def int_nvvm_sust_p_2d_i8_trap {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.p.2d.i8.trap";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i16_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_p_2d_i8_trap";
  string NAME = ?;
}
def int_nvvm_sust_p_2d_v2i16_trap {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.p.2d.v2i16.trap";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i16_ty, llvm_i16_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_p_2d_v2i16_trap";
  string NAME = ?;
}
def int_nvvm_sust_p_2d_v2i32_trap {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.p.2d.v2i32.trap";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_p_2d_v2i32_trap";
  string NAME = ?;
}
def int_nvvm_sust_p_2d_v2i8_trap {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.p.2d.v2i8.trap";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i16_ty, llvm_i16_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_p_2d_v2i8_trap";
  string NAME = ?;
}
def int_nvvm_sust_p_2d_v4i16_trap {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.p.2d.v4i16.trap";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i16_ty, llvm_i16_ty, llvm_i16_ty, llvm_i16_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_p_2d_v4i16_trap";
  string NAME = ?;
}
def int_nvvm_sust_p_2d_v4i32_trap {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.p.2d.v4i32.trap";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_p_2d_v4i32_trap";
  string NAME = ?;
}
def int_nvvm_sust_p_2d_v4i8_trap {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.p.2d.v4i8.trap";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i16_ty, llvm_i16_ty, llvm_i16_ty, llvm_i16_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_p_2d_v4i8_trap";
  string NAME = ?;
}
def int_nvvm_sust_p_3d_i16_trap {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.p.3d.i16.trap";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i16_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_p_3d_i16_trap";
  string NAME = ?;
}
def int_nvvm_sust_p_3d_i32_trap {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.p.3d.i32.trap";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_p_3d_i32_trap";
  string NAME = ?;
}
def int_nvvm_sust_p_3d_i8_trap {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.p.3d.i8.trap";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i16_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_p_3d_i8_trap";
  string NAME = ?;
}
def int_nvvm_sust_p_3d_v2i16_trap {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.p.3d.v2i16.trap";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i16_ty, llvm_i16_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_p_3d_v2i16_trap";
  string NAME = ?;
}
def int_nvvm_sust_p_3d_v2i32_trap {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.p.3d.v2i32.trap";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_p_3d_v2i32_trap";
  string NAME = ?;
}
def int_nvvm_sust_p_3d_v2i8_trap {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.p.3d.v2i8.trap";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i16_ty, llvm_i16_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_p_3d_v2i8_trap";
  string NAME = ?;
}
def int_nvvm_sust_p_3d_v4i16_trap {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.p.3d.v4i16.trap";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i16_ty, llvm_i16_ty, llvm_i16_ty, llvm_i16_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_p_3d_v4i16_trap";
  string NAME = ?;
}
def int_nvvm_sust_p_3d_v4i32_trap {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.p.3d.v4i32.trap";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_p_3d_v4i32_trap";
  string NAME = ?;
}
def int_nvvm_sust_p_3d_v4i8_trap {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.sust.p.3d.v4i8.trap";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i16_ty, llvm_i16_ty, llvm_i16_ty, llvm_i16_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_sust_p_3d_v4i8_trap";
  string NAME = ?;
}
def int_nvvm_swap_lo_hi_b64 {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.swap.lo.hi.b64";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_swap_lo_hi_b64";
  string NAME = ?;
}
def int_nvvm_tex_1d_array_grad_v4f32_f32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tex.1d.array.grad.v4f32.f32";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_float_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_i32_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tex_1d_array_grad_v4s32_f32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tex.1d.array.grad.v4s32.f32";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_i32_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tex_1d_array_grad_v4u32_f32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tex.1d.array.grad.v4u32.f32";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_i32_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tex_1d_array_level_v4f32_f32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tex.1d.array.level.v4f32.f32";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_float_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_i32_ty, llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tex_1d_array_level_v4s32_f32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tex.1d.array.level.v4s32.f32";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_i32_ty, llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tex_1d_array_level_v4u32_f32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tex.1d.array.level.v4u32.f32";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_i32_ty, llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tex_1d_array_v4f32_f32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tex.1d.array.v4f32.f32";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_float_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_i32_ty, llvm_float_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tex_1d_array_v4f32_s32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tex.1d.array.v4f32.s32";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_float_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tex_1d_array_v4s32_f32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tex.1d.array.v4s32.f32";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_i32_ty, llvm_float_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tex_1d_array_v4s32_s32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tex.1d.array.v4s32.s32";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tex_1d_array_v4u32_f32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tex.1d.array.v4u32.f32";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_i32_ty, llvm_float_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tex_1d_array_v4u32_s32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tex.1d.array.v4u32.s32";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tex_1d_grad_v4f32_f32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tex.1d.grad.v4f32.f32";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_float_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tex_1d_grad_v4s32_f32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tex.1d.grad.v4s32.f32";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tex_1d_grad_v4u32_f32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tex.1d.grad.v4u32.f32";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tex_1d_level_v4f32_f32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tex.1d.level.v4f32.f32";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_float_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tex_1d_level_v4s32_f32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tex.1d.level.v4s32.f32";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tex_1d_level_v4u32_f32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tex.1d.level.v4u32.f32";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tex_1d_v4f32_f32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tex.1d.v4f32.f32";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_float_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_float_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tex_1d_v4f32_s32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tex.1d.v4f32.s32";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_float_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tex_1d_v4s32_f32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tex.1d.v4s32.f32";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_float_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tex_1d_v4s32_s32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tex.1d.v4s32.s32";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tex_1d_v4u32_f32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tex.1d.v4u32.f32";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_float_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tex_1d_v4u32_s32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tex.1d.v4u32.s32";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tex_2d_array_grad_v4f32_f32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tex.2d.array.grad.v4f32.f32";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_float_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_i32_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tex_2d_array_grad_v4s32_f32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tex.2d.array.grad.v4s32.f32";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_i32_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tex_2d_array_grad_v4u32_f32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tex.2d.array.grad.v4u32.f32";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_i32_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tex_2d_array_level_v4f32_f32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tex.2d.array.level.v4f32.f32";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_float_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_i32_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tex_2d_array_level_v4s32_f32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tex.2d.array.level.v4s32.f32";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_i32_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tex_2d_array_level_v4u32_f32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tex.2d.array.level.v4u32.f32";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_i32_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tex_2d_array_v4f32_f32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tex.2d.array.v4f32.f32";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_float_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_i32_ty, llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tex_2d_array_v4f32_s32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tex.2d.array.v4f32.s32";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_float_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tex_2d_array_v4s32_f32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tex.2d.array.v4s32.f32";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_i32_ty, llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tex_2d_array_v4s32_s32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tex.2d.array.v4s32.s32";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tex_2d_array_v4u32_f32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tex.2d.array.v4u32.f32";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_i32_ty, llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tex_2d_array_v4u32_s32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tex.2d.array.v4u32.s32";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tex_2d_grad_v4f32_f32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tex.2d.grad.v4f32.f32";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_float_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tex_2d_grad_v4s32_f32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tex.2d.grad.v4s32.f32";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tex_2d_grad_v4u32_f32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tex.2d.grad.v4u32.f32";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tex_2d_level_v4f32_f32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tex.2d.level.v4f32.f32";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_float_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tex_2d_level_v4s32_f32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tex.2d.level.v4s32.f32";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tex_2d_level_v4u32_f32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tex.2d.level.v4u32.f32";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tex_2d_v4f32_f32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tex.2d.v4f32.f32";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_float_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tex_2d_v4f32_s32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tex.2d.v4f32.s32";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_float_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tex_2d_v4s32_f32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tex.2d.v4s32.f32";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tex_2d_v4s32_s32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tex.2d.v4s32.s32";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tex_2d_v4u32_f32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tex.2d.v4u32.f32";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tex_2d_v4u32_s32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tex.2d.v4u32.s32";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tex_3d_grad_v4f32_f32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tex.3d.grad.v4f32.f32";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_float_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tex_3d_grad_v4s32_f32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tex.3d.grad.v4s32.f32";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tex_3d_grad_v4u32_f32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tex.3d.grad.v4u32.f32";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tex_3d_level_v4f32_f32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tex.3d.level.v4f32.f32";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_float_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tex_3d_level_v4s32_f32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tex.3d.level.v4s32.f32";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tex_3d_level_v4u32_f32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tex.3d.level.v4u32.f32";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tex_3d_v4f32_f32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tex.3d.v4f32.f32";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_float_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tex_3d_v4f32_s32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tex.3d.v4f32.s32";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_float_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tex_3d_v4s32_f32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tex.3d.v4s32.f32";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tex_3d_v4s32_s32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tex.3d.v4s32.s32";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tex_3d_v4u32_f32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tex.3d.v4u32.f32";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tex_3d_v4u32_s32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tex.3d.v4u32.s32";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tex_cube_array_level_v4f32_f32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tex.cube.array.level.v4f32.f32";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_float_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_i32_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tex_cube_array_level_v4s32_f32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tex.cube.array.level.v4s32.f32";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_i32_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tex_cube_array_level_v4u32_f32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tex.cube.array.level.v4u32.f32";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_i32_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tex_cube_array_v4f32_f32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tex.cube.array.v4f32.f32";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_float_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_i32_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tex_cube_array_v4s32_f32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tex.cube.array.v4s32.f32";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_i32_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tex_cube_array_v4u32_f32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tex.cube.array.v4u32.f32";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_i32_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tex_cube_level_v4f32_f32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tex.cube.level.v4f32.f32";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_float_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tex_cube_level_v4s32_f32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tex.cube.level.v4s32.f32";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tex_cube_level_v4u32_f32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tex.cube.level.v4u32.f32";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tex_cube_v4f32_f32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tex.cube.v4f32.f32";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_float_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tex_cube_v4s32_f32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tex.cube.v4s32.f32";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tex_cube_v4u32_f32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tex.cube.v4u32.f32";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tex_unified_1d_array_grad_v4f32_f32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tex.unified.1d.array.grad.v4f32.f32";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_float_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tex_unified_1d_array_grad_v4s32_f32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tex.unified.1d.array.grad.v4s32.f32";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tex_unified_1d_array_grad_v4u32_f32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tex.unified.1d.array.grad.v4u32.f32";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tex_unified_1d_array_level_v4f32_f32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tex.unified.1d.array.level.v4f32.f32";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_float_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tex_unified_1d_array_level_v4s32_f32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tex.unified.1d.array.level.v4s32.f32";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tex_unified_1d_array_level_v4u32_f32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tex.unified.1d.array.level.v4u32.f32";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tex_unified_1d_array_v4f32_f32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tex.unified.1d.array.v4f32.f32";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_float_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_float_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tex_unified_1d_array_v4f32_s32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tex.unified.1d.array.v4f32.s32";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_float_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tex_unified_1d_array_v4s32_f32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tex.unified.1d.array.v4s32.f32";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_float_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tex_unified_1d_array_v4s32_s32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tex.unified.1d.array.v4s32.s32";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tex_unified_1d_array_v4u32_f32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tex.unified.1d.array.v4u32.f32";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_float_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tex_unified_1d_array_v4u32_s32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tex.unified.1d.array.v4u32.s32";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tex_unified_1d_grad_v4f32_f32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tex.unified.1d.grad.v4f32.f32";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_float_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tex_unified_1d_grad_v4s32_f32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tex.unified.1d.grad.v4s32.f32";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tex_unified_1d_grad_v4u32_f32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tex.unified.1d.grad.v4u32.f32";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tex_unified_1d_level_v4f32_f32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tex.unified.1d.level.v4f32.f32";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_float_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tex_unified_1d_level_v4s32_f32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tex.unified.1d.level.v4s32.f32";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tex_unified_1d_level_v4u32_f32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tex.unified.1d.level.v4u32.f32";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tex_unified_1d_v4f32_f32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tex.unified.1d.v4f32.f32";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_float_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_float_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tex_unified_1d_v4f32_s32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tex.unified.1d.v4f32.s32";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_float_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tex_unified_1d_v4s32_f32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tex.unified.1d.v4s32.f32";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_float_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tex_unified_1d_v4s32_s32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tex.unified.1d.v4s32.s32";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tex_unified_1d_v4u32_f32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tex.unified.1d.v4u32.f32";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_float_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tex_unified_1d_v4u32_s32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tex.unified.1d.v4u32.s32";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tex_unified_2d_array_grad_v4f32_f32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tex.unified.2d.array.grad.v4f32.f32";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_float_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tex_unified_2d_array_grad_v4s32_f32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tex.unified.2d.array.grad.v4s32.f32";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tex_unified_2d_array_grad_v4u32_f32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tex.unified.2d.array.grad.v4u32.f32";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tex_unified_2d_array_level_v4f32_f32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tex.unified.2d.array.level.v4f32.f32";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_float_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tex_unified_2d_array_level_v4s32_f32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tex.unified.2d.array.level.v4s32.f32";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tex_unified_2d_array_level_v4u32_f32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tex.unified.2d.array.level.v4u32.f32";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tex_unified_2d_array_v4f32_f32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tex.unified.2d.array.v4f32.f32";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_float_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tex_unified_2d_array_v4f32_s32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tex.unified.2d.array.v4f32.s32";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_float_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tex_unified_2d_array_v4s32_f32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tex.unified.2d.array.v4s32.f32";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tex_unified_2d_array_v4s32_s32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tex.unified.2d.array.v4s32.s32";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tex_unified_2d_array_v4u32_f32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tex.unified.2d.array.v4u32.f32";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tex_unified_2d_array_v4u32_s32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tex.unified.2d.array.v4u32.s32";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tex_unified_2d_grad_v4f32_f32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tex.unified.2d.grad.v4f32.f32";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_float_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tex_unified_2d_grad_v4s32_f32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tex.unified.2d.grad.v4s32.f32";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tex_unified_2d_grad_v4u32_f32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tex.unified.2d.grad.v4u32.f32";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tex_unified_2d_level_v4f32_f32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tex.unified.2d.level.v4f32.f32";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_float_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tex_unified_2d_level_v4s32_f32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tex.unified.2d.level.v4s32.f32";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tex_unified_2d_level_v4u32_f32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tex.unified.2d.level.v4u32.f32";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tex_unified_2d_v4f32_f32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tex.unified.2d.v4f32.f32";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_float_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tex_unified_2d_v4f32_s32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tex.unified.2d.v4f32.s32";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_float_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tex_unified_2d_v4s32_f32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tex.unified.2d.v4s32.f32";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tex_unified_2d_v4s32_s32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tex.unified.2d.v4s32.s32";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tex_unified_2d_v4u32_f32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tex.unified.2d.v4u32.f32";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tex_unified_2d_v4u32_s32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tex.unified.2d.v4u32.s32";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tex_unified_3d_grad_v4f32_f32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tex.unified.3d.grad.v4f32.f32";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_float_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tex_unified_3d_grad_v4s32_f32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tex.unified.3d.grad.v4s32.f32";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tex_unified_3d_grad_v4u32_f32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tex.unified.3d.grad.v4u32.f32";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tex_unified_3d_level_v4f32_f32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tex.unified.3d.level.v4f32.f32";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_float_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tex_unified_3d_level_v4s32_f32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tex.unified.3d.level.v4s32.f32";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tex_unified_3d_level_v4u32_f32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tex.unified.3d.level.v4u32.f32";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tex_unified_3d_v4f32_f32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tex.unified.3d.v4f32.f32";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_float_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tex_unified_3d_v4f32_s32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tex.unified.3d.v4f32.s32";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_float_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tex_unified_3d_v4s32_f32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tex.unified.3d.v4s32.f32";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tex_unified_3d_v4s32_s32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tex.unified.3d.v4s32.s32";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tex_unified_3d_v4u32_f32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tex.unified.3d.v4u32.f32";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tex_unified_3d_v4u32_s32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tex.unified.3d.v4u32.s32";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tex_unified_cube_array_level_v4f32_f32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tex.unified.cube.array.level.v4f32.f32";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_float_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tex_unified_cube_array_level_v4s32_f32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tex.unified.cube.array.level.v4s32.f32";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tex_unified_cube_array_level_v4u32_f32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tex.unified.cube.array.level.v4u32.f32";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tex_unified_cube_array_v4f32_f32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tex.unified.cube.array.v4f32.f32";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_float_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tex_unified_cube_array_v4s32_f32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tex.unified.cube.array.v4s32.f32";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tex_unified_cube_array_v4u32_f32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tex.unified.cube.array.v4u32.f32";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i32_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tex_unified_cube_level_v4f32_f32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tex.unified.cube.level.v4f32.f32";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_float_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tex_unified_cube_level_v4s32_f32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tex.unified.cube.level.v4s32.f32";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tex_unified_cube_level_v4u32_f32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tex.unified.cube.level.v4u32.f32";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tex_unified_cube_v4f32_f32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tex.unified.cube.v4f32.f32";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_float_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tex_unified_cube_v4s32_f32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tex.unified.cube.v4s32.f32";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tex_unified_cube_v4u32_f32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tex.unified.cube.v4u32.f32";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_texsurf_handle {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.texsurf.handle";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_metadata_ty, llvm_anyi64ptr_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_texsurf_handle_internal {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.texsurf.handle.internal";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_anyptr_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tld4_a_2d_v4f32_f32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tld4.a.2d.v4f32.f32";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_float_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tld4_a_2d_v4s32_f32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tld4.a.2d.v4s32.f32";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tld4_a_2d_v4u32_f32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tld4.a.2d.v4u32.f32";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tld4_b_2d_v4f32_f32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tld4.b.2d.v4f32.f32";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_float_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tld4_b_2d_v4s32_f32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tld4.b.2d.v4s32.f32";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tld4_b_2d_v4u32_f32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tld4.b.2d.v4u32.f32";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tld4_g_2d_v4f32_f32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tld4.g.2d.v4f32.f32";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_float_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tld4_g_2d_v4s32_f32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tld4.g.2d.v4s32.f32";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tld4_g_2d_v4u32_f32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tld4.g.2d.v4u32.f32";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tld4_r_2d_v4f32_f32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tld4.r.2d.v4f32.f32";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_float_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tld4_r_2d_v4s32_f32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tld4.r.2d.v4s32.f32";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tld4_r_2d_v4u32_f32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tld4.r.2d.v4u32.f32";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty, llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tld4_unified_a_2d_v4f32_f32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tld4.unified.a.2d.v4f32.f32";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_float_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tld4_unified_a_2d_v4s32_f32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tld4.unified.a.2d.v4s32.f32";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tld4_unified_a_2d_v4u32_f32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tld4.unified.a.2d.v4u32.f32";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tld4_unified_b_2d_v4f32_f32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tld4.unified.b.2d.v4f32.f32";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_float_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tld4_unified_b_2d_v4s32_f32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tld4.unified.b.2d.v4s32.f32";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tld4_unified_b_2d_v4u32_f32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tld4.unified.b.2d.v4u32.f32";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tld4_unified_g_2d_v4f32_f32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tld4.unified.g.2d.v4f32.f32";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_float_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tld4_unified_g_2d_v4s32_f32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tld4.unified.g.2d.v4s32.f32";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tld4_unified_g_2d_v4u32_f32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tld4.unified.g.2d.v4u32.f32";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tld4_unified_r_2d_v4f32_f32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tld4.unified.r.2d.v4f32.f32";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_float_ty, llvm_float_ty, llvm_float_ty, llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tld4_unified_r_2d_v4s32_f32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tld4.unified.r.2d.v4s32.f32";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_tld4_unified_r_2d_v4u32_f32 {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.nvvm.tld4.unified.r.2d.v4u32.f32";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_float_ty, llvm_float_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_trunc_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_trunc_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_double_ty];
  list<LLVMType> ParamTypes = [llvm_double_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_trunc_f {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_trunc_f";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_float_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_trunc_ftz_f {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_trunc_ftz_f";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_float_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_txq_array_size {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.txq.array.size";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_txq_array_size";
  string NAME = ?;
}
def int_nvvm_txq_channel_data_type {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.txq.channel.data.type";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_txq_channel_data_type";
  string NAME = ?;
}
def int_nvvm_txq_channel_order {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.txq.channel.order";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_txq_channel_order";
  string NAME = ?;
}
def int_nvvm_txq_depth {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.txq.depth";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_txq_depth";
  string NAME = ?;
}
def int_nvvm_txq_height {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.txq.height";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_txq_height";
  string NAME = ?;
}
def int_nvvm_txq_num_mipmap_levels {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.txq.num.mipmap.levels";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_txq_num_mipmap_levels";
  string NAME = ?;
}
def int_nvvm_txq_num_samples {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.txq.num.samples";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_txq_num_samples";
  string NAME = ?;
}
def int_nvvm_txq_width {	// SDPatternOperator Intrinsic GCCBuiltin
  string LLVMName = "llvm.nvvm.txq.width";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string GCCBuiltinName = "__nvvm_txq_width";
  string NAME = ?;
}
def int_nvvm_ui2d_rm {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_ui2d_rm";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_double_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_ui2d_rn {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_ui2d_rn";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_double_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_ui2d_rp {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_ui2d_rp";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_double_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_ui2d_rz {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_ui2d_rz";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_double_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_ui2f_rm {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_ui2f_rm";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_ui2f_rn {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_ui2f_rn";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_ui2f_rp {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_ui2f_rp";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_ui2f_rz {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_ui2f_rz";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_ull2d_rm {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_ull2d_rm";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_double_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_ull2d_rn {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_ull2d_rn";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_double_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_ull2d_rp {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_ull2d_rp";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_double_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_ull2d_rz {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_ull2d_rz";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_double_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_ull2f_rm {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_ull2f_rm";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_ull2f_rn {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_ull2f_rn";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_ull2f_rp {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_ull2f_rp";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_nvvm_ull2f_rz {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__nvvm_ull2f_rz";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_float_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_objectsize {	// SDPatternOperator Intrinsic GCCBuiltin
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_anyint_ty];
  list<LLVMType> ParamTypes = [llvm_anyptr_ty, llvm_i1_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string GCCBuiltinName = "__builtin_object_size";
  string NAME = ?;
}
def int_pcmarker {	// SDPatternOperator Intrinsic
  list<IntrinsicProperty> Intrinsic:properties = [];
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_pow {	// SDPatternOperator Intrinsic
  list<IntrinsicProperty> Intrinsic:properties = [];
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_anyfloat_ty];
  list<LLVMType> ParamTypes = [anonymous_20, anonymous_21];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_powi {	// SDPatternOperator Intrinsic
  list<IntrinsicProperty> Intrinsic:properties = [];
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_anyfloat_ty];
  list<LLVMType> ParamTypes = [anonymous_17, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_crypto_vcipher {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_Vec_Intrinsic PowerPC_Vec_DDD_Intrinsic
  string GCCBuiltinName = "__builtin_altivec_crypto_vcipher";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_v2i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_crypto_vcipherlast {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_Vec_Intrinsic PowerPC_Vec_DDD_Intrinsic
  string GCCBuiltinName = "__builtin_altivec_crypto_vcipherlast";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_v2i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_crypto_vncipher {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_Vec_Intrinsic PowerPC_Vec_DDD_Intrinsic
  string GCCBuiltinName = "__builtin_altivec_crypto_vncipher";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_v2i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_crypto_vncipherlast {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_Vec_Intrinsic PowerPC_Vec_DDD_Intrinsic
  string GCCBuiltinName = "__builtin_altivec_crypto_vncipherlast";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_v2i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_crypto_vpermxor {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_altivec_crypto_vpermxor";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_crypto_vpmsumb {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_Vec_Intrinsic PowerPC_Vec_BBB_Intrinsic
  string GCCBuiltinName = "__builtin_altivec_crypto_vpmsumb";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_crypto_vpmsumd {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_Vec_Intrinsic PowerPC_Vec_DDD_Intrinsic
  string GCCBuiltinName = "__builtin_altivec_crypto_vpmsumd";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_v2i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_crypto_vpmsumh {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_Vec_Intrinsic PowerPC_Vec_HHH_Intrinsic
  string GCCBuiltinName = "__builtin_altivec_crypto_vpmsumh";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_crypto_vpmsumw {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_Vec_Intrinsic PowerPC_Vec_WWW_Intrinsic
  string GCCBuiltinName = "__builtin_altivec_crypto_vpmsumw";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_crypto_vsbox {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_altivec_crypto_vsbox";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_crypto_vshasigmad {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_altivec_crypto_vshasigmad";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_crypto_vshasigmaw {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_altivec_crypto_vshasigmaw";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_dss {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_altivec_dss";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_dssall {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_altivec_dssall";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_dst {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_altivec_dst";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_dstst {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_altivec_dstst";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_dststt {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_altivec_dststt";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_dstt {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_altivec_dstt";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_lvebx {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_ptr_ty];
  list<IntrinsicProperty> Properties = [IntrReadArgMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_lvehx {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_ptr_ty];
  list<IntrinsicProperty> Properties = [IntrReadArgMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_lvewx {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_ptr_ty];
  list<IntrinsicProperty> Properties = [IntrReadArgMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_lvsl {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_ptr_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_lvsr {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_ptr_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_lvx {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_ptr_ty];
  list<IntrinsicProperty> Properties = [IntrReadArgMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_lvxl {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_ptr_ty];
  list<IntrinsicProperty> Properties = [IntrReadArgMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_mfvscr {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_altivec_mfvscr";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> Properties = [IntrReadMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_mtvscr {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_altivec_mtvscr";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_stvebx {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_ptr_ty];
  list<IntrinsicProperty> Properties = [IntrReadWriteArgMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_stvehx {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_ptr_ty];
  list<IntrinsicProperty> Properties = [IntrReadWriteArgMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_stvewx {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_ptr_ty];
  list<IntrinsicProperty> Properties = [IntrReadWriteArgMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_stvx {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_ptr_ty];
  list<IntrinsicProperty> Properties = [IntrReadWriteArgMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_stvxl {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_ptr_ty];
  list<IntrinsicProperty> Properties = [IntrReadWriteArgMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_vaddcuq {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_Vec_Intrinsic PowerPC_Vec_QQQ_Intrinsic
  string GCCBuiltinName = "__builtin_altivec_vaddcuq";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v1i128_ty];
  list<LLVMType> ParamTypes = [llvm_v1i128_ty, llvm_v1i128_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_vaddcuw {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_Vec_Intrinsic PowerPC_Vec_WWW_Intrinsic
  string GCCBuiltinName = "__builtin_altivec_vaddcuw";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_vaddecuq {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_altivec_vaddecuq";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v1i128_ty];
  list<LLVMType> ParamTypes = [llvm_v1i128_ty, llvm_v1i128_ty, llvm_v1i128_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_vaddeuqm {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_altivec_vaddeuqm";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v1i128_ty];
  list<LLVMType> ParamTypes = [llvm_v1i128_ty, llvm_v1i128_ty, llvm_v1i128_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_vaddsbs {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_Vec_Intrinsic PowerPC_Vec_BBB_Intrinsic
  string GCCBuiltinName = "__builtin_altivec_vaddsbs";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_vaddshs {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_Vec_Intrinsic PowerPC_Vec_HHH_Intrinsic
  string GCCBuiltinName = "__builtin_altivec_vaddshs";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_vaddsws {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_Vec_Intrinsic PowerPC_Vec_WWW_Intrinsic
  string GCCBuiltinName = "__builtin_altivec_vaddsws";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_vaddubs {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_Vec_Intrinsic PowerPC_Vec_BBB_Intrinsic
  string GCCBuiltinName = "__builtin_altivec_vaddubs";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_vadduhs {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_Vec_Intrinsic PowerPC_Vec_HHH_Intrinsic
  string GCCBuiltinName = "__builtin_altivec_vadduhs";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_vadduws {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_Vec_Intrinsic PowerPC_Vec_WWW_Intrinsic
  string GCCBuiltinName = "__builtin_altivec_vadduws";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_vavgsb {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_Vec_Intrinsic PowerPC_Vec_BBB_Intrinsic
  string GCCBuiltinName = "__builtin_altivec_vavgsb";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_vavgsh {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_Vec_Intrinsic PowerPC_Vec_HHH_Intrinsic
  string GCCBuiltinName = "__builtin_altivec_vavgsh";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_vavgsw {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_Vec_Intrinsic PowerPC_Vec_WWW_Intrinsic
  string GCCBuiltinName = "__builtin_altivec_vavgsw";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_vavgub {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_Vec_Intrinsic PowerPC_Vec_BBB_Intrinsic
  string GCCBuiltinName = "__builtin_altivec_vavgub";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_vavguh {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_Vec_Intrinsic PowerPC_Vec_HHH_Intrinsic
  string GCCBuiltinName = "__builtin_altivec_vavguh";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_vavguw {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_Vec_Intrinsic PowerPC_Vec_WWW_Intrinsic
  string GCCBuiltinName = "__builtin_altivec_vavguw";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_vbpermq {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_altivec_vbpermq";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_vcfsx {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_altivec_vcfsx";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_vcfux {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_altivec_vcfux";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_vcmpbfp {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_altivec_vcmpbfp";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_v4f32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_vcmpbfp_p {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_altivec_vcmpbfp_p";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_v4f32_ty, llvm_v4f32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_vcmpeqfp {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_altivec_vcmpeqfp";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_v4f32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_vcmpeqfp_p {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_altivec_vcmpeqfp_p";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_v4f32_ty, llvm_v4f32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_vcmpequb {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_altivec_vcmpequb";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_vcmpequb_p {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_altivec_vcmpequb_p";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_vcmpequd {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_altivec_vcmpequd";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_v2i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_vcmpequd_p {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_altivec_vcmpequd_p";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_v2i64_ty, llvm_v2i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_vcmpequh {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_altivec_vcmpequh";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_vcmpequh_p {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_altivec_vcmpequh_p";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_v8i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_vcmpequw {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_altivec_vcmpequw";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_vcmpequw_p {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_altivec_vcmpequw_p";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_vcmpgefp {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_altivec_vcmpgefp";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_v4f32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_vcmpgefp_p {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_altivec_vcmpgefp_p";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_v4f32_ty, llvm_v4f32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_vcmpgtfp {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_altivec_vcmpgtfp";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_v4f32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_vcmpgtfp_p {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_altivec_vcmpgtfp_p";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_v4f32_ty, llvm_v4f32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_vcmpgtsb {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_altivec_vcmpgtsb";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_vcmpgtsb_p {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_altivec_vcmpgtsb_p";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_vcmpgtsd {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_altivec_vcmpgtsd";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_v2i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_vcmpgtsd_p {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_altivec_vcmpgtsd_p";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_v2i64_ty, llvm_v2i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_vcmpgtsh {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_altivec_vcmpgtsh";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_vcmpgtsh_p {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_altivec_vcmpgtsh_p";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_v8i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_vcmpgtsw {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_altivec_vcmpgtsw";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_vcmpgtsw_p {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_altivec_vcmpgtsw_p";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_vcmpgtub {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_altivec_vcmpgtub";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_vcmpgtub_p {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_altivec_vcmpgtub_p";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_vcmpgtud {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_altivec_vcmpgtud";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_v2i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_vcmpgtud_p {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_altivec_vcmpgtud_p";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_v2i64_ty, llvm_v2i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_vcmpgtuh {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_altivec_vcmpgtuh";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_vcmpgtuh_p {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_altivec_vcmpgtuh_p";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_v8i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_vcmpgtuw {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_altivec_vcmpgtuw";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_vcmpgtuw_p {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_altivec_vcmpgtuw_p";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_vctsxs {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_altivec_vctsxs";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_vctuxs {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_altivec_vctuxs";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_vexptefp {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_Vec_Intrinsic PowerPC_Vec_FF_Intrinsic
  string GCCBuiltinName = "__builtin_altivec_vexptefp";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_vgbbd {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_altivec_vgbbd";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_vlogefp {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_Vec_Intrinsic PowerPC_Vec_FF_Intrinsic
  string GCCBuiltinName = "__builtin_altivec_vlogefp";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_vmaddfp {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_altivec_vmaddfp";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_v4f32_ty, llvm_v4f32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_vmaxfp {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_Vec_Intrinsic PowerPC_Vec_FFF_Intrinsic
  string GCCBuiltinName = "__builtin_altivec_vmaxfp";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_v4f32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_vmaxsb {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_Vec_Intrinsic PowerPC_Vec_BBB_Intrinsic
  string GCCBuiltinName = "__builtin_altivec_vmaxsb";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_vmaxsd {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_Vec_Intrinsic PowerPC_Vec_DDD_Intrinsic
  string GCCBuiltinName = "__builtin_altivec_vmaxsd";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_v2i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_vmaxsh {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_Vec_Intrinsic PowerPC_Vec_HHH_Intrinsic
  string GCCBuiltinName = "__builtin_altivec_vmaxsh";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_vmaxsw {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_Vec_Intrinsic PowerPC_Vec_WWW_Intrinsic
  string GCCBuiltinName = "__builtin_altivec_vmaxsw";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_vmaxub {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_Vec_Intrinsic PowerPC_Vec_BBB_Intrinsic
  string GCCBuiltinName = "__builtin_altivec_vmaxub";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_vmaxud {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_Vec_Intrinsic PowerPC_Vec_DDD_Intrinsic
  string GCCBuiltinName = "__builtin_altivec_vmaxud";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_v2i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_vmaxuh {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_Vec_Intrinsic PowerPC_Vec_HHH_Intrinsic
  string GCCBuiltinName = "__builtin_altivec_vmaxuh";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_vmaxuw {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_Vec_Intrinsic PowerPC_Vec_WWW_Intrinsic
  string GCCBuiltinName = "__builtin_altivec_vmaxuw";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_vmhaddshs {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_altivec_vmhaddshs";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_vmhraddshs {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_altivec_vmhraddshs";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_vminfp {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_Vec_Intrinsic PowerPC_Vec_FFF_Intrinsic
  string GCCBuiltinName = "__builtin_altivec_vminfp";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_v4f32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_vminsb {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_Vec_Intrinsic PowerPC_Vec_BBB_Intrinsic
  string GCCBuiltinName = "__builtin_altivec_vminsb";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_vminsd {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_Vec_Intrinsic PowerPC_Vec_DDD_Intrinsic
  string GCCBuiltinName = "__builtin_altivec_vminsd";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_v2i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_vminsh {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_Vec_Intrinsic PowerPC_Vec_HHH_Intrinsic
  string GCCBuiltinName = "__builtin_altivec_vminsh";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_vminsw {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_Vec_Intrinsic PowerPC_Vec_WWW_Intrinsic
  string GCCBuiltinName = "__builtin_altivec_vminsw";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_vminub {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_Vec_Intrinsic PowerPC_Vec_BBB_Intrinsic
  string GCCBuiltinName = "__builtin_altivec_vminub";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_vminud {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_Vec_Intrinsic PowerPC_Vec_DDD_Intrinsic
  string GCCBuiltinName = "__builtin_altivec_vminud";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_v2i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_vminuh {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_Vec_Intrinsic PowerPC_Vec_HHH_Intrinsic
  string GCCBuiltinName = "__builtin_altivec_vminuh";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_vminuw {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_Vec_Intrinsic PowerPC_Vec_WWW_Intrinsic
  string GCCBuiltinName = "__builtin_altivec_vminuw";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_vmladduhm {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_altivec_vmladduhm";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_vmsummbm {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_altivec_vmsummbm";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_vmsumshm {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_altivec_vmsumshm";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_vmsumshs {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_altivec_vmsumshs";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_vmsumubm {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_altivec_vmsumubm";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_vmsumuhm {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_altivec_vmsumuhm";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_vmsumuhs {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_altivec_vmsumuhs";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_vmulesb {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_altivec_vmulesb";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_vmulesh {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_altivec_vmulesh";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_vmulesw {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_altivec_vmulesw";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_vmuleub {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_altivec_vmuleub";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_vmuleuh {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_altivec_vmuleuh";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_vmuleuw {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_altivec_vmuleuw";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_vmulosb {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_altivec_vmulosb";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_vmulosh {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_altivec_vmulosh";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_vmulosw {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_altivec_vmulosw";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_vmuloub {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_altivec_vmuloub";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_vmulouh {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_altivec_vmulouh";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_vmulouw {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_altivec_vmulouw";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_vnmsubfp {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_altivec_vnmsubfp";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_v4f32_ty, llvm_v4f32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_vperm {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_altivec_vperm_4si";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_vpkpx {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_altivec_vpkpx";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_vpksdss {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_altivec_vpksdss";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_v2i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_vpksdus {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_altivec_vpksdus";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_v2i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_vpkshss {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_altivec_vpkshss";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_vpkshus {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_altivec_vpkshus";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_vpkswss {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_altivec_vpkswss";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_vpkswus {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_altivec_vpkswus";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_vpkudus {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_altivec_vpkudus";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_v2i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_vpkuhus {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_altivec_vpkuhus";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_vpkuwus {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_altivec_vpkuwus";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_vrefp {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_Vec_Intrinsic PowerPC_Vec_FF_Intrinsic
  string GCCBuiltinName = "__builtin_altivec_vrefp";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_vrfim {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_altivec_vrfim";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_vrfin {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_altivec_vrfin";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_vrfip {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_altivec_vrfip";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_vrfiz {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_altivec_vrfiz";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_vrlb {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_Vec_Intrinsic PowerPC_Vec_BBB_Intrinsic
  string GCCBuiltinName = "__builtin_altivec_vrlb";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_vrld {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_Vec_Intrinsic PowerPC_Vec_DDD_Intrinsic
  string GCCBuiltinName = "__builtin_altivec_vrld";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_v2i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_vrlh {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_Vec_Intrinsic PowerPC_Vec_HHH_Intrinsic
  string GCCBuiltinName = "__builtin_altivec_vrlh";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_vrlw {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_Vec_Intrinsic PowerPC_Vec_WWW_Intrinsic
  string GCCBuiltinName = "__builtin_altivec_vrlw";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_vrsqrtefp {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_Vec_Intrinsic PowerPC_Vec_FF_Intrinsic
  string GCCBuiltinName = "__builtin_altivec_vrsqrtefp";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_vsel {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_altivec_vsel_4si";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_vsl {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_Vec_Intrinsic PowerPC_Vec_WWW_Intrinsic
  string GCCBuiltinName = "__builtin_altivec_vsl";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_vslb {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_Vec_Intrinsic PowerPC_Vec_BBB_Intrinsic
  string GCCBuiltinName = "__builtin_altivec_vslb";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_vslh {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_Vec_Intrinsic PowerPC_Vec_HHH_Intrinsic
  string GCCBuiltinName = "__builtin_altivec_vslh";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_vslo {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_Vec_Intrinsic PowerPC_Vec_WWW_Intrinsic
  string GCCBuiltinName = "__builtin_altivec_vslo";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_vslw {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_Vec_Intrinsic PowerPC_Vec_WWW_Intrinsic
  string GCCBuiltinName = "__builtin_altivec_vslw";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_vsr {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_Vec_Intrinsic PowerPC_Vec_WWW_Intrinsic
  string GCCBuiltinName = "__builtin_altivec_vsr";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_vsrab {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_Vec_Intrinsic PowerPC_Vec_BBB_Intrinsic
  string GCCBuiltinName = "__builtin_altivec_vsrab";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_vsrah {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_Vec_Intrinsic PowerPC_Vec_HHH_Intrinsic
  string GCCBuiltinName = "__builtin_altivec_vsrah";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_vsraw {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_Vec_Intrinsic PowerPC_Vec_WWW_Intrinsic
  string GCCBuiltinName = "__builtin_altivec_vsraw";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_vsrb {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_Vec_Intrinsic PowerPC_Vec_BBB_Intrinsic
  string GCCBuiltinName = "__builtin_altivec_vsrb";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_vsrh {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_Vec_Intrinsic PowerPC_Vec_HHH_Intrinsic
  string GCCBuiltinName = "__builtin_altivec_vsrh";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_vsro {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_Vec_Intrinsic PowerPC_Vec_WWW_Intrinsic
  string GCCBuiltinName = "__builtin_altivec_vsro";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_vsrw {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_Vec_Intrinsic PowerPC_Vec_WWW_Intrinsic
  string GCCBuiltinName = "__builtin_altivec_vsrw";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_vsubcuq {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_Vec_Intrinsic PowerPC_Vec_QQQ_Intrinsic
  string GCCBuiltinName = "__builtin_altivec_vsubcuq";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v1i128_ty];
  list<LLVMType> ParamTypes = [llvm_v1i128_ty, llvm_v1i128_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_vsubcuw {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_Vec_Intrinsic PowerPC_Vec_WWW_Intrinsic
  string GCCBuiltinName = "__builtin_altivec_vsubcuw";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_vsubecuq {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_altivec_vsubecuq";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v1i128_ty];
  list<LLVMType> ParamTypes = [llvm_v1i128_ty, llvm_v1i128_ty, llvm_v1i128_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_vsubeuqm {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_altivec_vsubeuqm";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v1i128_ty];
  list<LLVMType> ParamTypes = [llvm_v1i128_ty, llvm_v1i128_ty, llvm_v1i128_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_vsubsbs {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_Vec_Intrinsic PowerPC_Vec_BBB_Intrinsic
  string GCCBuiltinName = "__builtin_altivec_vsubsbs";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_vsubshs {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_Vec_Intrinsic PowerPC_Vec_HHH_Intrinsic
  string GCCBuiltinName = "__builtin_altivec_vsubshs";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_vsubsws {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_Vec_Intrinsic PowerPC_Vec_WWW_Intrinsic
  string GCCBuiltinName = "__builtin_altivec_vsubsws";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_vsububs {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_Vec_Intrinsic PowerPC_Vec_BBB_Intrinsic
  string GCCBuiltinName = "__builtin_altivec_vsububs";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_vsubuhs {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_Vec_Intrinsic PowerPC_Vec_HHH_Intrinsic
  string GCCBuiltinName = "__builtin_altivec_vsubuhs";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_vsubuws {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_Vec_Intrinsic PowerPC_Vec_WWW_Intrinsic
  string GCCBuiltinName = "__builtin_altivec_vsubuws";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_vsum2sws {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_altivec_vsum2sws";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_vsum4sbs {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_altivec_vsum4sbs";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_vsum4shs {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_altivec_vsum4shs";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_vsum4ubs {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_altivec_vsum4ubs";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_vsumsws {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_altivec_vsumsws";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_vupkhpx {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_altivec_vupkhpx";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_vupkhsb {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_altivec_vupkhsb";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_vupkhsh {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_altivec_vupkhsh";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_vupkhsw {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_altivec_vupkhsw";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_vupklpx {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_altivec_vupklpx";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_vupklsb {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_altivec_vupklsb";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_vupklsh {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_altivec_vupklsh";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_altivec_vupklsw {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_altivec_vupklsw";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_bpermd {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_bpermd";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_dcba {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_ptr_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_dcbf {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_ptr_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_dcbi {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_ptr_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_dcbst {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_ptr_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_dcbt {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_ptr_ty];
  list<IntrinsicProperty> Properties = [IntrReadWriteArgMem, anonymous_79];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_dcbtst {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_ptr_ty];
  list<IntrinsicProperty> Properties = [IntrReadWriteArgMem, anonymous_80];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_dcbz {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_ptr_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_dcbzl {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_ptr_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_divde {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_divde";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_divdeu {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_divdeu";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_divwe {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_divwe";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_divweu {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_divweu";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_get_texasr {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_get_texasr";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_get_texasru {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_get_texasru";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_get_tfhar {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_get_tfhar";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_get_tfiar {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_get_tfiar";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_is_decremented_ctr_nonzero {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_i1_ty];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_lwsync {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_mtctr {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_anyint_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_qpx_qvfabs {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_QPX_Intrinsic PowerPC_QPX_FF_Intrinsic
  string GCCBuiltinName = "__builtin_qpx_qvfabs";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4f64_ty];
  list<LLVMType> ParamTypes = [llvm_v4f64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_qpx_qvfadd {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_QPX_Intrinsic PowerPC_QPX_FFF_Intrinsic
  string GCCBuiltinName = "__builtin_qpx_qvfadd";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4f64_ty];
  list<LLVMType> ParamTypes = [llvm_v4f64_ty, llvm_v4f64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_qpx_qvfadds {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_QPX_Intrinsic PowerPC_QPX_FFF_Intrinsic
  string GCCBuiltinName = "__builtin_qpx_qvfadds";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4f64_ty];
  list<LLVMType> ParamTypes = [llvm_v4f64_ty, llvm_v4f64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_qpx_qvfcfid {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_QPX_Intrinsic PowerPC_QPX_FF_Intrinsic
  string GCCBuiltinName = "__builtin_qpx_qvfcfid";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4f64_ty];
  list<LLVMType> ParamTypes = [llvm_v4f64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_qpx_qvfcfids {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_QPX_Intrinsic PowerPC_QPX_FF_Intrinsic
  string GCCBuiltinName = "__builtin_qpx_qvfcfids";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4f64_ty];
  list<LLVMType> ParamTypes = [llvm_v4f64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_qpx_qvfcfidu {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_QPX_Intrinsic PowerPC_QPX_FF_Intrinsic
  string GCCBuiltinName = "__builtin_qpx_qvfcfidu";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4f64_ty];
  list<LLVMType> ParamTypes = [llvm_v4f64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_qpx_qvfcfidus {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_QPX_Intrinsic PowerPC_QPX_FF_Intrinsic
  string GCCBuiltinName = "__builtin_qpx_qvfcfidus";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4f64_ty];
  list<LLVMType> ParamTypes = [llvm_v4f64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_qpx_qvfcmpeq {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_QPX_Intrinsic PowerPC_QPX_FFF_Intrinsic
  string GCCBuiltinName = "__builtin_qpx_qvfcmpeq";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4f64_ty];
  list<LLVMType> ParamTypes = [llvm_v4f64_ty, llvm_v4f64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_qpx_qvfcmpgt {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_QPX_Intrinsic PowerPC_QPX_FFF_Intrinsic
  string GCCBuiltinName = "__builtin_qpx_qvfcmpgt";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4f64_ty];
  list<LLVMType> ParamTypes = [llvm_v4f64_ty, llvm_v4f64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_qpx_qvfcmplt {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_QPX_Intrinsic PowerPC_QPX_FFF_Intrinsic
  string GCCBuiltinName = "__builtin_qpx_qvfcmplt";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4f64_ty];
  list<LLVMType> ParamTypes = [llvm_v4f64_ty, llvm_v4f64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_qpx_qvfcpsgn {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_QPX_Intrinsic PowerPC_QPX_FFF_Intrinsic
  string GCCBuiltinName = "__builtin_qpx_qvfcpsgn";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4f64_ty];
  list<LLVMType> ParamTypes = [llvm_v4f64_ty, llvm_v4f64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_qpx_qvfctid {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_QPX_Intrinsic PowerPC_QPX_FF_Intrinsic
  string GCCBuiltinName = "__builtin_qpx_qvfctid";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4f64_ty];
  list<LLVMType> ParamTypes = [llvm_v4f64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_qpx_qvfctidu {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_QPX_Intrinsic PowerPC_QPX_FF_Intrinsic
  string GCCBuiltinName = "__builtin_qpx_qvfctidu";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4f64_ty];
  list<LLVMType> ParamTypes = [llvm_v4f64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_qpx_qvfctiduz {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_QPX_Intrinsic PowerPC_QPX_FF_Intrinsic
  string GCCBuiltinName = "__builtin_qpx_qvfctiduz";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4f64_ty];
  list<LLVMType> ParamTypes = [llvm_v4f64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_qpx_qvfctidz {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_QPX_Intrinsic PowerPC_QPX_FF_Intrinsic
  string GCCBuiltinName = "__builtin_qpx_qvfctidz";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4f64_ty];
  list<LLVMType> ParamTypes = [llvm_v4f64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_qpx_qvfctiw {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_QPX_Intrinsic PowerPC_QPX_FF_Intrinsic
  string GCCBuiltinName = "__builtin_qpx_qvfctiw";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4f64_ty];
  list<LLVMType> ParamTypes = [llvm_v4f64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_qpx_qvfctiwu {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_QPX_Intrinsic PowerPC_QPX_FF_Intrinsic
  string GCCBuiltinName = "__builtin_qpx_qvfctiwu";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4f64_ty];
  list<LLVMType> ParamTypes = [llvm_v4f64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_qpx_qvfctiwuz {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_QPX_Intrinsic PowerPC_QPX_FF_Intrinsic
  string GCCBuiltinName = "__builtin_qpx_qvfctiwuz";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4f64_ty];
  list<LLVMType> ParamTypes = [llvm_v4f64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_qpx_qvfctiwz {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_QPX_Intrinsic PowerPC_QPX_FF_Intrinsic
  string GCCBuiltinName = "__builtin_qpx_qvfctiwz";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4f64_ty];
  list<LLVMType> ParamTypes = [llvm_v4f64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_qpx_qvflogical {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_QPX_Intrinsic
  string GCCBuiltinName = "__builtin_qpx_qvflogical";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4f64_ty];
  list<LLVMType> ParamTypes = [llvm_v4f64_ty, llvm_v4f64_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_qpx_qvfmadd {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_QPX_Intrinsic PowerPC_QPX_FFFF_Intrinsic
  string GCCBuiltinName = "__builtin_qpx_qvfmadd";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4f64_ty];
  list<LLVMType> ParamTypes = [llvm_v4f64_ty, llvm_v4f64_ty, llvm_v4f64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_qpx_qvfmadds {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_QPX_Intrinsic PowerPC_QPX_FFFF_Intrinsic
  string GCCBuiltinName = "__builtin_qpx_qvfmadds";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4f64_ty];
  list<LLVMType> ParamTypes = [llvm_v4f64_ty, llvm_v4f64_ty, llvm_v4f64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_qpx_qvfmsub {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_QPX_Intrinsic PowerPC_QPX_FFFF_Intrinsic
  string GCCBuiltinName = "__builtin_qpx_qvfmsub";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4f64_ty];
  list<LLVMType> ParamTypes = [llvm_v4f64_ty, llvm_v4f64_ty, llvm_v4f64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_qpx_qvfmsubs {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_QPX_Intrinsic PowerPC_QPX_FFFF_Intrinsic
  string GCCBuiltinName = "__builtin_qpx_qvfmsubs";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4f64_ty];
  list<LLVMType> ParamTypes = [llvm_v4f64_ty, llvm_v4f64_ty, llvm_v4f64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_qpx_qvfmul {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_QPX_Intrinsic PowerPC_QPX_FFF_Intrinsic
  string GCCBuiltinName = "__builtin_qpx_qvfmul";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4f64_ty];
  list<LLVMType> ParamTypes = [llvm_v4f64_ty, llvm_v4f64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_qpx_qvfmuls {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_QPX_Intrinsic PowerPC_QPX_FFF_Intrinsic
  string GCCBuiltinName = "__builtin_qpx_qvfmuls";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4f64_ty];
  list<LLVMType> ParamTypes = [llvm_v4f64_ty, llvm_v4f64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_qpx_qvfnabs {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_QPX_Intrinsic PowerPC_QPX_FF_Intrinsic
  string GCCBuiltinName = "__builtin_qpx_qvfnabs";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4f64_ty];
  list<LLVMType> ParamTypes = [llvm_v4f64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_qpx_qvfneg {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_QPX_Intrinsic PowerPC_QPX_FF_Intrinsic
  string GCCBuiltinName = "__builtin_qpx_qvfneg";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4f64_ty];
  list<LLVMType> ParamTypes = [llvm_v4f64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_qpx_qvfnmadd {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_QPX_Intrinsic PowerPC_QPX_FFFF_Intrinsic
  string GCCBuiltinName = "__builtin_qpx_qvfnmadd";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4f64_ty];
  list<LLVMType> ParamTypes = [llvm_v4f64_ty, llvm_v4f64_ty, llvm_v4f64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_qpx_qvfnmadds {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_QPX_Intrinsic PowerPC_QPX_FFFF_Intrinsic
  string GCCBuiltinName = "__builtin_qpx_qvfnmadds";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4f64_ty];
  list<LLVMType> ParamTypes = [llvm_v4f64_ty, llvm_v4f64_ty, llvm_v4f64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_qpx_qvfnmsub {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_QPX_Intrinsic PowerPC_QPX_FFFF_Intrinsic
  string GCCBuiltinName = "__builtin_qpx_qvfnmsub";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4f64_ty];
  list<LLVMType> ParamTypes = [llvm_v4f64_ty, llvm_v4f64_ty, llvm_v4f64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_qpx_qvfnmsubs {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_QPX_Intrinsic PowerPC_QPX_FFFF_Intrinsic
  string GCCBuiltinName = "__builtin_qpx_qvfnmsubs";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4f64_ty];
  list<LLVMType> ParamTypes = [llvm_v4f64_ty, llvm_v4f64_ty, llvm_v4f64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_qpx_qvfperm {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_QPX_Intrinsic PowerPC_QPX_FFFF_Intrinsic
  string GCCBuiltinName = "__builtin_qpx_qvfperm";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4f64_ty];
  list<LLVMType> ParamTypes = [llvm_v4f64_ty, llvm_v4f64_ty, llvm_v4f64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_qpx_qvfre {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_QPX_Intrinsic PowerPC_QPX_FF_Intrinsic
  string GCCBuiltinName = "__builtin_qpx_qvfre";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4f64_ty];
  list<LLVMType> ParamTypes = [llvm_v4f64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_qpx_qvfres {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_QPX_Intrinsic PowerPC_QPX_FF_Intrinsic
  string GCCBuiltinName = "__builtin_qpx_qvfres";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4f64_ty];
  list<LLVMType> ParamTypes = [llvm_v4f64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_qpx_qvfrim {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_QPX_Intrinsic PowerPC_QPX_FF_Intrinsic
  string GCCBuiltinName = "__builtin_qpx_qvfrim";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4f64_ty];
  list<LLVMType> ParamTypes = [llvm_v4f64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_qpx_qvfrin {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_QPX_Intrinsic PowerPC_QPX_FF_Intrinsic
  string GCCBuiltinName = "__builtin_qpx_qvfrin";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4f64_ty];
  list<LLVMType> ParamTypes = [llvm_v4f64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_qpx_qvfrip {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_QPX_Intrinsic PowerPC_QPX_FF_Intrinsic
  string GCCBuiltinName = "__builtin_qpx_qvfrip";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4f64_ty];
  list<LLVMType> ParamTypes = [llvm_v4f64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_qpx_qvfriz {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_QPX_Intrinsic PowerPC_QPX_FF_Intrinsic
  string GCCBuiltinName = "__builtin_qpx_qvfriz";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4f64_ty];
  list<LLVMType> ParamTypes = [llvm_v4f64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_qpx_qvfrsp {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_QPX_Intrinsic PowerPC_QPX_FF_Intrinsic
  string GCCBuiltinName = "__builtin_qpx_qvfrsp";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4f64_ty];
  list<LLVMType> ParamTypes = [llvm_v4f64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_qpx_qvfrsqrte {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_QPX_Intrinsic PowerPC_QPX_FF_Intrinsic
  string GCCBuiltinName = "__builtin_qpx_qvfrsqrte";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4f64_ty];
  list<LLVMType> ParamTypes = [llvm_v4f64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_qpx_qvfrsqrtes {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_QPX_Intrinsic PowerPC_QPX_FF_Intrinsic
  string GCCBuiltinName = "__builtin_qpx_qvfrsqrtes";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4f64_ty];
  list<LLVMType> ParamTypes = [llvm_v4f64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_qpx_qvfsel {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_QPX_Intrinsic PowerPC_QPX_FFFF_Intrinsic
  string GCCBuiltinName = "__builtin_qpx_qvfsel";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4f64_ty];
  list<LLVMType> ParamTypes = [llvm_v4f64_ty, llvm_v4f64_ty, llvm_v4f64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_qpx_qvfsub {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_QPX_Intrinsic PowerPC_QPX_FFF_Intrinsic
  string GCCBuiltinName = "__builtin_qpx_qvfsub";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4f64_ty];
  list<LLVMType> ParamTypes = [llvm_v4f64_ty, llvm_v4f64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_qpx_qvfsubs {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_QPX_Intrinsic PowerPC_QPX_FFF_Intrinsic
  string GCCBuiltinName = "__builtin_qpx_qvfsubs";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4f64_ty];
  list<LLVMType> ParamTypes = [llvm_v4f64_ty, llvm_v4f64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_qpx_qvftstnan {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_QPX_Intrinsic PowerPC_QPX_FFF_Intrinsic
  string GCCBuiltinName = "__builtin_qpx_qvftstnan";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4f64_ty];
  list<LLVMType> ParamTypes = [llvm_v4f64_ty, llvm_v4f64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_qpx_qvfxmadd {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_QPX_Intrinsic PowerPC_QPX_FFFF_Intrinsic
  string GCCBuiltinName = "__builtin_qpx_qvfxmadd";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4f64_ty];
  list<LLVMType> ParamTypes = [llvm_v4f64_ty, llvm_v4f64_ty, llvm_v4f64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_qpx_qvfxmadds {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_QPX_Intrinsic PowerPC_QPX_FFFF_Intrinsic
  string GCCBuiltinName = "__builtin_qpx_qvfxmadds";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4f64_ty];
  list<LLVMType> ParamTypes = [llvm_v4f64_ty, llvm_v4f64_ty, llvm_v4f64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_qpx_qvfxmul {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_QPX_Intrinsic PowerPC_QPX_FFF_Intrinsic
  string GCCBuiltinName = "__builtin_qpx_qvfxmul";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4f64_ty];
  list<LLVMType> ParamTypes = [llvm_v4f64_ty, llvm_v4f64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_qpx_qvfxmuls {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_QPX_Intrinsic PowerPC_QPX_FFF_Intrinsic
  string GCCBuiltinName = "__builtin_qpx_qvfxmuls";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4f64_ty];
  list<LLVMType> ParamTypes = [llvm_v4f64_ty, llvm_v4f64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_qpx_qvfxxcpnmadd {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_QPX_Intrinsic PowerPC_QPX_FFFF_Intrinsic
  string GCCBuiltinName = "__builtin_qpx_qvfxxcpnmadd";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4f64_ty];
  list<LLVMType> ParamTypes = [llvm_v4f64_ty, llvm_v4f64_ty, llvm_v4f64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_qpx_qvfxxcpnmadds {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_QPX_Intrinsic PowerPC_QPX_FFFF_Intrinsic
  string GCCBuiltinName = "__builtin_qpx_qvfxxcpnmadds";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4f64_ty];
  list<LLVMType> ParamTypes = [llvm_v4f64_ty, llvm_v4f64_ty, llvm_v4f64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_qpx_qvfxxmadd {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_QPX_Intrinsic PowerPC_QPX_FFFF_Intrinsic
  string GCCBuiltinName = "__builtin_qpx_qvfxxmadd";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4f64_ty];
  list<LLVMType> ParamTypes = [llvm_v4f64_ty, llvm_v4f64_ty, llvm_v4f64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_qpx_qvfxxmadds {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_QPX_Intrinsic PowerPC_QPX_FFFF_Intrinsic
  string GCCBuiltinName = "__builtin_qpx_qvfxxmadds";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4f64_ty];
  list<LLVMType> ParamTypes = [llvm_v4f64_ty, llvm_v4f64_ty, llvm_v4f64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_qpx_qvfxxnpmadd {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_QPX_Intrinsic PowerPC_QPX_FFFF_Intrinsic
  string GCCBuiltinName = "__builtin_qpx_qvfxxnpmadd";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4f64_ty];
  list<LLVMType> ParamTypes = [llvm_v4f64_ty, llvm_v4f64_ty, llvm_v4f64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_qpx_qvfxxnpmadds {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_QPX_Intrinsic PowerPC_QPX_FFFF_Intrinsic
  string GCCBuiltinName = "__builtin_qpx_qvfxxnpmadds";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4f64_ty];
  list<LLVMType> ParamTypes = [llvm_v4f64_ty, llvm_v4f64_ty, llvm_v4f64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_qpx_qvgpci {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_QPX_Intrinsic
  string GCCBuiltinName = "__builtin_qpx_qvgpci";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4f64_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_qpx_qvlfcd {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_QPX_Intrinsic PowerPC_QPX_Load_Intrinsic
  string GCCBuiltinName = "__builtin_qpx_qvlfcd";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4f64_ty];
  list<LLVMType> ParamTypes = [llvm_ptr_ty];
  list<IntrinsicProperty> Properties = [IntrReadArgMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_qpx_qvlfcda {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_QPX_Intrinsic PowerPC_QPX_Load_Intrinsic
  string GCCBuiltinName = "__builtin_qpx_qvlfcda";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4f64_ty];
  list<LLVMType> ParamTypes = [llvm_ptr_ty];
  list<IntrinsicProperty> Properties = [IntrReadArgMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_qpx_qvlfcs {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_QPX_Intrinsic PowerPC_QPX_Load_Intrinsic
  string GCCBuiltinName = "__builtin_qpx_qvlfcs";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4f64_ty];
  list<LLVMType> ParamTypes = [llvm_ptr_ty];
  list<IntrinsicProperty> Properties = [IntrReadArgMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_qpx_qvlfcsa {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_QPX_Intrinsic PowerPC_QPX_Load_Intrinsic
  string GCCBuiltinName = "__builtin_qpx_qvlfcsa";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4f64_ty];
  list<LLVMType> ParamTypes = [llvm_ptr_ty];
  list<IntrinsicProperty> Properties = [IntrReadArgMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_qpx_qvlfd {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_QPX_Intrinsic PowerPC_QPX_Load_Intrinsic
  string GCCBuiltinName = "__builtin_qpx_qvlfd";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4f64_ty];
  list<LLVMType> ParamTypes = [llvm_ptr_ty];
  list<IntrinsicProperty> Properties = [IntrReadArgMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_qpx_qvlfda {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_QPX_Intrinsic PowerPC_QPX_Load_Intrinsic
  string GCCBuiltinName = "__builtin_qpx_qvlfda";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4f64_ty];
  list<LLVMType> ParamTypes = [llvm_ptr_ty];
  list<IntrinsicProperty> Properties = [IntrReadArgMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_qpx_qvlfiwa {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_QPX_Intrinsic PowerPC_QPX_Load_Intrinsic
  string GCCBuiltinName = "__builtin_qpx_qvlfiwa";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4f64_ty];
  list<LLVMType> ParamTypes = [llvm_ptr_ty];
  list<IntrinsicProperty> Properties = [IntrReadArgMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_qpx_qvlfiwaa {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_QPX_Intrinsic PowerPC_QPX_Load_Intrinsic
  string GCCBuiltinName = "__builtin_qpx_qvlfiwaa";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4f64_ty];
  list<LLVMType> ParamTypes = [llvm_ptr_ty];
  list<IntrinsicProperty> Properties = [IntrReadArgMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_qpx_qvlfiwz {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_QPX_Intrinsic PowerPC_QPX_Load_Intrinsic
  string GCCBuiltinName = "__builtin_qpx_qvlfiwz";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4f64_ty];
  list<LLVMType> ParamTypes = [llvm_ptr_ty];
  list<IntrinsicProperty> Properties = [IntrReadArgMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_qpx_qvlfiwza {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_QPX_Intrinsic PowerPC_QPX_Load_Intrinsic
  string GCCBuiltinName = "__builtin_qpx_qvlfiwza";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4f64_ty];
  list<LLVMType> ParamTypes = [llvm_ptr_ty];
  list<IntrinsicProperty> Properties = [IntrReadArgMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_qpx_qvlfs {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_QPX_Intrinsic PowerPC_QPX_Load_Intrinsic
  string GCCBuiltinName = "__builtin_qpx_qvlfs";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4f64_ty];
  list<LLVMType> ParamTypes = [llvm_ptr_ty];
  list<IntrinsicProperty> Properties = [IntrReadArgMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_qpx_qvlfsa {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_QPX_Intrinsic PowerPC_QPX_Load_Intrinsic
  string GCCBuiltinName = "__builtin_qpx_qvlfsa";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4f64_ty];
  list<LLVMType> ParamTypes = [llvm_ptr_ty];
  list<IntrinsicProperty> Properties = [IntrReadArgMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_qpx_qvlpcld {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_QPX_Intrinsic PowerPC_QPX_LoadPerm_Intrinsic
  string GCCBuiltinName = "__builtin_qpx_qvlpcld";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4f64_ty];
  list<LLVMType> ParamTypes = [llvm_ptr_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_qpx_qvlpcls {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_QPX_Intrinsic PowerPC_QPX_LoadPerm_Intrinsic
  string GCCBuiltinName = "__builtin_qpx_qvlpcls";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4f64_ty];
  list<LLVMType> ParamTypes = [llvm_ptr_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_qpx_qvlpcrd {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_QPX_Intrinsic PowerPC_QPX_LoadPerm_Intrinsic
  string GCCBuiltinName = "__builtin_qpx_qvlpcrd";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4f64_ty];
  list<LLVMType> ParamTypes = [llvm_ptr_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_qpx_qvlpcrs {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_QPX_Intrinsic PowerPC_QPX_LoadPerm_Intrinsic
  string GCCBuiltinName = "__builtin_qpx_qvlpcrs";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4f64_ty];
  list<LLVMType> ParamTypes = [llvm_ptr_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_qpx_qvstfcd {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_QPX_Intrinsic PowerPC_QPX_Store_Intrinsic
  string GCCBuiltinName = "__builtin_qpx_qvstfcd";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_v4f64_ty, llvm_ptr_ty];
  list<IntrinsicProperty> Properties = [IntrReadWriteArgMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_qpx_qvstfcda {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_QPX_Intrinsic PowerPC_QPX_Store_Intrinsic
  string GCCBuiltinName = "__builtin_qpx_qvstfcda";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_v4f64_ty, llvm_ptr_ty];
  list<IntrinsicProperty> Properties = [IntrReadWriteArgMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_qpx_qvstfcs {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_QPX_Intrinsic PowerPC_QPX_Store_Intrinsic
  string GCCBuiltinName = "__builtin_qpx_qvstfcs";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_v4f64_ty, llvm_ptr_ty];
  list<IntrinsicProperty> Properties = [IntrReadWriteArgMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_qpx_qvstfcsa {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_QPX_Intrinsic PowerPC_QPX_Store_Intrinsic
  string GCCBuiltinName = "__builtin_qpx_qvstfcsa";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_v4f64_ty, llvm_ptr_ty];
  list<IntrinsicProperty> Properties = [IntrReadWriteArgMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_qpx_qvstfd {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_QPX_Intrinsic PowerPC_QPX_Store_Intrinsic
  string GCCBuiltinName = "__builtin_qpx_qvstfd";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_v4f64_ty, llvm_ptr_ty];
  list<IntrinsicProperty> Properties = [IntrReadWriteArgMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_qpx_qvstfda {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_QPX_Intrinsic PowerPC_QPX_Store_Intrinsic
  string GCCBuiltinName = "__builtin_qpx_qvstfda";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_v4f64_ty, llvm_ptr_ty];
  list<IntrinsicProperty> Properties = [IntrReadWriteArgMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_qpx_qvstfiw {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_QPX_Intrinsic PowerPC_QPX_Store_Intrinsic
  string GCCBuiltinName = "__builtin_qpx_qvstfiw";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_v4f64_ty, llvm_ptr_ty];
  list<IntrinsicProperty> Properties = [IntrReadWriteArgMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_qpx_qvstfiwa {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_QPX_Intrinsic PowerPC_QPX_Store_Intrinsic
  string GCCBuiltinName = "__builtin_qpx_qvstfiwa";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_v4f64_ty, llvm_ptr_ty];
  list<IntrinsicProperty> Properties = [IntrReadWriteArgMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_qpx_qvstfs {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_QPX_Intrinsic PowerPC_QPX_Store_Intrinsic
  string GCCBuiltinName = "__builtin_qpx_qvstfs";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_v4f64_ty, llvm_ptr_ty];
  list<IntrinsicProperty> Properties = [IntrReadWriteArgMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_qpx_qvstfsa {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_QPX_Intrinsic PowerPC_QPX_Store_Intrinsic
  string GCCBuiltinName = "__builtin_qpx_qvstfsa";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_v4f64_ty, llvm_ptr_ty];
  list<IntrinsicProperty> Properties = [IntrReadWriteArgMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_set_texasr {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_set_texasr";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_set_texasru {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_set_texasru";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_set_tfhar {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_set_tfhar";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_set_tfiar {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_set_tfiar";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_sync {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_tabort {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_tabort";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_tabortdc {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_tabortdc";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_tabortdci {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_tabortdci";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_tabortwc {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_tabortwc";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_tabortwci {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_tabortwci";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_tbegin {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_tbegin";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_tcheck {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_tcheck";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_tend {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_tend";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_tendall {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_tendall";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_trechkpt {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_trechkpt";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_treclaim {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_treclaim";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_tresume {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_tresume";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_tsr {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_tsr";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_tsuspend {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_tsuspend";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_ttest {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ttest";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_vsx_lxvd2x {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v2f64_ty];
  list<LLVMType> ParamTypes = [llvm_ptr_ty];
  list<IntrinsicProperty> Properties = [IntrReadArgMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_vsx_lxvw4x {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_ptr_ty];
  list<IntrinsicProperty> Properties = [IntrReadArgMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_vsx_stxvd2x {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_ptr_ty];
  list<IntrinsicProperty> Properties = [IntrReadWriteArgMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_vsx_stxvw4x {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_ptr_ty];
  list<IntrinsicProperty> Properties = [IntrReadWriteArgMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_vsx_xsmaxdp {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_VSX_Intrinsic PowerPC_VSX_Sca_DDD_Intrinsic
  string GCCBuiltinName = "__builtin_vsx_xsmaxdp";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_double_ty];
  list<LLVMType> ParamTypes = [llvm_double_ty, llvm_double_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_vsx_xsmindp {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_VSX_Intrinsic PowerPC_VSX_Sca_DDD_Intrinsic
  string GCCBuiltinName = "__builtin_vsx_xsmindp";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_double_ty];
  list<LLVMType> ParamTypes = [llvm_double_ty, llvm_double_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_vsx_xvcmpeqdp {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_VSX_Intrinsic
  string GCCBuiltinName = "__builtin_vsx_xvcmpeqdp";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_v2f64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_vsx_xvcmpeqsp {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_VSX_Intrinsic
  string GCCBuiltinName = "__builtin_vsx_xvcmpeqsp";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_v4f32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_vsx_xvcmpgedp {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_VSX_Intrinsic
  string GCCBuiltinName = "__builtin_vsx_xvcmpgedp";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_v2f64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_vsx_xvcmpgesp {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_VSX_Intrinsic
  string GCCBuiltinName = "__builtin_vsx_xvcmpgesp";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_v4f32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_vsx_xvcmpgtdp {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_VSX_Intrinsic
  string GCCBuiltinName = "__builtin_vsx_xvcmpgtdp";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_v2f64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_vsx_xvcmpgtsp {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_VSX_Intrinsic
  string GCCBuiltinName = "__builtin_vsx_xvcmpgtsp";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_v4f32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_vsx_xvdivdp {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_VSX_Intrinsic PowerPC_VSX_Vec_DDD_Intrinsic
  string GCCBuiltinName = "__builtin_vsx_xvdivdp";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v2f64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_v2f64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_vsx_xvdivsp {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_VSX_Intrinsic PowerPC_VSX_Vec_FFF_Intrinsic
  string GCCBuiltinName = "__builtin_vsx_xvdivsp";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_v4f32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_vsx_xvmaxdp {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_VSX_Intrinsic PowerPC_VSX_Vec_DDD_Intrinsic
  string GCCBuiltinName = "__builtin_vsx_xvmaxdp";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v2f64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_v2f64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_vsx_xvmaxsp {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_VSX_Intrinsic PowerPC_VSX_Vec_FFF_Intrinsic
  string GCCBuiltinName = "__builtin_vsx_xvmaxsp";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_v4f32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_vsx_xvmindp {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_VSX_Intrinsic PowerPC_VSX_Vec_DDD_Intrinsic
  string GCCBuiltinName = "__builtin_vsx_xvmindp";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v2f64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_v2f64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_vsx_xvminsp {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_VSX_Intrinsic PowerPC_VSX_Vec_FFF_Intrinsic
  string GCCBuiltinName = "__builtin_vsx_xvminsp";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_v4f32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_vsx_xvrdpip {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v2f64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_vsx_xvredp {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_vsx_xvredp";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v2f64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_vsx_xvresp {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_vsx_xvresp";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_vsx_xvrspip {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_vsx_xvrsqrtedp {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_vsx_xvrsqrtedp";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v2f64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_vsx_xvrsqrtesp {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_vsx_xvrsqrtesp";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ppc_vsx_xxleqv {	// GCCBuiltin SDPatternOperator Intrinsic PowerPC_VSX_Intrinsic
  string GCCBuiltinName = "__builtin_vsx_xxleqv";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "ppc";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_prefetch {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrReadWriteArgMem, anonymous_2];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ptr_annotation {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.ptr.annotation";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [anonymous_49];
  list<LLVMType> ParamTypes = [anonymous_50, llvm_ptr_ty, llvm_ptr_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ptx_bar_sync {	// SDPatternOperator Intrinsic GCCBuiltin
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__builtin_ptx_bar_sync";
  string NAME = ?;
}
def int_ptx_read_clock {	// SDPatternOperator Intrinsic GCCBuiltin PTXReadSpecialRegisterIntrinsic_r32
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string GCCBuiltinName = "__builtin_ptx_read_clock";
  string NAME = ?;
}
def int_ptx_read_clock64 {	// SDPatternOperator Intrinsic GCCBuiltin PTXReadSpecialRegisterIntrinsic_r64
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string GCCBuiltinName = "__builtin_ptx_read_clock64";
  string NAME = ?;
}
def int_ptx_read_ctaid_w {	// SDPatternOperator Intrinsic GCCBuiltin _w
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string GCCBuiltinName = "__builtin_ptx_read_ctaid_w";
  string NAME = "int_ptx_read_ctaid";
}
def int_ptx_read_ctaid_x {	// SDPatternOperator Intrinsic GCCBuiltin _x
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string GCCBuiltinName = "__builtin_ptx_read_ctaid_x";
  string NAME = "int_ptx_read_ctaid";
}
def int_ptx_read_ctaid_y {	// SDPatternOperator Intrinsic GCCBuiltin _y
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string GCCBuiltinName = "__builtin_ptx_read_ctaid_y";
  string NAME = "int_ptx_read_ctaid";
}
def int_ptx_read_ctaid_z {	// SDPatternOperator Intrinsic GCCBuiltin _z
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string GCCBuiltinName = "__builtin_ptx_read_ctaid_z";
  string NAME = "int_ptx_read_ctaid";
}
def int_ptx_read_gridid {	// SDPatternOperator Intrinsic GCCBuiltin PTXReadSpecialRegisterIntrinsic_r32
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string GCCBuiltinName = "__builtin_ptx_read_gridid";
  string NAME = ?;
}
def int_ptx_read_laneid {	// SDPatternOperator Intrinsic GCCBuiltin PTXReadSpecialRegisterIntrinsic_r32
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string GCCBuiltinName = "__builtin_ptx_read_laneid";
  string NAME = ?;
}
def int_ptx_read_lanemask_eq {	// SDPatternOperator Intrinsic GCCBuiltin PTXReadSpecialRegisterIntrinsic_r32
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string GCCBuiltinName = "__builtin_ptx_read_lanemask_eq";
  string NAME = ?;
}
def int_ptx_read_lanemask_ge {	// SDPatternOperator Intrinsic GCCBuiltin PTXReadSpecialRegisterIntrinsic_r32
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string GCCBuiltinName = "__builtin_ptx_read_lanemask_ge";
  string NAME = ?;
}
def int_ptx_read_lanemask_gt {	// SDPatternOperator Intrinsic GCCBuiltin PTXReadSpecialRegisterIntrinsic_r32
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string GCCBuiltinName = "__builtin_ptx_read_lanemask_gt";
  string NAME = ?;
}
def int_ptx_read_lanemask_le {	// SDPatternOperator Intrinsic GCCBuiltin PTXReadSpecialRegisterIntrinsic_r32
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string GCCBuiltinName = "__builtin_ptx_read_lanemask_le";
  string NAME = ?;
}
def int_ptx_read_lanemask_lt {	// SDPatternOperator Intrinsic GCCBuiltin PTXReadSpecialRegisterIntrinsic_r32
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string GCCBuiltinName = "__builtin_ptx_read_lanemask_lt";
  string NAME = ?;
}
def int_ptx_read_nctaid_w {	// SDPatternOperator Intrinsic GCCBuiltin _w
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string GCCBuiltinName = "__builtin_ptx_read_nctaid_w";
  string NAME = "int_ptx_read_nctaid";
}
def int_ptx_read_nctaid_x {	// SDPatternOperator Intrinsic GCCBuiltin _x
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string GCCBuiltinName = "__builtin_ptx_read_nctaid_x";
  string NAME = "int_ptx_read_nctaid";
}
def int_ptx_read_nctaid_y {	// SDPatternOperator Intrinsic GCCBuiltin _y
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string GCCBuiltinName = "__builtin_ptx_read_nctaid_y";
  string NAME = "int_ptx_read_nctaid";
}
def int_ptx_read_nctaid_z {	// SDPatternOperator Intrinsic GCCBuiltin _z
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string GCCBuiltinName = "__builtin_ptx_read_nctaid_z";
  string NAME = "int_ptx_read_nctaid";
}
def int_ptx_read_nsmid {	// SDPatternOperator Intrinsic GCCBuiltin PTXReadSpecialRegisterIntrinsic_r32
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string GCCBuiltinName = "__builtin_ptx_read_nsmid";
  string NAME = ?;
}
def int_ptx_read_ntid_w {	// SDPatternOperator Intrinsic GCCBuiltin _w
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string GCCBuiltinName = "__builtin_ptx_read_ntid_w";
  string NAME = "int_ptx_read_ntid";
}
def int_ptx_read_ntid_x {	// SDPatternOperator Intrinsic GCCBuiltin _x
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string GCCBuiltinName = "__builtin_ptx_read_ntid_x";
  string NAME = "int_ptx_read_ntid";
}
def int_ptx_read_ntid_y {	// SDPatternOperator Intrinsic GCCBuiltin _y
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string GCCBuiltinName = "__builtin_ptx_read_ntid_y";
  string NAME = "int_ptx_read_ntid";
}
def int_ptx_read_ntid_z {	// SDPatternOperator Intrinsic GCCBuiltin _z
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string GCCBuiltinName = "__builtin_ptx_read_ntid_z";
  string NAME = "int_ptx_read_ntid";
}
def int_ptx_read_nwarpid {	// SDPatternOperator Intrinsic GCCBuiltin PTXReadSpecialRegisterIntrinsic_r32
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string GCCBuiltinName = "__builtin_ptx_read_nwarpid";
  string NAME = ?;
}
def int_ptx_read_pm0 {	// SDPatternOperator Intrinsic GCCBuiltin PTXReadSpecialRegisterIntrinsic_r32
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string GCCBuiltinName = "__builtin_ptx_read_pm0";
  string NAME = ?;
}
def int_ptx_read_pm1 {	// SDPatternOperator Intrinsic GCCBuiltin PTXReadSpecialRegisterIntrinsic_r32
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string GCCBuiltinName = "__builtin_ptx_read_pm1";
  string NAME = ?;
}
def int_ptx_read_pm2 {	// SDPatternOperator Intrinsic GCCBuiltin PTXReadSpecialRegisterIntrinsic_r32
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string GCCBuiltinName = "__builtin_ptx_read_pm2";
  string NAME = ?;
}
def int_ptx_read_pm3 {	// SDPatternOperator Intrinsic GCCBuiltin PTXReadSpecialRegisterIntrinsic_r32
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string GCCBuiltinName = "__builtin_ptx_read_pm3";
  string NAME = ?;
}
def int_ptx_read_smid {	// SDPatternOperator Intrinsic GCCBuiltin PTXReadSpecialRegisterIntrinsic_r32
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string GCCBuiltinName = "__builtin_ptx_read_smid";
  string NAME = ?;
}
def int_ptx_read_tid_w {	// SDPatternOperator Intrinsic GCCBuiltin _w
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string GCCBuiltinName = "__builtin_ptx_read_tid_w";
  string NAME = "int_ptx_read_tid";
}
def int_ptx_read_tid_x {	// SDPatternOperator Intrinsic GCCBuiltin _x
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string GCCBuiltinName = "__builtin_ptx_read_tid_x";
  string NAME = "int_ptx_read_tid";
}
def int_ptx_read_tid_y {	// SDPatternOperator Intrinsic GCCBuiltin _y
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string GCCBuiltinName = "__builtin_ptx_read_tid_y";
  string NAME = "int_ptx_read_tid";
}
def int_ptx_read_tid_z {	// SDPatternOperator Intrinsic GCCBuiltin _z
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string GCCBuiltinName = "__builtin_ptx_read_tid_z";
  string NAME = "int_ptx_read_tid";
}
def int_ptx_read_warpid {	// SDPatternOperator Intrinsic GCCBuiltin PTXReadSpecialRegisterIntrinsic_r32
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string GCCBuiltinName = "__builtin_ptx_read_warpid";
  string NAME = ?;
}
def int_r600_read_global_size_x {	// SDPatternOperator Intrinsic GCCBuiltin R600ReadPreloadRegisterIntrinsic _x
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "r600";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string GCCBuiltinName = "__builtin_r600_read_global_size_x";
  string NAME = "int_r600_read_global_size";
}
def int_r600_read_global_size_y {	// SDPatternOperator Intrinsic GCCBuiltin R600ReadPreloadRegisterIntrinsic _y
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "r600";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string GCCBuiltinName = "__builtin_r600_read_global_size_y";
  string NAME = "int_r600_read_global_size";
}
def int_r600_read_global_size_z {	// SDPatternOperator Intrinsic GCCBuiltin R600ReadPreloadRegisterIntrinsic _z
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "r600";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string GCCBuiltinName = "__builtin_r600_read_global_size_z";
  string NAME = "int_r600_read_global_size";
}
def int_r600_read_local_size_x {	// SDPatternOperator Intrinsic GCCBuiltin R600ReadPreloadRegisterIntrinsic _x
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "r600";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string GCCBuiltinName = "__builtin_r600_read_local_size_x";
  string NAME = "int_r600_read_local_size";
}
def int_r600_read_local_size_y {	// SDPatternOperator Intrinsic GCCBuiltin R600ReadPreloadRegisterIntrinsic _y
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "r600";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string GCCBuiltinName = "__builtin_r600_read_local_size_y";
  string NAME = "int_r600_read_local_size";
}
def int_r600_read_local_size_z {	// SDPatternOperator Intrinsic GCCBuiltin R600ReadPreloadRegisterIntrinsic _z
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "r600";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string GCCBuiltinName = "__builtin_r600_read_local_size_z";
  string NAME = "int_r600_read_local_size";
}
def int_r600_read_ngroups_x {	// SDPatternOperator Intrinsic GCCBuiltin R600ReadPreloadRegisterIntrinsic _x
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "r600";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string GCCBuiltinName = "__builtin_r600_read_ngroups_x";
  string NAME = "int_r600_read_ngroups";
}
def int_r600_read_ngroups_y {	// SDPatternOperator Intrinsic GCCBuiltin R600ReadPreloadRegisterIntrinsic _y
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "r600";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string GCCBuiltinName = "__builtin_r600_read_ngroups_y";
  string NAME = "int_r600_read_ngroups";
}
def int_r600_read_ngroups_z {	// SDPatternOperator Intrinsic GCCBuiltin R600ReadPreloadRegisterIntrinsic _z
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "r600";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string GCCBuiltinName = "__builtin_r600_read_ngroups_z";
  string NAME = "int_r600_read_ngroups";
}
def int_r600_read_tgid_x {	// SDPatternOperator Intrinsic GCCBuiltin R600ReadPreloadRegisterIntrinsic _x
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "r600";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string GCCBuiltinName = "__builtin_r600_read_tgid_x";
  string NAME = "int_r600_read_tgid";
}
def int_r600_read_tgid_y {	// SDPatternOperator Intrinsic GCCBuiltin R600ReadPreloadRegisterIntrinsic _y
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "r600";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string GCCBuiltinName = "__builtin_r600_read_tgid_y";
  string NAME = "int_r600_read_tgid";
}
def int_r600_read_tgid_z {	// SDPatternOperator Intrinsic GCCBuiltin R600ReadPreloadRegisterIntrinsic _z
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "r600";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string GCCBuiltinName = "__builtin_r600_read_tgid_z";
  string NAME = "int_r600_read_tgid";
}
def int_r600_read_tidig_x {	// SDPatternOperator Intrinsic GCCBuiltin R600ReadPreloadRegisterIntrinsic _x
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "r600";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string GCCBuiltinName = "__builtin_r600_read_tidig_x";
  string NAME = "int_r600_read_tidig";
}
def int_r600_read_tidig_y {	// SDPatternOperator Intrinsic GCCBuiltin R600ReadPreloadRegisterIntrinsic _y
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "r600";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string GCCBuiltinName = "__builtin_r600_read_tidig_y";
  string NAME = "int_r600_read_tidig";
}
def int_r600_read_tidig_z {	// SDPatternOperator Intrinsic GCCBuiltin R600ReadPreloadRegisterIntrinsic _z
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "r600";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string GCCBuiltinName = "__builtin_r600_read_tidig_z";
  string NAME = "int_r600_read_tidig";
}
def int_read_register {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.read_register";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_anyint_ty];
  list<LLVMType> ParamTypes = [llvm_metadata_ty];
  list<IntrinsicProperty> Properties = [IntrReadMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_readcyclecounter {	// SDPatternOperator Intrinsic
  list<LLVMType> Intrinsic:param_types = [];
  list<IntrinsicProperty> Intrinsic:properties = [];
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_returnaddress {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_ptr_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_rint {	// SDPatternOperator Intrinsic
  list<IntrinsicProperty> Intrinsic:properties = [];
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_anyfloat_ty];
  list<LLVMType> ParamTypes = [anonymous_37];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_round {	// SDPatternOperator Intrinsic
  list<IntrinsicProperty> Intrinsic:properties = [];
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_anyfloat_ty];
  list<LLVMType> ParamTypes = [anonymous_39];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_s390_etnd {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_tx_nesting_depth";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_s390_lcbb {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_s390_lcbb";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_s390_ntstg {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_ptr64_ty];
  list<IntrinsicProperty> Properties = [IntrReadWriteArgMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_s390_ppa_txassist {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_tx_assist";
  list<IntrinsicProperty> Intrinsic:properties = [];
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_s390_tabort {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoReturn, Throws];
  bit isTarget = 0;
  string NAME = ?;
}
def int_s390_tbegin {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoDuplicate];
  bit isTarget = 0;
  string NAME = ?;
}
def int_s390_tbegin_nofloat {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoDuplicate];
  bit isTarget = 0;
  string NAME = ?;
}
def int_s390_tbeginc {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoDuplicate];
  bit isTarget = 0;
  string NAME = ?;
}
def int_s390_tend {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_tend";
  list<IntrinsicProperty> Intrinsic:properties = [];
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_s390_vaccb {	// GCCBuiltin SDPatternOperator Intrinsic SystemZBinaryConv SystemZBinary b
  string GCCBuiltinName = "__builtin_s390_vaccb";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_vacc";
}
def int_s390_vacccq {	// GCCBuiltin SDPatternOperator Intrinsic SystemZTernaryConv SystemZTernary
  string GCCBuiltinName = "__builtin_s390_vacccq";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_s390_vaccf {	// GCCBuiltin SDPatternOperator Intrinsic SystemZBinaryConv SystemZBinary f
  string GCCBuiltinName = "__builtin_s390_vaccf";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_vacc";
}
def int_s390_vaccg {	// GCCBuiltin SDPatternOperator Intrinsic SystemZBinaryConv SystemZBinary g
  string GCCBuiltinName = "__builtin_s390_vaccg";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_v2i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_vacc";
}
def int_s390_vacch {	// GCCBuiltin SDPatternOperator Intrinsic SystemZBinaryConv SystemZBinary h
  string GCCBuiltinName = "__builtin_s390_vacch";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_vacc";
}
def int_s390_vaccq {	// GCCBuiltin SDPatternOperator Intrinsic SystemZBinaryConv SystemZBinary
  string GCCBuiltinName = "__builtin_s390_vaccq";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_s390_vacq {	// GCCBuiltin SDPatternOperator Intrinsic SystemZTernaryConv SystemZTernary
  string GCCBuiltinName = "__builtin_s390_vacq";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_s390_vaq {	// GCCBuiltin SDPatternOperator Intrinsic SystemZBinaryConv SystemZBinary
  string GCCBuiltinName = "__builtin_s390_vaq";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_s390_vavgb {	// GCCBuiltin SDPatternOperator Intrinsic SystemZBinaryConv SystemZBinary b
  string GCCBuiltinName = "__builtin_s390_vavgb";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_vavg";
}
def int_s390_vavgf {	// GCCBuiltin SDPatternOperator Intrinsic SystemZBinaryConv SystemZBinary f
  string GCCBuiltinName = "__builtin_s390_vavgf";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_vavg";
}
def int_s390_vavgg {	// GCCBuiltin SDPatternOperator Intrinsic SystemZBinaryConv SystemZBinary g
  string GCCBuiltinName = "__builtin_s390_vavgg";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_v2i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_vavg";
}
def int_s390_vavgh {	// GCCBuiltin SDPatternOperator Intrinsic SystemZBinaryConv SystemZBinary h
  string GCCBuiltinName = "__builtin_s390_vavgh";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_vavg";
}
def int_s390_vavglb {	// GCCBuiltin SDPatternOperator Intrinsic SystemZBinaryConv SystemZBinary b
  string GCCBuiltinName = "__builtin_s390_vavglb";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_vavgl";
}
def int_s390_vavglf {	// GCCBuiltin SDPatternOperator Intrinsic SystemZBinaryConv SystemZBinary f
  string GCCBuiltinName = "__builtin_s390_vavglf";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_vavgl";
}
def int_s390_vavglg {	// GCCBuiltin SDPatternOperator Intrinsic SystemZBinaryConv SystemZBinary g
  string GCCBuiltinName = "__builtin_s390_vavglg";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_v2i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_vavgl";
}
def int_s390_vavglh {	// GCCBuiltin SDPatternOperator Intrinsic SystemZBinaryConv SystemZBinary h
  string GCCBuiltinName = "__builtin_s390_vavglh";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_vavgl";
}
def int_s390_vceqbs {	// SDPatternOperator Intrinsic SystemZBinaryConvCC SystemZBinaryCC bs
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v16i8_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_vceq";
}
def int_s390_vceqfs {	// SDPatternOperator Intrinsic SystemZBinaryConvCC SystemZBinaryCC fs
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v4i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_vceq";
}
def int_s390_vceqgs {	// SDPatternOperator Intrinsic SystemZBinaryConvCC SystemZBinaryCC gs
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v2i64_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_v2i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_vceq";
}
def int_s390_vceqhs {	// SDPatternOperator Intrinsic SystemZBinaryConvCC SystemZBinaryCC hs
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v8i16_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_vceq";
}
def int_s390_vchbs {	// SDPatternOperator Intrinsic SystemZBinaryConvCC SystemZBinaryCC bs
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v16i8_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_vch";
}
def int_s390_vchfs {	// SDPatternOperator Intrinsic SystemZBinaryConvCC SystemZBinaryCC fs
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v4i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_vch";
}
def int_s390_vchgs {	// SDPatternOperator Intrinsic SystemZBinaryConvCC SystemZBinaryCC gs
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v2i64_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_v2i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_vch";
}
def int_s390_vchhs {	// SDPatternOperator Intrinsic SystemZBinaryConvCC SystemZBinaryCC hs
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v8i16_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_vch";
}
def int_s390_vchlbs {	// SDPatternOperator Intrinsic SystemZBinaryConvCC SystemZBinaryCC bs
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v16i8_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_vchl";
}
def int_s390_vchlfs {	// SDPatternOperator Intrinsic SystemZBinaryConvCC SystemZBinaryCC fs
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v4i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_vchl";
}
def int_s390_vchlgs {	// SDPatternOperator Intrinsic SystemZBinaryConvCC SystemZBinaryCC gs
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v2i64_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_v2i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_vchl";
}
def int_s390_vchlhs {	// SDPatternOperator Intrinsic SystemZBinaryConvCC SystemZBinaryCC hs
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v8i16_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_vchl";
}
def int_s390_vcksm {	// GCCBuiltin SDPatternOperator Intrinsic SystemZBinaryConv SystemZBinary
  string GCCBuiltinName = "__builtin_s390_vcksm";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_s390_verimb {	// GCCBuiltin SDPatternOperator Intrinsic SystemZQuaternaryInt b
  string GCCBuiltinName = "__builtin_s390_verimb";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty, llvm_v16i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_verim";
}
def int_s390_verimf {	// GCCBuiltin SDPatternOperator Intrinsic SystemZQuaternaryInt f
  string GCCBuiltinName = "__builtin_s390_verimf";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty, llvm_v4i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_verim";
}
def int_s390_verimg {	// GCCBuiltin SDPatternOperator Intrinsic SystemZQuaternaryInt g
  string GCCBuiltinName = "__builtin_s390_verimg";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_v2i64_ty, llvm_v2i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_verim";
}
def int_s390_verimh {	// GCCBuiltin SDPatternOperator Intrinsic SystemZQuaternaryInt h
  string GCCBuiltinName = "__builtin_s390_verimh";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty, llvm_v8i16_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_verim";
}
def int_s390_verllb {	// GCCBuiltin SDPatternOperator Intrinsic SystemZBinaryInt b
  string GCCBuiltinName = "__builtin_s390_verllb";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_verll";
}
def int_s390_verllf {	// GCCBuiltin SDPatternOperator Intrinsic SystemZBinaryInt f
  string GCCBuiltinName = "__builtin_s390_verllf";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_verll";
}
def int_s390_verllg {	// GCCBuiltin SDPatternOperator Intrinsic SystemZBinaryInt g
  string GCCBuiltinName = "__builtin_s390_verllg";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_verll";
}
def int_s390_verllh {	// GCCBuiltin SDPatternOperator Intrinsic SystemZBinaryInt h
  string GCCBuiltinName = "__builtin_s390_verllh";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_verll";
}
def int_s390_verllvb {	// GCCBuiltin SDPatternOperator Intrinsic SystemZBinaryConv SystemZBinary b
  string GCCBuiltinName = "__builtin_s390_verllvb";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_verllv";
}
def int_s390_verllvf {	// GCCBuiltin SDPatternOperator Intrinsic SystemZBinaryConv SystemZBinary f
  string GCCBuiltinName = "__builtin_s390_verllvf";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_verllv";
}
def int_s390_verllvg {	// GCCBuiltin SDPatternOperator Intrinsic SystemZBinaryConv SystemZBinary g
  string GCCBuiltinName = "__builtin_s390_verllvg";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_v2i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_verllv";
}
def int_s390_verllvh {	// GCCBuiltin SDPatternOperator Intrinsic SystemZBinaryConv SystemZBinary h
  string GCCBuiltinName = "__builtin_s390_verllvh";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_verllv";
}
def int_s390_vfaeb {	// GCCBuiltin SDPatternOperator Intrinsic SystemZTernaryInt b
  string GCCBuiltinName = "__builtin_s390_vfaeb";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_vfae";
}
def int_s390_vfaebs {	// SDPatternOperator Intrinsic SystemZTernaryIntCC bs
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v16i8_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_vfae";
}
def int_s390_vfaef {	// GCCBuiltin SDPatternOperator Intrinsic SystemZTernaryInt f
  string GCCBuiltinName = "__builtin_s390_vfaef";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_vfae";
}
def int_s390_vfaefs {	// SDPatternOperator Intrinsic SystemZTernaryIntCC fs
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v4i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_vfae";
}
def int_s390_vfaeh {	// GCCBuiltin SDPatternOperator Intrinsic SystemZTernaryInt h
  string GCCBuiltinName = "__builtin_s390_vfaeh";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_vfae";
}
def int_s390_vfaehs {	// SDPatternOperator Intrinsic SystemZTernaryIntCC hs
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v8i16_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_vfae";
}
def int_s390_vfaezb {	// GCCBuiltin SDPatternOperator Intrinsic SystemZTernaryInt b
  string GCCBuiltinName = "__builtin_s390_vfaezb";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_vfaez";
}
def int_s390_vfaezbs {	// SDPatternOperator Intrinsic SystemZTernaryIntCC bs
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v16i8_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_vfaez";
}
def int_s390_vfaezf {	// GCCBuiltin SDPatternOperator Intrinsic SystemZTernaryInt f
  string GCCBuiltinName = "__builtin_s390_vfaezf";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_vfaez";
}
def int_s390_vfaezfs {	// SDPatternOperator Intrinsic SystemZTernaryIntCC fs
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v4i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_vfaez";
}
def int_s390_vfaezh {	// GCCBuiltin SDPatternOperator Intrinsic SystemZTernaryInt h
  string GCCBuiltinName = "__builtin_s390_vfaezh";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_vfaez";
}
def int_s390_vfaezhs {	// SDPatternOperator Intrinsic SystemZTernaryIntCC hs
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v8i16_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_vfaez";
}
def int_s390_vfcedbs {	// SDPatternOperator Intrinsic SystemZBinaryConvCC
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v2i64_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_v2f64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_s390_vfchdbs {	// SDPatternOperator Intrinsic SystemZBinaryConvCC
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v2i64_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_v2f64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_s390_vfchedbs {	// SDPatternOperator Intrinsic SystemZBinaryConvCC
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v2i64_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_v2f64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_s390_vfeeb {	// GCCBuiltin SDPatternOperator Intrinsic SystemZBinaryConv SystemZBinary b
  string GCCBuiltinName = "__builtin_s390_vfeeb";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_vfee";
}
def int_s390_vfeebs {	// SDPatternOperator Intrinsic SystemZBinaryConvCC SystemZBinaryCC bs
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v16i8_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_vfee";
}
def int_s390_vfeef {	// GCCBuiltin SDPatternOperator Intrinsic SystemZBinaryConv SystemZBinary f
  string GCCBuiltinName = "__builtin_s390_vfeef";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_vfee";
}
def int_s390_vfeefs {	// SDPatternOperator Intrinsic SystemZBinaryConvCC SystemZBinaryCC fs
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v4i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_vfee";
}
def int_s390_vfeeh {	// GCCBuiltin SDPatternOperator Intrinsic SystemZBinaryConv SystemZBinary h
  string GCCBuiltinName = "__builtin_s390_vfeeh";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_vfee";
}
def int_s390_vfeehs {	// SDPatternOperator Intrinsic SystemZBinaryConvCC SystemZBinaryCC hs
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v8i16_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_vfee";
}
def int_s390_vfeezb {	// GCCBuiltin SDPatternOperator Intrinsic SystemZBinaryConv SystemZBinary b
  string GCCBuiltinName = "__builtin_s390_vfeezb";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_vfeez";
}
def int_s390_vfeezbs {	// SDPatternOperator Intrinsic SystemZBinaryConvCC SystemZBinaryCC bs
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v16i8_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_vfeez";
}
def int_s390_vfeezf {	// GCCBuiltin SDPatternOperator Intrinsic SystemZBinaryConv SystemZBinary f
  string GCCBuiltinName = "__builtin_s390_vfeezf";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_vfeez";
}
def int_s390_vfeezfs {	// SDPatternOperator Intrinsic SystemZBinaryConvCC SystemZBinaryCC fs
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v4i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_vfeez";
}
def int_s390_vfeezh {	// GCCBuiltin SDPatternOperator Intrinsic SystemZBinaryConv SystemZBinary h
  string GCCBuiltinName = "__builtin_s390_vfeezh";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_vfeez";
}
def int_s390_vfeezhs {	// SDPatternOperator Intrinsic SystemZBinaryConvCC SystemZBinaryCC hs
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v8i16_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_vfeez";
}
def int_s390_vfeneb {	// GCCBuiltin SDPatternOperator Intrinsic SystemZBinaryConv SystemZBinary b
  string GCCBuiltinName = "__builtin_s390_vfeneb";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_vfene";
}
def int_s390_vfenebs {	// SDPatternOperator Intrinsic SystemZBinaryConvCC SystemZBinaryCC bs
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v16i8_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_vfene";
}
def int_s390_vfenef {	// GCCBuiltin SDPatternOperator Intrinsic SystemZBinaryConv SystemZBinary f
  string GCCBuiltinName = "__builtin_s390_vfenef";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_vfene";
}
def int_s390_vfenefs {	// SDPatternOperator Intrinsic SystemZBinaryConvCC SystemZBinaryCC fs
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v4i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_vfene";
}
def int_s390_vfeneh {	// GCCBuiltin SDPatternOperator Intrinsic SystemZBinaryConv SystemZBinary h
  string GCCBuiltinName = "__builtin_s390_vfeneh";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_vfene";
}
def int_s390_vfenehs {	// SDPatternOperator Intrinsic SystemZBinaryConvCC SystemZBinaryCC hs
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v8i16_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_vfene";
}
def int_s390_vfenezb {	// GCCBuiltin SDPatternOperator Intrinsic SystemZBinaryConv SystemZBinary b
  string GCCBuiltinName = "__builtin_s390_vfenezb";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_vfenez";
}
def int_s390_vfenezbs {	// SDPatternOperator Intrinsic SystemZBinaryConvCC SystemZBinaryCC bs
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v16i8_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_vfenez";
}
def int_s390_vfenezf {	// GCCBuiltin SDPatternOperator Intrinsic SystemZBinaryConv SystemZBinary f
  string GCCBuiltinName = "__builtin_s390_vfenezf";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_vfenez";
}
def int_s390_vfenezfs {	// SDPatternOperator Intrinsic SystemZBinaryConvCC SystemZBinaryCC fs
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v4i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_vfenez";
}
def int_s390_vfenezh {	// GCCBuiltin SDPatternOperator Intrinsic SystemZBinaryConv SystemZBinary h
  string GCCBuiltinName = "__builtin_s390_vfenezh";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_vfenez";
}
def int_s390_vfenezhs {	// SDPatternOperator Intrinsic SystemZBinaryConvCC SystemZBinaryCC hs
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v8i16_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_vfenez";
}
def int_s390_vfidb {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v2f64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_s390_vftcidb {	// SDPatternOperator Intrinsic SystemZBinaryConvIntCC
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v2i64_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_s390_vgfmab {	// GCCBuiltin SDPatternOperator Intrinsic SystemZTernaryConv b
  string GCCBuiltinName = "__builtin_s390_vgfmab";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_vgfma";
}
def int_s390_vgfmaf {	// GCCBuiltin SDPatternOperator Intrinsic SystemZTernaryConv f
  string GCCBuiltinName = "__builtin_s390_vgfmaf";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty, llvm_v2i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_vgfma";
}
def int_s390_vgfmag {	// GCCBuiltin SDPatternOperator Intrinsic SystemZTernaryConv g
  string GCCBuiltinName = "__builtin_s390_vgfmag";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_v2i64_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_vgfma";
}
def int_s390_vgfmah {	// GCCBuiltin SDPatternOperator Intrinsic SystemZTernaryConv h
  string GCCBuiltinName = "__builtin_s390_vgfmah";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_vgfma";
}
def int_s390_vgfmb {	// GCCBuiltin SDPatternOperator Intrinsic SystemZBinaryConv b
  string GCCBuiltinName = "__builtin_s390_vgfmb";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_vgfm";
}
def int_s390_vgfmf {	// GCCBuiltin SDPatternOperator Intrinsic SystemZBinaryConv f
  string GCCBuiltinName = "__builtin_s390_vgfmf";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_vgfm";
}
def int_s390_vgfmg {	// GCCBuiltin SDPatternOperator Intrinsic SystemZBinaryConv g
  string GCCBuiltinName = "__builtin_s390_vgfmg";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_v2i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_vgfm";
}
def int_s390_vgfmh {	// GCCBuiltin SDPatternOperator Intrinsic SystemZBinaryConv h
  string GCCBuiltinName = "__builtin_s390_vgfmh";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_vgfm";
}
def int_s390_vistrb {	// GCCBuiltin SDPatternOperator Intrinsic SystemZUnaryConv SystemZUnary b
  string GCCBuiltinName = "__builtin_s390_vistrb";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_vistr";
}
def int_s390_vistrbs {	// SDPatternOperator Intrinsic SystemZUnaryConvCC SystemZUnaryCC bs
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v16i8_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_vistr";
}
def int_s390_vistrf {	// GCCBuiltin SDPatternOperator Intrinsic SystemZUnaryConv SystemZUnary f
  string GCCBuiltinName = "__builtin_s390_vistrf";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_vistr";
}
def int_s390_vistrfs {	// SDPatternOperator Intrinsic SystemZUnaryConvCC SystemZUnaryCC fs
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v4i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_vistr";
}
def int_s390_vistrh {	// GCCBuiltin SDPatternOperator Intrinsic SystemZUnaryConv SystemZUnary h
  string GCCBuiltinName = "__builtin_s390_vistrh";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_vistr";
}
def int_s390_vistrhs {	// SDPatternOperator Intrinsic SystemZUnaryConvCC SystemZUnaryCC hs
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v8i16_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_vistr";
}
def int_s390_vlbb {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_s390_vlbb";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrReadArgMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_s390_vll {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_s390_vll";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_ptr_ty];
  list<IntrinsicProperty> Properties = [IntrReadArgMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_s390_vmaeb {	// GCCBuiltin SDPatternOperator Intrinsic SystemZTernaryConv b
  string GCCBuiltinName = "__builtin_s390_vmaeb";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_vmae";
}
def int_s390_vmaef {	// GCCBuiltin SDPatternOperator Intrinsic SystemZTernaryConv f
  string GCCBuiltinName = "__builtin_s390_vmaef";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty, llvm_v2i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_vmae";
}
def int_s390_vmaeh {	// GCCBuiltin SDPatternOperator Intrinsic SystemZTernaryConv h
  string GCCBuiltinName = "__builtin_s390_vmaeh";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_vmae";
}
def int_s390_vmahb {	// GCCBuiltin SDPatternOperator Intrinsic SystemZTernaryConv SystemZTernary b
  string GCCBuiltinName = "__builtin_s390_vmahb";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_vmah";
}
def int_s390_vmahf {	// GCCBuiltin SDPatternOperator Intrinsic SystemZTernaryConv SystemZTernary f
  string GCCBuiltinName = "__builtin_s390_vmahf";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_vmah";
}
def int_s390_vmahh {	// GCCBuiltin SDPatternOperator Intrinsic SystemZTernaryConv SystemZTernary h
  string GCCBuiltinName = "__builtin_s390_vmahh";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_vmah";
}
def int_s390_vmaleb {	// GCCBuiltin SDPatternOperator Intrinsic SystemZTernaryConv b
  string GCCBuiltinName = "__builtin_s390_vmaleb";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_vmale";
}
def int_s390_vmalef {	// GCCBuiltin SDPatternOperator Intrinsic SystemZTernaryConv f
  string GCCBuiltinName = "__builtin_s390_vmalef";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty, llvm_v2i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_vmale";
}
def int_s390_vmaleh {	// GCCBuiltin SDPatternOperator Intrinsic SystemZTernaryConv h
  string GCCBuiltinName = "__builtin_s390_vmaleh";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_vmale";
}
def int_s390_vmalhb {	// GCCBuiltin SDPatternOperator Intrinsic SystemZTernaryConv SystemZTernary b
  string GCCBuiltinName = "__builtin_s390_vmalhb";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_vmalh";
}
def int_s390_vmalhf {	// GCCBuiltin SDPatternOperator Intrinsic SystemZTernaryConv SystemZTernary f
  string GCCBuiltinName = "__builtin_s390_vmalhf";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_vmalh";
}
def int_s390_vmalhh {	// GCCBuiltin SDPatternOperator Intrinsic SystemZTernaryConv SystemZTernary h
  string GCCBuiltinName = "__builtin_s390_vmalhh";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_vmalh";
}
def int_s390_vmalob {	// GCCBuiltin SDPatternOperator Intrinsic SystemZTernaryConv b
  string GCCBuiltinName = "__builtin_s390_vmalob";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_vmalo";
}
def int_s390_vmalof {	// GCCBuiltin SDPatternOperator Intrinsic SystemZTernaryConv f
  string GCCBuiltinName = "__builtin_s390_vmalof";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty, llvm_v2i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_vmalo";
}
def int_s390_vmaloh {	// GCCBuiltin SDPatternOperator Intrinsic SystemZTernaryConv h
  string GCCBuiltinName = "__builtin_s390_vmaloh";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_vmalo";
}
def int_s390_vmaob {	// GCCBuiltin SDPatternOperator Intrinsic SystemZTernaryConv b
  string GCCBuiltinName = "__builtin_s390_vmaob";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_vmao";
}
def int_s390_vmaof {	// GCCBuiltin SDPatternOperator Intrinsic SystemZTernaryConv f
  string GCCBuiltinName = "__builtin_s390_vmaof";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty, llvm_v2i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_vmao";
}
def int_s390_vmaoh {	// GCCBuiltin SDPatternOperator Intrinsic SystemZTernaryConv h
  string GCCBuiltinName = "__builtin_s390_vmaoh";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_vmao";
}
def int_s390_vmeb {	// GCCBuiltin SDPatternOperator Intrinsic SystemZBinaryConv b
  string GCCBuiltinName = "__builtin_s390_vmeb";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_vme";
}
def int_s390_vmef {	// GCCBuiltin SDPatternOperator Intrinsic SystemZBinaryConv f
  string GCCBuiltinName = "__builtin_s390_vmef";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_vme";
}
def int_s390_vmeh {	// GCCBuiltin SDPatternOperator Intrinsic SystemZBinaryConv h
  string GCCBuiltinName = "__builtin_s390_vmeh";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_vme";
}
def int_s390_vmhb {	// GCCBuiltin SDPatternOperator Intrinsic SystemZBinaryConv SystemZBinary b
  string GCCBuiltinName = "__builtin_s390_vmhb";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_vmh";
}
def int_s390_vmhf {	// GCCBuiltin SDPatternOperator Intrinsic SystemZBinaryConv SystemZBinary f
  string GCCBuiltinName = "__builtin_s390_vmhf";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_vmh";
}
def int_s390_vmhh {	// GCCBuiltin SDPatternOperator Intrinsic SystemZBinaryConv SystemZBinary h
  string GCCBuiltinName = "__builtin_s390_vmhh";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_vmh";
}
def int_s390_vmleb {	// GCCBuiltin SDPatternOperator Intrinsic SystemZBinaryConv b
  string GCCBuiltinName = "__builtin_s390_vmleb";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_vmle";
}
def int_s390_vmlef {	// GCCBuiltin SDPatternOperator Intrinsic SystemZBinaryConv f
  string GCCBuiltinName = "__builtin_s390_vmlef";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_vmle";
}
def int_s390_vmleh {	// GCCBuiltin SDPatternOperator Intrinsic SystemZBinaryConv h
  string GCCBuiltinName = "__builtin_s390_vmleh";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_vmle";
}
def int_s390_vmlhb {	// GCCBuiltin SDPatternOperator Intrinsic SystemZBinaryConv SystemZBinary b
  string GCCBuiltinName = "__builtin_s390_vmlhb";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_vmlh";
}
def int_s390_vmlhf {	// GCCBuiltin SDPatternOperator Intrinsic SystemZBinaryConv SystemZBinary f
  string GCCBuiltinName = "__builtin_s390_vmlhf";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_vmlh";
}
def int_s390_vmlhh {	// GCCBuiltin SDPatternOperator Intrinsic SystemZBinaryConv SystemZBinary h
  string GCCBuiltinName = "__builtin_s390_vmlhh";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_vmlh";
}
def int_s390_vmlob {	// GCCBuiltin SDPatternOperator Intrinsic SystemZBinaryConv b
  string GCCBuiltinName = "__builtin_s390_vmlob";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_vmlo";
}
def int_s390_vmlof {	// GCCBuiltin SDPatternOperator Intrinsic SystemZBinaryConv f
  string GCCBuiltinName = "__builtin_s390_vmlof";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_vmlo";
}
def int_s390_vmloh {	// GCCBuiltin SDPatternOperator Intrinsic SystemZBinaryConv h
  string GCCBuiltinName = "__builtin_s390_vmloh";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_vmlo";
}
def int_s390_vmob {	// GCCBuiltin SDPatternOperator Intrinsic SystemZBinaryConv b
  string GCCBuiltinName = "__builtin_s390_vmob";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_vmo";
}
def int_s390_vmof {	// GCCBuiltin SDPatternOperator Intrinsic SystemZBinaryConv f
  string GCCBuiltinName = "__builtin_s390_vmof";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_vmo";
}
def int_s390_vmoh {	// GCCBuiltin SDPatternOperator Intrinsic SystemZBinaryConv h
  string GCCBuiltinName = "__builtin_s390_vmoh";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_vmo";
}
def int_s390_vpdi {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_s390_vpdi";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_v2i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_s390_vperm {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_s390_vperm";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_s390_vpklsf {	// GCCBuiltin SDPatternOperator Intrinsic SystemZBinaryConv f
  string GCCBuiltinName = "__builtin_s390_vpklsf";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_vpkls";
}
def int_s390_vpklsfs {	// SDPatternOperator Intrinsic SystemZBinaryConvCC fs
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v8i16_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_vpkls";
}
def int_s390_vpklsg {	// GCCBuiltin SDPatternOperator Intrinsic SystemZBinaryConv g
  string GCCBuiltinName = "__builtin_s390_vpklsg";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_v2i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_vpkls";
}
def int_s390_vpklsgs {	// SDPatternOperator Intrinsic SystemZBinaryConvCC gs
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v4i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_v2i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_vpkls";
}
def int_s390_vpklsh {	// GCCBuiltin SDPatternOperator Intrinsic SystemZBinaryConv h
  string GCCBuiltinName = "__builtin_s390_vpklsh";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_vpkls";
}
def int_s390_vpklshs {	// SDPatternOperator Intrinsic SystemZBinaryConvCC hs
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v16i8_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_vpkls";
}
def int_s390_vpksf {	// GCCBuiltin SDPatternOperator Intrinsic SystemZBinaryConv f
  string GCCBuiltinName = "__builtin_s390_vpksf";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_vpks";
}
def int_s390_vpksfs {	// SDPatternOperator Intrinsic SystemZBinaryConvCC fs
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v8i16_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_vpks";
}
def int_s390_vpksg {	// GCCBuiltin SDPatternOperator Intrinsic SystemZBinaryConv g
  string GCCBuiltinName = "__builtin_s390_vpksg";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_v2i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_vpks";
}
def int_s390_vpksgs {	// SDPatternOperator Intrinsic SystemZBinaryConvCC gs
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v4i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_v2i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_vpks";
}
def int_s390_vpksh {	// GCCBuiltin SDPatternOperator Intrinsic SystemZBinaryConv h
  string GCCBuiltinName = "__builtin_s390_vpksh";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_vpks";
}
def int_s390_vpkshs {	// SDPatternOperator Intrinsic SystemZBinaryConvCC hs
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v16i8_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_vpks";
}
def int_s390_vsbcbiq {	// GCCBuiltin SDPatternOperator Intrinsic SystemZTernaryConv SystemZTernary
  string GCCBuiltinName = "__builtin_s390_vsbcbiq";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_s390_vsbiq {	// GCCBuiltin SDPatternOperator Intrinsic SystemZTernaryConv SystemZTernary
  string GCCBuiltinName = "__builtin_s390_vsbiq";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_s390_vscbib {	// GCCBuiltin SDPatternOperator Intrinsic SystemZBinaryConv SystemZBinary b
  string GCCBuiltinName = "__builtin_s390_vscbib";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_vscbi";
}
def int_s390_vscbif {	// GCCBuiltin SDPatternOperator Intrinsic SystemZBinaryConv SystemZBinary f
  string GCCBuiltinName = "__builtin_s390_vscbif";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_vscbi";
}
def int_s390_vscbig {	// GCCBuiltin SDPatternOperator Intrinsic SystemZBinaryConv SystemZBinary g
  string GCCBuiltinName = "__builtin_s390_vscbig";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_v2i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_vscbi";
}
def int_s390_vscbih {	// GCCBuiltin SDPatternOperator Intrinsic SystemZBinaryConv SystemZBinary h
  string GCCBuiltinName = "__builtin_s390_vscbih";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_vscbi";
}
def int_s390_vscbiq {	// GCCBuiltin SDPatternOperator Intrinsic SystemZBinaryConv SystemZBinary
  string GCCBuiltinName = "__builtin_s390_vscbiq";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_s390_vsl {	// GCCBuiltin SDPatternOperator Intrinsic SystemZBinaryConv SystemZBinary
  string GCCBuiltinName = "__builtin_s390_vsl";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_s390_vslb {	// GCCBuiltin SDPatternOperator Intrinsic SystemZBinaryConv SystemZBinary
  string GCCBuiltinName = "__builtin_s390_vslb";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_s390_vsldb {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_s390_vsldb";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_s390_vsq {	// GCCBuiltin SDPatternOperator Intrinsic SystemZBinaryConv SystemZBinary
  string GCCBuiltinName = "__builtin_s390_vsq";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_s390_vsra {	// GCCBuiltin SDPatternOperator Intrinsic SystemZBinaryConv SystemZBinary
  string GCCBuiltinName = "__builtin_s390_vsra";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_s390_vsrab {	// GCCBuiltin SDPatternOperator Intrinsic SystemZBinaryConv SystemZBinary
  string GCCBuiltinName = "__builtin_s390_vsrab";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_s390_vsrl {	// GCCBuiltin SDPatternOperator Intrinsic SystemZBinaryConv SystemZBinary
  string GCCBuiltinName = "__builtin_s390_vsrl";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_s390_vsrlb {	// GCCBuiltin SDPatternOperator Intrinsic SystemZBinaryConv SystemZBinary
  string GCCBuiltinName = "__builtin_s390_vsrlb";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_s390_vstl {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_s390_vstl";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_i32_ty, llvm_ptr_ty];
  list<IntrinsicProperty> Properties = [IntrReadWriteArgMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_s390_vstrcb {	// GCCBuiltin SDPatternOperator Intrinsic SystemZQuaternaryInt b
  string GCCBuiltinName = "__builtin_s390_vstrcb";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty, llvm_v16i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_vstrc";
}
def int_s390_vstrcbs {	// SDPatternOperator Intrinsic SystemZQuaternaryIntCC bs
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v16i8_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty, llvm_v16i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_vstrc";
}
def int_s390_vstrcf {	// GCCBuiltin SDPatternOperator Intrinsic SystemZQuaternaryInt f
  string GCCBuiltinName = "__builtin_s390_vstrcf";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty, llvm_v4i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_vstrc";
}
def int_s390_vstrcfs {	// SDPatternOperator Intrinsic SystemZQuaternaryIntCC fs
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v4i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty, llvm_v4i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_vstrc";
}
def int_s390_vstrch {	// GCCBuiltin SDPatternOperator Intrinsic SystemZQuaternaryInt h
  string GCCBuiltinName = "__builtin_s390_vstrch";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty, llvm_v8i16_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_vstrc";
}
def int_s390_vstrchs {	// SDPatternOperator Intrinsic SystemZQuaternaryIntCC hs
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v8i16_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty, llvm_v8i16_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_vstrc";
}
def int_s390_vstrczb {	// GCCBuiltin SDPatternOperator Intrinsic SystemZQuaternaryInt b
  string GCCBuiltinName = "__builtin_s390_vstrczb";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty, llvm_v16i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_vstrcz";
}
def int_s390_vstrczbs {	// SDPatternOperator Intrinsic SystemZQuaternaryIntCC bs
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v16i8_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty, llvm_v16i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_vstrcz";
}
def int_s390_vstrczf {	// GCCBuiltin SDPatternOperator Intrinsic SystemZQuaternaryInt f
  string GCCBuiltinName = "__builtin_s390_vstrczf";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty, llvm_v4i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_vstrcz";
}
def int_s390_vstrczfs {	// SDPatternOperator Intrinsic SystemZQuaternaryIntCC fs
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v4i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty, llvm_v4i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_vstrcz";
}
def int_s390_vstrczh {	// GCCBuiltin SDPatternOperator Intrinsic SystemZQuaternaryInt h
  string GCCBuiltinName = "__builtin_s390_vstrczh";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty, llvm_v8i16_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_vstrcz";
}
def int_s390_vstrczhs {	// SDPatternOperator Intrinsic SystemZQuaternaryIntCC hs
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v8i16_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty, llvm_v8i16_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_vstrcz";
}
def int_s390_vsumb {	// GCCBuiltin SDPatternOperator Intrinsic SystemZBinaryConv
  string GCCBuiltinName = "__builtin_s390_vsumb";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_s390_vsumgf {	// GCCBuiltin SDPatternOperator Intrinsic SystemZBinaryConv
  string GCCBuiltinName = "__builtin_s390_vsumgf";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_s390_vsumgh {	// GCCBuiltin SDPatternOperator Intrinsic SystemZBinaryConv
  string GCCBuiltinName = "__builtin_s390_vsumgh";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_s390_vsumh {	// GCCBuiltin SDPatternOperator Intrinsic SystemZBinaryConv
  string GCCBuiltinName = "__builtin_s390_vsumh";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_s390_vsumqf {	// GCCBuiltin SDPatternOperator Intrinsic SystemZBinaryConv
  string GCCBuiltinName = "__builtin_s390_vsumqf";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_s390_vsumqg {	// GCCBuiltin SDPatternOperator Intrinsic SystemZBinaryConv
  string GCCBuiltinName = "__builtin_s390_vsumqg";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_v2i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_s390_vtm {	// GCCBuiltin SDPatternOperator Intrinsic SystemZBinaryConv
  string GCCBuiltinName = "__builtin_s390_vtm";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_s390_vuphb {	// GCCBuiltin SDPatternOperator Intrinsic SystemZUnaryConv b
  string GCCBuiltinName = "__builtin_s390_vuphb";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_vuph";
}
def int_s390_vuphf {	// GCCBuiltin SDPatternOperator Intrinsic SystemZUnaryConv f
  string GCCBuiltinName = "__builtin_s390_vuphf";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_vuph";
}
def int_s390_vuphh {	// GCCBuiltin SDPatternOperator Intrinsic SystemZUnaryConv h
  string GCCBuiltinName = "__builtin_s390_vuphh";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_vuph";
}
def int_s390_vuplb {	// GCCBuiltin SDPatternOperator Intrinsic SystemZUnaryConv b
  string GCCBuiltinName = "__builtin_s390_vuplb";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_vupl";
}
def int_s390_vuplf {	// GCCBuiltin SDPatternOperator Intrinsic SystemZUnaryConv f
  string GCCBuiltinName = "__builtin_s390_vuplf";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_vupl";
}
def int_s390_vuplhb {	// GCCBuiltin SDPatternOperator Intrinsic SystemZUnaryConv b
  string GCCBuiltinName = "__builtin_s390_vuplhb";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_vuplh";
}
def int_s390_vuplhf {	// GCCBuiltin SDPatternOperator Intrinsic SystemZUnaryConv f
  string GCCBuiltinName = "__builtin_s390_vuplhf";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_vuplh";
}
def int_s390_vuplhh {	// GCCBuiltin SDPatternOperator Intrinsic SystemZUnaryConv h
  string GCCBuiltinName = "__builtin_s390_vuplhh";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_vuplh";
}
def int_s390_vuplhw {	// GCCBuiltin SDPatternOperator Intrinsic SystemZUnaryConv hw
  string GCCBuiltinName = "__builtin_s390_vuplhw";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_vupl";
}
def int_s390_vupllb {	// GCCBuiltin SDPatternOperator Intrinsic SystemZUnaryConv b
  string GCCBuiltinName = "__builtin_s390_vupllb";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_vupll";
}
def int_s390_vupllf {	// GCCBuiltin SDPatternOperator Intrinsic SystemZUnaryConv f
  string GCCBuiltinName = "__builtin_s390_vupllf";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_vupll";
}
def int_s390_vupllh {	// GCCBuiltin SDPatternOperator Intrinsic SystemZUnaryConv h
  string GCCBuiltinName = "__builtin_s390_vupllh";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "s390";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = "int_s390_vupll";
}
def int_sadd_with_overflow {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_anyint_ty, llvm_i1_ty];
  list<LLVMType> ParamTypes = [anonymous_53, anonymous_54];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_setjmp {	// SDPatternOperator Intrinsic
  list<IntrinsicProperty> Intrinsic:properties = [];
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_ptr_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_siglongjmp {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoReturn];
  bit isTarget = 0;
  string NAME = ?;
}
def int_sigsetjmp {	// SDPatternOperator Intrinsic
  list<IntrinsicProperty> Intrinsic:properties = [];
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_sin {	// SDPatternOperator Intrinsic
  list<IntrinsicProperty> Intrinsic:properties = [];
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_anyfloat_ty];
  list<LLVMType> ParamTypes = [anonymous_18];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_smul_with_overflow {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_anyint_ty, llvm_i1_ty];
  list<LLVMType> ParamTypes = [anonymous_61, anonymous_62];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_sqrt {	// SDPatternOperator Intrinsic
  list<IntrinsicProperty> Intrinsic:properties = [];
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_anyfloat_ty];
  list<LLVMType> ParamTypes = [anonymous_16];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_ssub_with_overflow {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_anyint_ty, llvm_i1_ty];
  list<LLVMType> ParamTypes = [anonymous_57, anonymous_58];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_stackprotector {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_ptrptr_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_stackprotectorcheck {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_ptrptr_ty];
  list<IntrinsicProperty> Properties = [IntrReadWriteArgMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_stackrestore {	// SDPatternOperator Intrinsic GCCBuiltin
  list<IntrinsicProperty> Intrinsic:properties = [];
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_ptr_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__builtin_stack_restore";
  string NAME = ?;
}
def int_stacksave {	// SDPatternOperator Intrinsic GCCBuiltin
  list<LLVMType> Intrinsic:param_types = [];
  list<IntrinsicProperty> Intrinsic:properties = [];
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_ptr_ty];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__builtin_stack_save";
  string NAME = ?;
}
def int_trap {	// SDPatternOperator Intrinsic GCCBuiltin
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> Properties = [IntrNoReturn];
  bit isTarget = 0;
  string GCCBuiltinName = "__builtin_trap";
  string NAME = ?;
}
def int_trunc {	// SDPatternOperator Intrinsic
  list<IntrinsicProperty> Intrinsic:properties = [];
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_anyfloat_ty];
  list<LLVMType> ParamTypes = [anonymous_36];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_uadd_with_overflow {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_anyint_ty, llvm_i1_ty];
  list<LLVMType> ParamTypes = [anonymous_55, anonymous_56];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_umul_with_overflow {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_anyint_ty, llvm_i1_ty];
  list<LLVMType> ParamTypes = [anonymous_63, anonymous_64];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_usub_with_overflow {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_anyint_ty, llvm_i1_ty];
  list<LLVMType> ParamTypes = [anonymous_59, anonymous_60];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_vacopy {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.va_copy";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_ptr_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_vaend {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.va_end";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_ptr_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_var_annotation {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.var.annotation";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_ptr_ty, llvm_ptr_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_vastart {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.va_start";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_ptr_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_write_register {	// SDPatternOperator Intrinsic
  string LLVMName = "llvm.write_register";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_metadata_ty, llvm_anyint_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_3dnow_pavgusb {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pavgusb";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_x86mmx_ty];
  list<LLVMType> ParamTypes = [llvm_x86mmx_ty, llvm_x86mmx_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_3dnow_pf2id {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pf2id";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_x86mmx_ty];
  list<LLVMType> ParamTypes = [llvm_x86mmx_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_3dnow_pfacc {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pfacc";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_x86mmx_ty];
  list<LLVMType> ParamTypes = [llvm_x86mmx_ty, llvm_x86mmx_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_3dnow_pfadd {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pfadd";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_x86mmx_ty];
  list<LLVMType> ParamTypes = [llvm_x86mmx_ty, llvm_x86mmx_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_3dnow_pfcmpeq {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pfcmpeq";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_x86mmx_ty];
  list<LLVMType> ParamTypes = [llvm_x86mmx_ty, llvm_x86mmx_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_3dnow_pfcmpge {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pfcmpge";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_x86mmx_ty];
  list<LLVMType> ParamTypes = [llvm_x86mmx_ty, llvm_x86mmx_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_3dnow_pfcmpgt {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pfcmpgt";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_x86mmx_ty];
  list<LLVMType> ParamTypes = [llvm_x86mmx_ty, llvm_x86mmx_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_3dnow_pfmax {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pfmax";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_x86mmx_ty];
  list<LLVMType> ParamTypes = [llvm_x86mmx_ty, llvm_x86mmx_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_3dnow_pfmin {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pfmin";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_x86mmx_ty];
  list<LLVMType> ParamTypes = [llvm_x86mmx_ty, llvm_x86mmx_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_3dnow_pfmul {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pfmul";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_x86mmx_ty];
  list<LLVMType> ParamTypes = [llvm_x86mmx_ty, llvm_x86mmx_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_3dnow_pfrcp {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pfrcp";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_x86mmx_ty];
  list<LLVMType> ParamTypes = [llvm_x86mmx_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_3dnow_pfrcpit1 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pfrcpit1";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_x86mmx_ty];
  list<LLVMType> ParamTypes = [llvm_x86mmx_ty, llvm_x86mmx_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_3dnow_pfrcpit2 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pfrcpit2";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_x86mmx_ty];
  list<LLVMType> ParamTypes = [llvm_x86mmx_ty, llvm_x86mmx_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_3dnow_pfrsqit1 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pfrsqit1";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_x86mmx_ty];
  list<LLVMType> ParamTypes = [llvm_x86mmx_ty, llvm_x86mmx_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_3dnow_pfrsqrt {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pfrsqrt";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_x86mmx_ty];
  list<LLVMType> ParamTypes = [llvm_x86mmx_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_3dnow_pfsub {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pfsub";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_x86mmx_ty];
  list<LLVMType> ParamTypes = [llvm_x86mmx_ty, llvm_x86mmx_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_3dnow_pfsubr {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pfsubr";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_x86mmx_ty];
  list<LLVMType> ParamTypes = [llvm_x86mmx_ty, llvm_x86mmx_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_3dnow_pi2fd {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pi2fd";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_x86mmx_ty];
  list<LLVMType> ParamTypes = [llvm_x86mmx_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_3dnow_pmulhrw {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmulhrw";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_x86mmx_ty];
  list<LLVMType> ParamTypes = [llvm_x86mmx_ty, llvm_x86mmx_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_3dnowa_pf2iw {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pf2iw";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_x86mmx_ty];
  list<LLVMType> ParamTypes = [llvm_x86mmx_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_3dnowa_pfnacc {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pfnacc";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_x86mmx_ty];
  list<LLVMType> ParamTypes = [llvm_x86mmx_ty, llvm_x86mmx_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_3dnowa_pfpnacc {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pfpnacc";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_x86mmx_ty];
  list<LLVMType> ParamTypes = [llvm_x86mmx_ty, llvm_x86mmx_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_3dnowa_pi2fw {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pi2fw";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_x86mmx_ty];
  list<LLVMType> ParamTypes = [llvm_x86mmx_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_3dnowa_pswapd {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_x86mmx_ty];
  list<LLVMType> ParamTypes = [llvm_x86mmx_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_addcarry_u32 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_addcarry_u32";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i8_ty];
  list<LLVMType> ParamTypes = [llvm_i8_ty, llvm_i32_ty, llvm_i32_ty, llvm_ptr_ty];
  list<IntrinsicProperty> Properties = [IntrReadWriteArgMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_addcarry_u64 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_addcarry_u64";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i8_ty];
  list<LLVMType> ParamTypes = [llvm_i8_ty, llvm_i64_ty, llvm_i64_ty, llvm_ptr_ty];
  list<IntrinsicProperty> Properties = [IntrReadWriteArgMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_addcarryx_u32 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_addcarryx_u32";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i8_ty];
  list<LLVMType> ParamTypes = [llvm_i8_ty, llvm_i32_ty, llvm_i32_ty, llvm_ptr_ty];
  list<IntrinsicProperty> Properties = [IntrReadWriteArgMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_addcarryx_u64 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_addcarryx_u64";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i8_ty];
  list<LLVMType> ParamTypes = [llvm_i8_ty, llvm_i64_ty, llvm_i64_ty, llvm_ptr_ty];
  list<IntrinsicProperty> Properties = [IntrReadWriteArgMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_aesni_aesdec {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_aesdec128";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_v2i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_aesni_aesdeclast {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_aesdeclast128";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_v2i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_aesni_aesenc {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_aesenc128";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_v2i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_aesni_aesenclast {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_aesenclast128";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_v2i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_aesni_aesimc {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_aesimc128";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_aesni_aeskeygenassist {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_aeskeygenassist128";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx2_gather_d_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_gatherd_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_ptr_ty, llvm_v4i32_ty, llvm_v4i32_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrReadArgMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx2_gather_d_d_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_gatherd_d256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i32_ty];
  list<LLVMType> ParamTypes = [llvm_v8i32_ty, llvm_ptr_ty, llvm_v8i32_ty, llvm_v8i32_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrReadArgMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx2_gather_d_pd {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_gatherd_pd";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2f64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_ptr_ty, llvm_v4i32_ty, llvm_v2f64_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrReadArgMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx2_gather_d_pd_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_gatherd_pd256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f64_ty];
  list<LLVMType> ParamTypes = [llvm_v4f64_ty, llvm_ptr_ty, llvm_v4i32_ty, llvm_v4f64_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrReadArgMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx2_gather_d_ps {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_gatherd_ps";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_ptr_ty, llvm_v4i32_ty, llvm_v4f32_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrReadArgMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx2_gather_d_ps_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_gatherd_ps256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8f32_ty];
  list<LLVMType> ParamTypes = [llvm_v8f32_ty, llvm_ptr_ty, llvm_v8i32_ty, llvm_v8f32_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrReadArgMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx2_gather_d_q {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_gatherd_q";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_ptr_ty, llvm_v4i32_ty, llvm_v2i64_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrReadArgMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx2_gather_d_q_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_gatherd_q256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4i64_ty];
  list<LLVMType> ParamTypes = [llvm_v4i64_ty, llvm_ptr_ty, llvm_v4i32_ty, llvm_v4i64_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrReadArgMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx2_gather_q_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_gatherq_d";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_ptr_ty, llvm_v2i64_ty, llvm_v4i32_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrReadArgMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx2_gather_q_d_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_gatherq_d256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_ptr_ty, llvm_v4i64_ty, llvm_v4i32_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrReadArgMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx2_gather_q_pd {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_gatherq_pd";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2f64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_ptr_ty, llvm_v2i64_ty, llvm_v2f64_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrReadArgMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx2_gather_q_pd_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_gatherq_pd256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f64_ty];
  list<LLVMType> ParamTypes = [llvm_v4f64_ty, llvm_ptr_ty, llvm_v4i64_ty, llvm_v4f64_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrReadArgMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx2_gather_q_ps {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_gatherq_ps";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_ptr_ty, llvm_v2i64_ty, llvm_v4f32_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrReadArgMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx2_gather_q_ps_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_gatherq_ps256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_ptr_ty, llvm_v4i64_ty, llvm_v4f32_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrReadArgMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx2_gather_q_q {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_gatherq_q";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_ptr_ty, llvm_v2i64_ty, llvm_v2i64_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrReadArgMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx2_gather_q_q_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_gatherq_q256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4i64_ty];
  list<LLVMType> ParamTypes = [llvm_v4i64_ty, llvm_ptr_ty, llvm_v4i64_ty, llvm_v4i64_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrReadArgMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx2_maskload_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_maskloadd";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> Properties = [IntrReadArgMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx2_maskload_d_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_maskloadd256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i32_ty];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_v8i32_ty];
  list<IntrinsicProperty> Properties = [IntrReadArgMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx2_maskload_q {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_maskloadq";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_v2i64_ty];
  list<IntrinsicProperty> Properties = [IntrReadArgMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx2_maskload_q_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_maskloadq256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4i64_ty];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_v4i64_ty];
  list<IntrinsicProperty> Properties = [IntrReadArgMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx2_maskstore_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_maskstored";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> Properties = [IntrReadWriteArgMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx2_maskstore_d_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_maskstored256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_v8i32_ty, llvm_v8i32_ty];
  list<IntrinsicProperty> Properties = [IntrReadWriteArgMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx2_maskstore_q {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_maskstoreq";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_v2i64_ty, llvm_v2i64_ty];
  list<IntrinsicProperty> Properties = [IntrReadWriteArgMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx2_maskstore_q_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_maskstoreq256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_v4i64_ty, llvm_v4i64_ty];
  list<IntrinsicProperty> Properties = [IntrReadWriteArgMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx2_movntdqa {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_movntdqa256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4i64_ty];
  list<LLVMType> ParamTypes = [llvm_ptr_ty];
  list<IntrinsicProperty> Properties = [IntrReadMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx2_mpsadbw {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_mpsadbw256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i16_ty];
  list<LLVMType> ParamTypes = [llvm_v32i8_ty, llvm_v32i8_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx2_pabs_b {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pabsb256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v32i8_ty];
  list<LLVMType> ParamTypes = [llvm_v32i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx2_pabs_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pabsd256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i32_ty];
  list<LLVMType> ParamTypes = [llvm_v8i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx2_pabs_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pabsw256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i16_ty];
  list<LLVMType> ParamTypes = [llvm_v16i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx2_packssdw {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_packssdw256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i32_ty, llvm_v8i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx2_packsswb {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_packsswb256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v32i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i16_ty, llvm_v16i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx2_packusdw {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_packusdw256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i32_ty, llvm_v8i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx2_packuswb {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_packuswb256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v32i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i16_ty, llvm_v16i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx2_padds_b {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_paddsb256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v32i8_ty];
  list<LLVMType> ParamTypes = [llvm_v32i8_ty, llvm_v32i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx2_padds_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_paddsw256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i16_ty];
  list<LLVMType> ParamTypes = [llvm_v16i16_ty, llvm_v16i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx2_paddus_b {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_paddusb256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v32i8_ty];
  list<LLVMType> ParamTypes = [llvm_v32i8_ty, llvm_v32i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx2_paddus_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_paddusw256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i16_ty];
  list<LLVMType> ParamTypes = [llvm_v16i16_ty, llvm_v16i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx2_pavg_b {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pavgb256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v32i8_ty];
  list<LLVMType> ParamTypes = [llvm_v32i8_ty, llvm_v32i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx2_pavg_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pavgw256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i16_ty];
  list<LLVMType> ParamTypes = [llvm_v16i16_ty, llvm_v16i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx2_pblendvb {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pblendvb256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v32i8_ty];
  list<LLVMType> ParamTypes = [llvm_v32i8_ty, llvm_v32i8_ty, llvm_v32i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx2_pbroadcastb_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pbroadcastb128";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx2_pbroadcastb_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pbroadcastb256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v32i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx2_pbroadcastd_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pbroadcastd128";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx2_pbroadcastd_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pbroadcastd256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx2_pbroadcastq_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pbroadcastq128";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx2_pbroadcastq_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pbroadcastq256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx2_pbroadcastw_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pbroadcastw128";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx2_pbroadcastw_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pbroadcastw256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx2_permd {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_permvarsi256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i32_ty];
  list<LLVMType> ParamTypes = [llvm_v8i32_ty, llvm_v8i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx2_permps {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_permvarsf256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8f32_ty];
  list<LLVMType> ParamTypes = [llvm_v8f32_ty, llvm_v8f32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx2_phadd_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_phaddd256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i32_ty];
  list<LLVMType> ParamTypes = [llvm_v8i32_ty, llvm_v8i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx2_phadd_sw {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_phaddsw256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i16_ty];
  list<LLVMType> ParamTypes = [llvm_v16i16_ty, llvm_v16i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx2_phadd_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_phaddw256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i16_ty];
  list<LLVMType> ParamTypes = [llvm_v16i16_ty, llvm_v16i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx2_phsub_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_phsubd256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i32_ty];
  list<LLVMType> ParamTypes = [llvm_v8i32_ty, llvm_v8i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx2_phsub_sw {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_phsubsw256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i16_ty];
  list<LLVMType> ParamTypes = [llvm_v16i16_ty, llvm_v16i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx2_phsub_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_phsubw256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i16_ty];
  list<LLVMType> ParamTypes = [llvm_v16i16_ty, llvm_v16i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx2_pmadd_ub_sw {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmaddubsw256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i16_ty];
  list<LLVMType> ParamTypes = [llvm_v32i8_ty, llvm_v32i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx2_pmadd_wd {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmaddwd256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i16_ty, llvm_v16i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx2_pmaxs_b {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmaxsb256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v32i8_ty];
  list<LLVMType> ParamTypes = [llvm_v32i8_ty, llvm_v32i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx2_pmaxs_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmaxsd256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i32_ty];
  list<LLVMType> ParamTypes = [llvm_v8i32_ty, llvm_v8i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx2_pmaxs_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmaxsw256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i16_ty];
  list<LLVMType> ParamTypes = [llvm_v16i16_ty, llvm_v16i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx2_pmaxu_b {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmaxub256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v32i8_ty];
  list<LLVMType> ParamTypes = [llvm_v32i8_ty, llvm_v32i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx2_pmaxu_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmaxud256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i32_ty];
  list<LLVMType> ParamTypes = [llvm_v8i32_ty, llvm_v8i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx2_pmaxu_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmaxuw256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i16_ty];
  list<LLVMType> ParamTypes = [llvm_v16i16_ty, llvm_v16i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx2_pmins_b {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pminsb256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v32i8_ty];
  list<LLVMType> ParamTypes = [llvm_v32i8_ty, llvm_v32i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx2_pmins_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pminsd256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i32_ty];
  list<LLVMType> ParamTypes = [llvm_v8i32_ty, llvm_v8i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx2_pmins_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pminsw256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i16_ty];
  list<LLVMType> ParamTypes = [llvm_v16i16_ty, llvm_v16i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx2_pminu_b {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pminub256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v32i8_ty];
  list<LLVMType> ParamTypes = [llvm_v32i8_ty, llvm_v32i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx2_pminu_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pminud256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i32_ty];
  list<LLVMType> ParamTypes = [llvm_v8i32_ty, llvm_v8i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx2_pminu_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pminuw256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i16_ty];
  list<LLVMType> ParamTypes = [llvm_v16i16_ty, llvm_v16i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx2_pmovmskb {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmovmskb256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_v32i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx2_pmovsxbd {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmovsxbd256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx2_pmovsxbq {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmovsxbq256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4i64_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx2_pmovsxbw {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmovsxbw256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i16_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx2_pmovsxdq {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmovsxdq256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4i64_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx2_pmovsxwd {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmovsxwd256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i32_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx2_pmovsxwq {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmovsxwq256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4i64_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx2_pmovzxbd {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmovzxbd256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx2_pmovzxbq {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmovzxbq256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4i64_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx2_pmovzxbw {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmovzxbw256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i16_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx2_pmovzxdq {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmovzxdq256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4i64_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx2_pmovzxwd {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmovzxwd256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i32_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx2_pmovzxwq {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmovzxwq256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4i64_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx2_pmul_dq {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmuldq256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4i64_ty];
  list<LLVMType> ParamTypes = [llvm_v8i32_ty, llvm_v8i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx2_pmul_hr_sw {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmulhrsw256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i16_ty];
  list<LLVMType> ParamTypes = [llvm_v16i16_ty, llvm_v16i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx2_pmulh_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmulhw256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i16_ty];
  list<LLVMType> ParamTypes = [llvm_v16i16_ty, llvm_v16i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx2_pmulhu_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmulhuw256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i16_ty];
  list<LLVMType> ParamTypes = [llvm_v16i16_ty, llvm_v16i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx2_pmulu_dq {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmuludq256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4i64_ty];
  list<LLVMType> ParamTypes = [llvm_v8i32_ty, llvm_v8i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx2_psad_bw {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_psadbw256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4i64_ty];
  list<LLVMType> ParamTypes = [llvm_v32i8_ty, llvm_v32i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx2_pshuf_b {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pshufb256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v32i8_ty];
  list<LLVMType> ParamTypes = [llvm_v32i8_ty, llvm_v32i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx2_psign_b {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_psignb256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v32i8_ty];
  list<LLVMType> ParamTypes = [llvm_v32i8_ty, llvm_v32i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx2_psign_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_psignd256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i32_ty];
  list<LLVMType> ParamTypes = [llvm_v8i32_ty, llvm_v8i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx2_psign_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_psignw256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i16_ty];
  list<LLVMType> ParamTypes = [llvm_v16i16_ty, llvm_v16i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx2_psll_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pslld256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i32_ty];
  list<LLVMType> ParamTypes = [llvm_v8i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx2_psll_q {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_psllq256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4i64_ty];
  list<LLVMType> ParamTypes = [llvm_v4i64_ty, llvm_v2i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx2_psll_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_psllw256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i16_ty];
  list<LLVMType> ParamTypes = [llvm_v16i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx2_pslli_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pslldi256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i32_ty];
  list<LLVMType> ParamTypes = [llvm_v8i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx2_pslli_q {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_psllqi256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4i64_ty];
  list<LLVMType> ParamTypes = [llvm_v4i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx2_pslli_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_psllwi256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i16_ty];
  list<LLVMType> ParamTypes = [llvm_v16i16_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx2_psllv_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_psllv4si";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx2_psllv_d_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_psllv8si";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i32_ty];
  list<LLVMType> ParamTypes = [llvm_v8i32_ty, llvm_v8i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx2_psllv_q {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_psllv2di";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_v2i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx2_psllv_q_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_psllv4di";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4i64_ty];
  list<LLVMType> ParamTypes = [llvm_v4i64_ty, llvm_v4i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx2_psra_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_psrad256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i32_ty];
  list<LLVMType> ParamTypes = [llvm_v8i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx2_psra_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_psraw256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i16_ty];
  list<LLVMType> ParamTypes = [llvm_v16i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx2_psrai_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_psradi256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i32_ty];
  list<LLVMType> ParamTypes = [llvm_v8i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx2_psrai_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_psrawi256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i16_ty];
  list<LLVMType> ParamTypes = [llvm_v16i16_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx2_psrav_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_psrav4si";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx2_psrav_d_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_psrav8si";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i32_ty];
  list<LLVMType> ParamTypes = [llvm_v8i32_ty, llvm_v8i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx2_psrl_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_psrld256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i32_ty];
  list<LLVMType> ParamTypes = [llvm_v8i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx2_psrl_q {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_psrlq256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4i64_ty];
  list<LLVMType> ParamTypes = [llvm_v4i64_ty, llvm_v2i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx2_psrl_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_psrlw256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i16_ty];
  list<LLVMType> ParamTypes = [llvm_v16i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx2_psrli_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_psrldi256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i32_ty];
  list<LLVMType> ParamTypes = [llvm_v8i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx2_psrli_q {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_psrlqi256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4i64_ty];
  list<LLVMType> ParamTypes = [llvm_v4i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx2_psrli_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_psrlwi256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i16_ty];
  list<LLVMType> ParamTypes = [llvm_v16i16_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx2_psrlv_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_psrlv4si";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx2_psrlv_d_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_psrlv8si";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i32_ty];
  list<LLVMType> ParamTypes = [llvm_v8i32_ty, llvm_v8i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx2_psrlv_q {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_psrlv2di";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_v2i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx2_psrlv_q_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_psrlv4di";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4i64_ty];
  list<LLVMType> ParamTypes = [llvm_v4i64_ty, llvm_v4i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx2_psubs_b {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_psubsb256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v32i8_ty];
  list<LLVMType> ParamTypes = [llvm_v32i8_ty, llvm_v32i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx2_psubs_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_psubsw256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i16_ty];
  list<LLVMType> ParamTypes = [llvm_v16i16_ty, llvm_v16i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx2_psubus_b {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_psubusb256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v32i8_ty];
  list<LLVMType> ParamTypes = [llvm_v32i8_ty, llvm_v32i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx2_psubus_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_psubusw256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i16_ty];
  list<LLVMType> ParamTypes = [llvm_v16i16_ty, llvm_v16i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx2_vbroadcast_sd_pd_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vbroadcastsd_pd256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx2_vbroadcast_ss_ps {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vbroadcastss_ps";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx2_vbroadcast_ss_ps_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vbroadcastss_ps256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8f32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx2_vperm2i128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_permti256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4i64_ty];
  list<LLVMType> ParamTypes = [llvm_v4i64_ty, llvm_v4i64_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_cvtsd2usi {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_cvtsd2usi";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_cvtsd2usi64 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_cvtsd2usi64";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_cvtsi2sd32 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_cvtsi2sd32";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2f64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_cvtsi2sd64 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_cvtsi2sd64";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2f64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_cvtsi2ss32 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_cvtsi2ss32";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_cvtsi2ss64 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_cvtsi2ss64";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_cvtss2usi {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_cvtss2usi";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_cvtss2usi64 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_cvtss2usi64";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_cvttsd2usi {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_cvttsd2usi";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_cvttsd2usi64 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_cvttsd2usi64";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_cvttss2usi {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_cvttss2usi";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_cvttss2usi64 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_cvttss2usi64";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_cvtusi2sd {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_cvtusi2sd32";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2f64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_cvtusi2ss {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_cvtusi2ss32";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_cvtusi642sd {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_cvtusi2sd64";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2f64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_cvtusi642ss {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_cvtusi2ss64";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_exp2_pd {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_exp2pd_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8f64_ty];
  list<LLVMType> ParamTypes = [llvm_v8f64_ty, llvm_v8f64_ty, llvm_i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_exp2_ps {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_exp2ps_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16f32_ty];
  list<LLVMType> ParamTypes = [llvm_v16f32_ty, llvm_v16f32_ty, llvm_i16_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_gather3div2_df {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_gather3div2df";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2f64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_ptr_ty, llvm_v2i64_ty, llvm_i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrReadArgMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_gather3div2_di {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_gather3div2di";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_ptr_ty, llvm_v2i64_ty, llvm_i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrReadArgMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_gather3div4_df {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_gather3div4df";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f64_ty];
  list<LLVMType> ParamTypes = [llvm_v4f64_ty, llvm_ptr_ty, llvm_v4i64_ty, llvm_i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrReadArgMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_gather3div4_di {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_gather3div4di";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i64_ty, llvm_ptr_ty, llvm_v4i64_ty, llvm_i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrReadArgMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_gather3div4_sf {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_gather3div4sf";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_ptr_ty, llvm_v2i64_ty, llvm_i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrReadArgMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_gather3div4_si {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_gather3div4si";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_ptr_ty, llvm_v2i64_ty, llvm_i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrReadArgMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_gather3div8_sf {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_gather3div8sf";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_ptr_ty, llvm_v4i64_ty, llvm_i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrReadArgMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_gather3div8_si {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_gather3div8si";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_ptr_ty, llvm_v4i64_ty, llvm_i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrReadArgMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_gather3siv2_df {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_gather3siv2df";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2f64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_ptr_ty, llvm_v4i32_ty, llvm_i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrReadArgMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_gather3siv2_di {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_gather3siv2di";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_ptr_ty, llvm_v4i32_ty, llvm_i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrReadArgMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_gather3siv4_df {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_gather3siv4df";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f64_ty];
  list<LLVMType> ParamTypes = [llvm_v4f64_ty, llvm_ptr_ty, llvm_v4i32_ty, llvm_i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrReadArgMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_gather3siv4_di {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_gather3siv4di";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i64_ty, llvm_ptr_ty, llvm_v4i32_ty, llvm_i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrReadArgMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_gather3siv4_sf {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_gather3siv4sf";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_ptr_ty, llvm_v4i32_ty, llvm_i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrReadArgMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_gather3siv4_si {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_gather3siv4si";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_ptr_ty, llvm_v4i32_ty, llvm_i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrReadArgMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_gather3siv8_sf {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_gather3siv8sf";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8f32_ty];
  list<LLVMType> ParamTypes = [llvm_v8f32_ty, llvm_ptr_ty, llvm_v8i32_ty, llvm_i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrReadArgMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_gather3siv8_si {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_gather3siv8si";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i32_ty];
  list<LLVMType> ParamTypes = [llvm_v8i32_ty, llvm_ptr_ty, llvm_v8i32_ty, llvm_i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrReadArgMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_gather_dpd_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_gathersiv8df";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8f64_ty];
  list<LLVMType> ParamTypes = [llvm_v8f64_ty, llvm_ptr_ty, llvm_v8i32_ty, llvm_i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrReadArgMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_gather_dpi_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_gathersiv16si";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i32_ty, llvm_ptr_ty, llvm_v16i32_ty, llvm_i16_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrReadArgMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_gather_dpq_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_gathersiv8di";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i64_ty];
  list<LLVMType> ParamTypes = [llvm_v8i64_ty, llvm_ptr_ty, llvm_v8i32_ty, llvm_i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrReadArgMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_gather_dps_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_gathersiv16sf";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16f32_ty];
  list<LLVMType> ParamTypes = [llvm_v16f32_ty, llvm_ptr_ty, llvm_v16i32_ty, llvm_i16_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrReadArgMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_gather_qpd_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_gatherdiv8df";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8f64_ty];
  list<LLVMType> ParamTypes = [llvm_v8f64_ty, llvm_ptr_ty, llvm_v8i64_ty, llvm_i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrReadArgMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_gather_qpi_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_gatherdiv16si";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i32_ty];
  list<LLVMType> ParamTypes = [llvm_v8i32_ty, llvm_ptr_ty, llvm_v8i64_ty, llvm_i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrReadArgMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_gather_qpq_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_gatherdiv8di";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i64_ty];
  list<LLVMType> ParamTypes = [llvm_v8i64_ty, llvm_ptr_ty, llvm_v8i64_ty, llvm_i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrReadArgMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_gather_qps_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_gatherdiv16sf";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8f32_ty];
  list<LLVMType> ParamTypes = [llvm_v8f32_ty, llvm_ptr_ty, llvm_v8i64_ty, llvm_i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrReadArgMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_gatherpf_dpd_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_gatherpfdpd";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i8_ty, llvm_v8i32_ty, llvm_ptr_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrReadWriteArgMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_gatherpf_dps_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_gatherpfdps";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i16_ty, llvm_v16i32_ty, llvm_ptr_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrReadWriteArgMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_gatherpf_qpd_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_gatherpfqpd";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i8_ty, llvm_v8i64_ty, llvm_ptr_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrReadWriteArgMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_gatherpf_qps_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_gatherpfqps";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i8_ty, llvm_v8i64_ty, llvm_ptr_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrReadWriteArgMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_kand_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_kandhi";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i16_ty];
  list<LLVMType> ParamTypes = [llvm_i16_ty, llvm_i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_kandn_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_kandnhi";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i16_ty];
  list<LLVMType> ParamTypes = [llvm_i16_ty, llvm_i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_knot_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_knothi";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i16_ty];
  list<LLVMType> ParamTypes = [llvm_i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_kor_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_korhi";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i16_ty];
  list<LLVMType> ParamTypes = [llvm_i16_ty, llvm_i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_kortestc_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_kortestchi";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i16_ty, llvm_i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_kortestz_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_kortestzhi";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i16_ty, llvm_i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_kunpck_bw {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_kunpckhi";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i16_ty];
  list<LLVMType> ParamTypes = [llvm_i16_ty, llvm_i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_kxnor_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_kxnorhi";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i16_ty];
  list<LLVMType> ParamTypes = [llvm_i16_ty, llvm_i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_kxor_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_kxorhi";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i16_ty];
  list<LLVMType> ParamTypes = [llvm_i16_ty, llvm_i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask3_vfmadd_pd_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vfmaddpd128_mask3";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2f64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_v2f64_ty, llvm_v2f64_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask3_vfmadd_pd_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vfmaddpd256_mask3";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f64_ty];
  list<LLVMType> ParamTypes = [llvm_v4f64_ty, llvm_v4f64_ty, llvm_v4f64_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask3_vfmadd_pd_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vfmaddpd512_mask3";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8f64_ty];
  list<LLVMType> ParamTypes = [llvm_v8f64_ty, llvm_v8f64_ty, llvm_v8f64_ty, llvm_i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask3_vfmadd_ps_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vfmaddps128_mask3";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_v4f32_ty, llvm_v4f32_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask3_vfmadd_ps_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vfmaddps256_mask3";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8f32_ty];
  list<LLVMType> ParamTypes = [llvm_v8f32_ty, llvm_v8f32_ty, llvm_v8f32_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask3_vfmadd_ps_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vfmaddps512_mask3";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16f32_ty];
  list<LLVMType> ParamTypes = [llvm_v16f32_ty, llvm_v16f32_ty, llvm_v16f32_ty, llvm_i16_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask3_vfmaddsub_pd_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vfmaddsubpd128_mask3";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2f64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_v2f64_ty, llvm_v2f64_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask3_vfmaddsub_pd_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vfmaddsubpd256_mask3";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f64_ty];
  list<LLVMType> ParamTypes = [llvm_v4f64_ty, llvm_v4f64_ty, llvm_v4f64_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask3_vfmaddsub_pd_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vfmaddsubpd512_mask3";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8f64_ty];
  list<LLVMType> ParamTypes = [llvm_v8f64_ty, llvm_v8f64_ty, llvm_v8f64_ty, llvm_i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask3_vfmaddsub_ps_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vfmaddsubps128_mask3";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_v4f32_ty, llvm_v4f32_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask3_vfmaddsub_ps_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vfmaddsubps256_mask3";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8f32_ty];
  list<LLVMType> ParamTypes = [llvm_v8f32_ty, llvm_v8f32_ty, llvm_v8f32_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask3_vfmaddsub_ps_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vfmaddsubps512_mask3";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16f32_ty];
  list<LLVMType> ParamTypes = [llvm_v16f32_ty, llvm_v16f32_ty, llvm_v16f32_ty, llvm_i16_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask3_vfmsub_pd_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vfmsubpd128_mask3";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2f64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_v2f64_ty, llvm_v2f64_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask3_vfmsub_pd_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vfmsubpd256_mask3";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f64_ty];
  list<LLVMType> ParamTypes = [llvm_v4f64_ty, llvm_v4f64_ty, llvm_v4f64_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask3_vfmsub_pd_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vfmsubpd512_mask3";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8f64_ty];
  list<LLVMType> ParamTypes = [llvm_v8f64_ty, llvm_v8f64_ty, llvm_v8f64_ty, llvm_i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask3_vfmsub_ps_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vfmsubps128_mask3";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_v4f32_ty, llvm_v4f32_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask3_vfmsub_ps_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vfmsubps256_mask3";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8f32_ty];
  list<LLVMType> ParamTypes = [llvm_v8f32_ty, llvm_v8f32_ty, llvm_v8f32_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask3_vfmsub_ps_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vfmsubps512_mask3";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16f32_ty];
  list<LLVMType> ParamTypes = [llvm_v16f32_ty, llvm_v16f32_ty, llvm_v16f32_ty, llvm_i16_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask3_vfmsubadd_pd_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vfmsubaddpd128_mask3";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2f64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_v2f64_ty, llvm_v2f64_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask3_vfmsubadd_pd_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vfmsubaddpd256_mask3";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f64_ty];
  list<LLVMType> ParamTypes = [llvm_v4f64_ty, llvm_v4f64_ty, llvm_v4f64_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask3_vfmsubadd_pd_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vfmsubaddpd512_mask3";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8f64_ty];
  list<LLVMType> ParamTypes = [llvm_v8f64_ty, llvm_v8f64_ty, llvm_v8f64_ty, llvm_i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask3_vfmsubadd_ps_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vfmsubaddps128_mask3";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_v4f32_ty, llvm_v4f32_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask3_vfmsubadd_ps_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vfmsubaddps256_mask3";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8f32_ty];
  list<LLVMType> ParamTypes = [llvm_v8f32_ty, llvm_v8f32_ty, llvm_v8f32_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask3_vfmsubadd_ps_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vfmsubaddps512_mask3";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16f32_ty];
  list<LLVMType> ParamTypes = [llvm_v16f32_ty, llvm_v16f32_ty, llvm_v16f32_ty, llvm_i16_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask3_vfnmsub_pd_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vfnmsubpd128_mask3";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2f64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_v2f64_ty, llvm_v2f64_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask3_vfnmsub_pd_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vfnmsubpd256_mask3";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f64_ty];
  list<LLVMType> ParamTypes = [llvm_v4f64_ty, llvm_v4f64_ty, llvm_v4f64_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask3_vfnmsub_pd_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vfnmsubpd512_mask3";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8f64_ty];
  list<LLVMType> ParamTypes = [llvm_v8f64_ty, llvm_v8f64_ty, llvm_v8f64_ty, llvm_i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask3_vfnmsub_ps_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vfnmsubps128_mask3";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_v4f32_ty, llvm_v4f32_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask3_vfnmsub_ps_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vfnmsubps256_mask3";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8f32_ty];
  list<LLVMType> ParamTypes = [llvm_v8f32_ty, llvm_v8f32_ty, llvm_v8f32_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask3_vfnmsub_ps_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vfnmsubps512_mask3";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16f32_ty];
  list<LLVMType> ParamTypes = [llvm_v16f32_ty, llvm_v16f32_ty, llvm_v16f32_ty, llvm_i16_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_add_pd_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_addpd128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2f64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_v2f64_ty, llvm_v2f64_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_add_pd_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_addpd256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f64_ty];
  list<LLVMType> ParamTypes = [llvm_v4f64_ty, llvm_v4f64_ty, llvm_v4f64_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_add_pd_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_addpd512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8f64_ty];
  list<LLVMType> ParamTypes = [llvm_v8f64_ty, llvm_v8f64_ty, llvm_v8f64_ty, llvm_i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_add_ps_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_addps128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_v4f32_ty, llvm_v4f32_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_add_ps_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_addps256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8f32_ty];
  list<LLVMType> ParamTypes = [llvm_v8f32_ty, llvm_v8f32_ty, llvm_v8f32_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_add_ps_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_addps512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16f32_ty];
  list<LLVMType> ParamTypes = [llvm_v16f32_ty, llvm_v16f32_ty, llvm_v16f32_ty, llvm_i16_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_add_sd_round {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_addsd_round";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2f64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_v2f64_ty, llvm_v2f64_ty, llvm_i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_add_ss_round {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_addss_round";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_v4f32_ty, llvm_v4f32_ty, llvm_i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_and_pd_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_andpd128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2f64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_v2f64_ty, llvm_v2f64_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_and_pd_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_andpd256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f64_ty];
  list<LLVMType> ParamTypes = [llvm_v4f64_ty, llvm_v4f64_ty, llvm_v4f64_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_and_pd_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_andpd512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8f64_ty];
  list<LLVMType> ParamTypes = [llvm_v8f64_ty, llvm_v8f64_ty, llvm_v8f64_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_and_ps_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_andps128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_v4f32_ty, llvm_v4f32_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_and_ps_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_andps256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8f32_ty];
  list<LLVMType> ParamTypes = [llvm_v8f32_ty, llvm_v8f32_ty, llvm_v8f32_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_and_ps_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_andps512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16f32_ty];
  list<LLVMType> ParamTypes = [llvm_v16f32_ty, llvm_v16f32_ty, llvm_v16f32_ty, llvm_i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_andn_pd_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_andnpd128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2f64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_v2f64_ty, llvm_v2f64_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_andn_pd_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_andnpd256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f64_ty];
  list<LLVMType> ParamTypes = [llvm_v4f64_ty, llvm_v4f64_ty, llvm_v4f64_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_andn_pd_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_andnpd512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8f64_ty];
  list<LLVMType> ParamTypes = [llvm_v8f64_ty, llvm_v8f64_ty, llvm_v8f64_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_andn_ps_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_andnps128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_v4f32_ty, llvm_v4f32_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_andn_ps_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_andnps256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8f32_ty];
  list<LLVMType> ParamTypes = [llvm_v8f32_ty, llvm_v8f32_ty, llvm_v8f32_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_andn_ps_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_andnps512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16f32_ty];
  list<LLVMType> ParamTypes = [llvm_v16f32_ty, llvm_v16f32_ty, llvm_v16f32_ty, llvm_i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_blend_b_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_blendmb_128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty, llvm_i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_blend_b_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_blendmb_256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v32i8_ty];
  list<LLVMType> ParamTypes = [llvm_v32i8_ty, llvm_v32i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_blend_b_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_blendmb_512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v64i8_ty];
  list<LLVMType> ParamTypes = [llvm_v64i8_ty, llvm_v64i8_ty, llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_blend_d_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_blendmd_128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_blend_d_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_blendmd_256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i32_ty];
  list<LLVMType> ParamTypes = [llvm_v8i32_ty, llvm_v8i32_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_blend_d_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_blendmd_512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i32_ty, llvm_v16i32_ty, llvm_i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_blend_pd_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_blendmpd_128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2f64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_v2f64_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_blend_pd_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_blendmpd_256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f64_ty];
  list<LLVMType> ParamTypes = [llvm_v4f64_ty, llvm_v4f64_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_blend_pd_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_blendmpd_512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8f64_ty];
  list<LLVMType> ParamTypes = [llvm_v8f64_ty, llvm_v8f64_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_blend_ps_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_blendmps_128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_v4f32_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_blend_ps_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_blendmps_256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8f32_ty];
  list<LLVMType> ParamTypes = [llvm_v8f32_ty, llvm_v8f32_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_blend_ps_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_blendmps_512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16f32_ty];
  list<LLVMType> ParamTypes = [llvm_v16f32_ty, llvm_v16f32_ty, llvm_i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_blend_q_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_blendmq_128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_v2i64_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_blend_q_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_blendmq_256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4i64_ty];
  list<LLVMType> ParamTypes = [llvm_v4i64_ty, llvm_v4i64_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_blend_q_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_blendmq_512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i64_ty];
  list<LLVMType> ParamTypes = [llvm_v8i64_ty, llvm_v8i64_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_blend_w_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_blendmw_128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_blend_w_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_blendmw_256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i16_ty];
  list<LLVMType> ParamTypes = [llvm_v16i16_ty, llvm_v16i16_ty, llvm_i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_blend_w_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_blendmw_512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v32i16_ty];
  list<LLVMType> ParamTypes = [llvm_v32i16_ty, llvm_v32i16_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_cmp_b_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_cmpb128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i16_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty, llvm_i32_ty, llvm_i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_cmp_b_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_cmpb256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_v32i8_ty, llvm_v32i8_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_cmp_b_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_cmpb512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_v64i8_ty, llvm_v64i8_ty, llvm_i32_ty, llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_cmp_d_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_cmpd128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i8_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty, llvm_i32_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_cmp_d_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_cmpd256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i8_ty];
  list<LLVMType> ParamTypes = [llvm_v8i32_ty, llvm_v8i32_ty, llvm_i32_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_cmp_d_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_cmpd512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i16_ty];
  list<LLVMType> ParamTypes = [llvm_v16i32_ty, llvm_v16i32_ty, llvm_i32_ty, llvm_i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_cmp_pd_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_cmppd128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i8_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_v2f64_ty, llvm_i32_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_cmp_pd_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_cmppd256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i8_ty];
  list<LLVMType> ParamTypes = [llvm_v4f64_ty, llvm_v4f64_ty, llvm_i32_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_cmp_pd_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_cmppd512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i8_ty];
  list<LLVMType> ParamTypes = [llvm_v8f64_ty, llvm_v8f64_ty, llvm_i32_ty, llvm_i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_cmp_ps_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_cmpps128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i8_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_v4f32_ty, llvm_i32_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_cmp_ps_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_cmpps256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i8_ty];
  list<LLVMType> ParamTypes = [llvm_v8f32_ty, llvm_v8f32_ty, llvm_i32_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_cmp_ps_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_cmpps512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i16_ty];
  list<LLVMType> ParamTypes = [llvm_v16f32_ty, llvm_v16f32_ty, llvm_i32_ty, llvm_i16_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_cmp_q_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_cmpq128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i8_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_v2i64_ty, llvm_i32_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_cmp_q_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_cmpq256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i8_ty];
  list<LLVMType> ParamTypes = [llvm_v4i64_ty, llvm_v4i64_ty, llvm_i32_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_cmp_q_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_cmpq512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i8_ty];
  list<LLVMType> ParamTypes = [llvm_v8i64_ty, llvm_v8i64_ty, llvm_i32_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_cmp_w_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_cmpw128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i8_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty, llvm_i32_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_cmp_w_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_cmpw256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i16_ty];
  list<LLVMType> ParamTypes = [llvm_v16i16_ty, llvm_v16i16_ty, llvm_i32_ty, llvm_i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_cmp_w_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_cmpw512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_v32i16_ty, llvm_v32i16_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_compress_d_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_compresssi128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_compress_d_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_compresssi256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i32_ty];
  list<LLVMType> ParamTypes = [llvm_v8i32_ty, llvm_v8i32_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_compress_d_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_compresssi512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i32_ty, llvm_v16i32_ty, llvm_i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_compress_pd_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_compressdf128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2f64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_v2f64_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_compress_pd_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_compressdf256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f64_ty];
  list<LLVMType> ParamTypes = [llvm_v4f64_ty, llvm_v4f64_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_compress_pd_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_compressdf512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8f64_ty];
  list<LLVMType> ParamTypes = [llvm_v8f64_ty, llvm_v8f64_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_compress_ps_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_compresssf128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_v4f32_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_compress_ps_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_compresssf256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8f32_ty];
  list<LLVMType> ParamTypes = [llvm_v8f32_ty, llvm_v8f32_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_compress_ps_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_compresssf512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16f32_ty];
  list<LLVMType> ParamTypes = [llvm_v16f32_ty, llvm_v16f32_ty, llvm_i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_compress_q_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_compressdi128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_v2i64_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_compress_q_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_compressdi256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4i64_ty];
  list<LLVMType> ParamTypes = [llvm_v4i64_ty, llvm_v4i64_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_compress_q_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_compressdi512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i64_ty];
  list<LLVMType> ParamTypes = [llvm_v8i64_ty, llvm_v8i64_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_compress_store_d_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_compressstoresi128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_v4i32_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrReadWriteArgMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_compress_store_d_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_compressstoresi256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_v8i32_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrReadWriteArgMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_compress_store_d_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_compressstoresi512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_v16i32_ty, llvm_i16_ty];
  list<IntrinsicProperty> Properties = [IntrReadWriteArgMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_compress_store_pd_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_compressstoredf128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_v2f64_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrReadWriteArgMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_compress_store_pd_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_compressstoredf256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_v4f64_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrReadWriteArgMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_compress_store_pd_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_compressstoredf512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_v8f64_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrReadWriteArgMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_compress_store_ps_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_compressstoresf128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_v4f32_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrReadWriteArgMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_compress_store_ps_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_compressstoresf256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_v8f32_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrReadWriteArgMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_compress_store_ps_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_compressstoresf512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_v16f32_ty, llvm_i16_ty];
  list<IntrinsicProperty> Properties = [IntrReadWriteArgMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_compress_store_q_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_compressstoredi128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_v2i64_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrReadWriteArgMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_compress_store_q_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_compressstoredi256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_v4i64_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrReadWriteArgMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_compress_store_q_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_compressstoredi512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_v8i64_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrReadWriteArgMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_conflict_d_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vpconflictsi_512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i32_ty, llvm_v16i32_ty, llvm_i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_conflict_q_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vpconflictdi_512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i64_ty];
  list<LLVMType> ParamTypes = [llvm_v8i64_ty, llvm_v8i64_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_cvtdq2pd_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_cvtdq2pd512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8f64_ty];
  list<LLVMType> ParamTypes = [llvm_v8i32_ty, llvm_v8f64_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_cvtdq2ps_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_cvtdq2ps512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16f32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i32_ty, llvm_v16f32_ty, llvm_i16_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_cvtpd2dq_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_cvtpd2dq512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i32_ty];
  list<LLVMType> ParamTypes = [llvm_v8f64_ty, llvm_v8i32_ty, llvm_i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_cvtpd2ps_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_cvtpd2ps512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8f32_ty];
  list<LLVMType> ParamTypes = [llvm_v8f64_ty, llvm_v8f32_ty, llvm_i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_cvtpd2udq_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_cvtpd2udq512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i32_ty];
  list<LLVMType> ParamTypes = [llvm_v8f64_ty, llvm_v8i32_ty, llvm_i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_cvtps2dq_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_cvtps2dq512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16f32_ty, llvm_v16i32_ty, llvm_i16_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_cvtps2udq_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_cvtps2udq512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16f32_ty, llvm_v16i32_ty, llvm_i16_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_cvttpd2dq_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_cvttpd2dq512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i32_ty];
  list<LLVMType> ParamTypes = [llvm_v8f64_ty, llvm_v8i32_ty, llvm_i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_cvttpd2udq_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_cvttpd2udq512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i32_ty];
  list<LLVMType> ParamTypes = [llvm_v8f64_ty, llvm_v8i32_ty, llvm_i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_cvttps2dq_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_cvttps2dq512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16f32_ty, llvm_v16i32_ty, llvm_i16_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_cvttps2udq_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_cvttps2udq512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16f32_ty, llvm_v16i32_ty, llvm_i16_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_cvtudq2pd_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_cvtudq2pd512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8f64_ty];
  list<LLVMType> ParamTypes = [llvm_v8i32_ty, llvm_v8f64_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_cvtudq2ps_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_cvtudq2ps512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16f32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i32_ty, llvm_v16f32_ty, llvm_i16_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_div_pd_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_divpd_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2f64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_v2f64_ty, llvm_v2f64_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_div_pd_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_divpd256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f64_ty];
  list<LLVMType> ParamTypes = [llvm_v4f64_ty, llvm_v4f64_ty, llvm_v4f64_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_div_pd_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_divpd512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8f64_ty];
  list<LLVMType> ParamTypes = [llvm_v8f64_ty, llvm_v8f64_ty, llvm_v8f64_ty, llvm_i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_div_ps_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_divps_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_v4f32_ty, llvm_v4f32_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_div_ps_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_divps256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8f32_ty];
  list<LLVMType> ParamTypes = [llvm_v8f32_ty, llvm_v8f32_ty, llvm_v8f32_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_div_ps_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_divps512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16f32_ty];
  list<LLVMType> ParamTypes = [llvm_v16f32_ty, llvm_v16f32_ty, llvm_v16f32_ty, llvm_i16_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_div_sd_round {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_divsd_round";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2f64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_v2f64_ty, llvm_v2f64_ty, llvm_i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_div_ss_round {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_divss_round";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_v4f32_ty, llvm_v4f32_ty, llvm_i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_expand_d_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_expandsi128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_expand_d_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_expandsi256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i32_ty];
  list<LLVMType> ParamTypes = [llvm_v8i32_ty, llvm_v8i32_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_expand_d_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_expandsi512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i32_ty, llvm_v16i32_ty, llvm_i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_expand_load_d_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_expandloadsi128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_v4i32_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrReadArgMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_expand_load_d_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_expandloadsi256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i32_ty];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_v8i32_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrReadArgMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_expand_load_d_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_expandloadsi512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i32_ty];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_v16i32_ty, llvm_i16_ty];
  list<IntrinsicProperty> Properties = [IntrReadArgMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_expand_load_pd_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_expandloaddf128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2f64_ty];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_v2f64_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrReadArgMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_expand_load_pd_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_expandloaddf256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f64_ty];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_v4f64_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrReadArgMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_expand_load_pd_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_expandloaddf512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8f64_ty];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_v8f64_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrReadArgMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_expand_load_ps_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_expandloadsf128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_v4f32_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrReadArgMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_expand_load_ps_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_expandloadsf256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8f32_ty];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_v8f32_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrReadArgMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_expand_load_ps_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_expandloadsf512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16f32_ty];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_v16f32_ty, llvm_i16_ty];
  list<IntrinsicProperty> Properties = [IntrReadArgMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_expand_load_q_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_expandloaddi128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_v2i64_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrReadArgMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_expand_load_q_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_expandloaddi256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4i64_ty];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_v4i64_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrReadArgMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_expand_load_q_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_expandloaddi512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i64_ty];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_v8i64_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrReadArgMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_expand_pd_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_expanddf128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2f64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_v2f64_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_expand_pd_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_expanddf256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f64_ty];
  list<LLVMType> ParamTypes = [llvm_v4f64_ty, llvm_v4f64_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_expand_pd_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_expanddf512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8f64_ty];
  list<LLVMType> ParamTypes = [llvm_v8f64_ty, llvm_v8f64_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_expand_ps_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_expandsf128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_v4f32_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_expand_ps_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_expandsf256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8f32_ty];
  list<LLVMType> ParamTypes = [llvm_v8f32_ty, llvm_v8f32_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_expand_ps_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_expandsf512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16f32_ty];
  list<LLVMType> ParamTypes = [llvm_v16f32_ty, llvm_v16f32_ty, llvm_i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_expand_q_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_expanddi128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_v2i64_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_expand_q_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_expanddi256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4i64_ty];
  list<LLVMType> ParamTypes = [llvm_v4i64_ty, llvm_v4i64_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_expand_q_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_expanddi512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i64_ty];
  list<LLVMType> ParamTypes = [llvm_v8i64_ty, llvm_v8i64_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_getexp_pd_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_getexppd128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2f64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_v2f64_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_getexp_pd_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_getexppd256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f64_ty];
  list<LLVMType> ParamTypes = [llvm_v4f64_ty, llvm_v4f64_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_getexp_pd_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_getexppd512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8f64_ty];
  list<LLVMType> ParamTypes = [llvm_v8f64_ty, llvm_v8f64_ty, llvm_i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_getexp_ps_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_getexpps128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_v4f32_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_getexp_ps_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_getexpps256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8f32_ty];
  list<LLVMType> ParamTypes = [llvm_v8f32_ty, llvm_v8f32_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_getexp_ps_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_getexpps512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16f32_ty];
  list<LLVMType> ParamTypes = [llvm_v16f32_ty, llvm_v16f32_ty, llvm_i16_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_load_pd_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_loadapd512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8f64_ty];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_v8f64_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrReadArgMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_load_ps_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_loadaps512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16f32_ty];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_v16f32_ty, llvm_i16_ty];
  list<IntrinsicProperty> Properties = [IntrReadArgMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_loadu_d_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_loaddqusi512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i32_ty];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_v16i32_ty, llvm_i16_ty];
  list<IntrinsicProperty> Properties = [IntrReadArgMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_loadu_pd_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_loadupd512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8f64_ty];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_v8f64_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrReadArgMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_loadu_ps_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_loadups512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16f32_ty];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_v16f32_ty, llvm_i16_ty];
  list<IntrinsicProperty> Properties = [IntrReadArgMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_loadu_q_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_loaddqudi512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i64_ty];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_v8i64_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrReadArgMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_lzcnt_d_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vplzcntd_512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i32_ty, llvm_v16i32_ty, llvm_i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_lzcnt_q_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vplzcntq_512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i64_ty];
  list<LLVMType> ParamTypes = [llvm_v8i64_ty, llvm_v8i64_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_max_pd_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_maxpd_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2f64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_v2f64_ty, llvm_v2f64_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_max_pd_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_maxpd256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f64_ty];
  list<LLVMType> ParamTypes = [llvm_v4f64_ty, llvm_v4f64_ty, llvm_v4f64_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_max_pd_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_maxpd512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8f64_ty];
  list<LLVMType> ParamTypes = [llvm_v8f64_ty, llvm_v8f64_ty, llvm_v8f64_ty, llvm_i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_max_ps_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_maxps_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_v4f32_ty, llvm_v4f32_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_max_ps_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_maxps256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8f32_ty];
  list<LLVMType> ParamTypes = [llvm_v8f32_ty, llvm_v8f32_ty, llvm_v8f32_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_max_ps_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_maxps512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16f32_ty];
  list<LLVMType> ParamTypes = [llvm_v16f32_ty, llvm_v16f32_ty, llvm_v16f32_ty, llvm_i16_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_max_sd_round {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_maxsd_round";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2f64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_v2f64_ty, llvm_v2f64_ty, llvm_i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_max_ss_round {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_maxss_round";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_v4f32_ty, llvm_v4f32_ty, llvm_i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_min_pd_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_minpd_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2f64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_v2f64_ty, llvm_v2f64_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_min_pd_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_minpd256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f64_ty];
  list<LLVMType> ParamTypes = [llvm_v4f64_ty, llvm_v4f64_ty, llvm_v4f64_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_min_pd_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_minpd512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8f64_ty];
  list<LLVMType> ParamTypes = [llvm_v8f64_ty, llvm_v8f64_ty, llvm_v8f64_ty, llvm_i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_min_ps_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_minps_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_v4f32_ty, llvm_v4f32_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_min_ps_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_minps256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8f32_ty];
  list<LLVMType> ParamTypes = [llvm_v8f32_ty, llvm_v8f32_ty, llvm_v8f32_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_min_ps_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_minps512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16f32_ty];
  list<LLVMType> ParamTypes = [llvm_v16f32_ty, llvm_v16f32_ty, llvm_v16f32_ty, llvm_i16_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_min_sd_round {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_minsd_round";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2f64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_v2f64_ty, llvm_v2f64_ty, llvm_i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_min_ss_round {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_minss_round";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_v4f32_ty, llvm_v4f32_ty, llvm_i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_mul_pd_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_mulpd_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2f64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_v2f64_ty, llvm_v2f64_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_mul_pd_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_mulpd256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f64_ty];
  list<LLVMType> ParamTypes = [llvm_v4f64_ty, llvm_v4f64_ty, llvm_v4f64_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_mul_pd_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_mulpd512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8f64_ty];
  list<LLVMType> ParamTypes = [llvm_v8f64_ty, llvm_v8f64_ty, llvm_v8f64_ty, llvm_i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_mul_ps_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_mulps_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_v4f32_ty, llvm_v4f32_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_mul_ps_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_mulps256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8f32_ty];
  list<LLVMType> ParamTypes = [llvm_v8f32_ty, llvm_v8f32_ty, llvm_v8f32_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_mul_ps_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_mulps512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16f32_ty];
  list<LLVMType> ParamTypes = [llvm_v16f32_ty, llvm_v16f32_ty, llvm_v16f32_ty, llvm_i16_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_mul_sd_round {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_mulsd_round";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2f64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_v2f64_ty, llvm_v2f64_ty, llvm_i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_mul_ss_round {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_mulss_round";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_v4f32_ty, llvm_v4f32_ty, llvm_i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_or_pd_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_orpd128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2f64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_v2f64_ty, llvm_v2f64_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_or_pd_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_orpd256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f64_ty];
  list<LLVMType> ParamTypes = [llvm_v4f64_ty, llvm_v4f64_ty, llvm_v4f64_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_or_pd_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_orpd512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8f64_ty];
  list<LLVMType> ParamTypes = [llvm_v8f64_ty, llvm_v8f64_ty, llvm_v8f64_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_or_ps_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_orps128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_v4f32_ty, llvm_v4f32_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_or_ps_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_orps256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8f32_ty];
  list<LLVMType> ParamTypes = [llvm_v8f32_ty, llvm_v8f32_ty, llvm_v8f32_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_or_ps_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_orps512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16f32_ty];
  list<LLVMType> ParamTypes = [llvm_v16f32_ty, llvm_v16f32_ty, llvm_v16f32_ty, llvm_i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pabs_b_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pabsb128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty, llvm_i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pabs_b_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pabsb256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v32i8_ty];
  list<LLVMType> ParamTypes = [llvm_v32i8_ty, llvm_v32i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pabs_b_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pabsb512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v64i8_ty];
  list<LLVMType> ParamTypes = [llvm_v64i8_ty, llvm_v64i8_ty, llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pabs_d_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pabsd128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pabs_d_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pabsd256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i32_ty];
  list<LLVMType> ParamTypes = [llvm_v8i32_ty, llvm_v8i32_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pabs_d_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pabsd512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i32_ty, llvm_v16i32_ty, llvm_i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pabs_q_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pabsq128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_v2i64_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pabs_q_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pabsq256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4i64_ty];
  list<LLVMType> ParamTypes = [llvm_v4i64_ty, llvm_v4i64_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pabs_q_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pabsq512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i64_ty];
  list<LLVMType> ParamTypes = [llvm_v8i64_ty, llvm_v8i64_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pabs_w_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pabsw128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pabs_w_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pabsw256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i16_ty];
  list<LLVMType> ParamTypes = [llvm_v16i16_ty, llvm_v16i16_ty, llvm_i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pabs_w_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pabsw512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v32i16_ty];
  list<LLVMType> ParamTypes = [llvm_v32i16_ty, llvm_v32i16_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_packssdw_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_packssdw128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty, llvm_v8i16_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_packssdw_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_packssdw256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i32_ty, llvm_v8i32_ty, llvm_v16i16_ty, llvm_i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_packssdw_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_packssdw512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v32i16_ty];
  list<LLVMType> ParamTypes = [llvm_v16i32_ty, llvm_v16i32_ty, llvm_v32i16_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_packsswb_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_packsswb128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty, llvm_v16i8_ty, llvm_i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_packsswb_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_packsswb256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v32i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i16_ty, llvm_v16i16_ty, llvm_v32i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_packsswb_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_packsswb512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v64i8_ty];
  list<LLVMType> ParamTypes = [llvm_v32i16_ty, llvm_v32i16_ty, llvm_v64i8_ty, llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_packusdw_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_packusdw128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty, llvm_v8i16_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_packusdw_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_packusdw256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i32_ty, llvm_v8i32_ty, llvm_v16i16_ty, llvm_i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_packusdw_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_packusdw512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v32i16_ty];
  list<LLVMType> ParamTypes = [llvm_v16i32_ty, llvm_v16i32_ty, llvm_v32i16_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_packuswb_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_packuswb128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty, llvm_v16i8_ty, llvm_i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_packuswb_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_packuswb256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v32i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i16_ty, llvm_v16i16_ty, llvm_v32i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_packuswb_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_packuswb512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v64i8_ty];
  list<LLVMType> ParamTypes = [llvm_v32i16_ty, llvm_v32i16_ty, llvm_v64i8_ty, llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_padd_b_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_paddb128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty, llvm_v16i8_ty, llvm_i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_padd_b_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_paddb256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v32i8_ty];
  list<LLVMType> ParamTypes = [llvm_v32i8_ty, llvm_v32i8_ty, llvm_v32i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_padd_b_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_paddb512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v64i8_ty];
  list<LLVMType> ParamTypes = [llvm_v64i8_ty, llvm_v64i8_ty, llvm_v64i8_ty, llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_padd_d_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_paddd128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty, llvm_v4i32_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_padd_d_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_paddd256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i32_ty];
  list<LLVMType> ParamTypes = [llvm_v8i32_ty, llvm_v8i32_ty, llvm_v8i32_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_padd_d_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_paddd512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i32_ty, llvm_v16i32_ty, llvm_v16i32_ty, llvm_i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_padd_q_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_paddq128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_v2i64_ty, llvm_v2i64_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_padd_q_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_paddq256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4i64_ty];
  list<LLVMType> ParamTypes = [llvm_v4i64_ty, llvm_v4i64_ty, llvm_v4i64_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_padd_q_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_paddq512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i64_ty];
  list<LLVMType> ParamTypes = [llvm_v8i64_ty, llvm_v8i64_ty, llvm_v8i64_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_padd_w_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_paddw128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty, llvm_v8i16_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_padd_w_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_paddw256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i16_ty];
  list<LLVMType> ParamTypes = [llvm_v16i16_ty, llvm_v16i16_ty, llvm_v16i16_ty, llvm_i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_padd_w_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_paddw512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v32i16_ty];
  list<LLVMType> ParamTypes = [llvm_v32i16_ty, llvm_v32i16_ty, llvm_v32i16_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_padds_b_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_paddsb128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty, llvm_v16i8_ty, llvm_i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_padds_b_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_paddsb256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v32i8_ty];
  list<LLVMType> ParamTypes = [llvm_v32i8_ty, llvm_v32i8_ty, llvm_v32i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_padds_b_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_paddsb512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v64i8_ty];
  list<LLVMType> ParamTypes = [llvm_v64i8_ty, llvm_v64i8_ty, llvm_v64i8_ty, llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_padds_w_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_paddsw128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty, llvm_v8i16_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_padds_w_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_paddsw256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i16_ty];
  list<LLVMType> ParamTypes = [llvm_v16i16_ty, llvm_v16i16_ty, llvm_v16i16_ty, llvm_i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_padds_w_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_paddsw512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v32i16_ty];
  list<LLVMType> ParamTypes = [llvm_v32i16_ty, llvm_v32i16_ty, llvm_v32i16_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_paddus_b_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_paddusb128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty, llvm_v16i8_ty, llvm_i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_paddus_b_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_paddusb256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v32i8_ty];
  list<LLVMType> ParamTypes = [llvm_v32i8_ty, llvm_v32i8_ty, llvm_v32i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_paddus_b_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_paddusb512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v64i8_ty];
  list<LLVMType> ParamTypes = [llvm_v64i8_ty, llvm_v64i8_ty, llvm_v64i8_ty, llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_paddus_w_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_paddusw128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty, llvm_v8i16_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_paddus_w_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_paddusw256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i16_ty];
  list<LLVMType> ParamTypes = [llvm_v16i16_ty, llvm_v16i16_ty, llvm_v16i16_ty, llvm_i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_paddus_w_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_paddusw512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v32i16_ty];
  list<LLVMType> ParamTypes = [llvm_v32i16_ty, llvm_v32i16_ty, llvm_v32i16_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pand_d_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pandd128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty, llvm_v4i32_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pand_d_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pandd256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i32_ty];
  list<LLVMType> ParamTypes = [llvm_v8i32_ty, llvm_v8i32_ty, llvm_v8i32_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pand_d_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pandd512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i32_ty, llvm_v16i32_ty, llvm_v16i32_ty, llvm_i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pand_q_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pandq128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_v2i64_ty, llvm_v2i64_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pand_q_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pandq256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4i64_ty];
  list<LLVMType> ParamTypes = [llvm_v4i64_ty, llvm_v4i64_ty, llvm_v4i64_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pand_q_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pandq512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i64_ty];
  list<LLVMType> ParamTypes = [llvm_v8i64_ty, llvm_v8i64_ty, llvm_v8i64_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pandn_d_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pandnd128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty, llvm_v4i32_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pandn_d_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pandnd256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i32_ty];
  list<LLVMType> ParamTypes = [llvm_v8i32_ty, llvm_v8i32_ty, llvm_v8i32_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pandn_d_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pandnd512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i32_ty, llvm_v16i32_ty, llvm_v16i32_ty, llvm_i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pandn_q_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pandnq128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_v2i64_ty, llvm_v2i64_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pandn_q_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pandnq256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4i64_ty];
  list<LLVMType> ParamTypes = [llvm_v4i64_ty, llvm_v4i64_ty, llvm_v4i64_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pandn_q_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pandnq512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i64_ty];
  list<LLVMType> ParamTypes = [llvm_v8i64_ty, llvm_v8i64_ty, llvm_v8i64_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pavg_b_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pavgb128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty, llvm_v16i8_ty, llvm_i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pavg_b_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pavgb256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v32i8_ty];
  list<LLVMType> ParamTypes = [llvm_v32i8_ty, llvm_v32i8_ty, llvm_v32i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pavg_b_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pavgb512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v64i8_ty];
  list<LLVMType> ParamTypes = [llvm_v64i8_ty, llvm_v64i8_ty, llvm_v64i8_ty, llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pavg_w_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pavgw128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty, llvm_v8i16_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pavg_w_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pavgw256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i16_ty];
  list<LLVMType> ParamTypes = [llvm_v16i16_ty, llvm_v16i16_ty, llvm_v16i16_ty, llvm_i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pavg_w_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pavgw512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v32i16_ty];
  list<LLVMType> ParamTypes = [llvm_v32i16_ty, llvm_v32i16_ty, llvm_v32i16_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pbroadcast_d_gpr_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pbroadcastd512_gpr_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_v16i32_ty, llvm_i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pbroadcast_q_gpr_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pbroadcastq512_gpr_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_v8i64_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pbroadcast_q_mem_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pbroadcastq512_mem_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_v8i64_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pcmpeq_b_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pcmpeqb128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i16_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty, llvm_i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pcmpeq_b_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pcmpeqb256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_v32i8_ty, llvm_v32i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pcmpeq_b_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pcmpeqb512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_v64i8_ty, llvm_v64i8_ty, llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pcmpeq_d_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pcmpeqd128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i8_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pcmpeq_d_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pcmpeqd256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i8_ty];
  list<LLVMType> ParamTypes = [llvm_v8i32_ty, llvm_v8i32_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pcmpeq_d_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pcmpeqd512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i16_ty];
  list<LLVMType> ParamTypes = [llvm_v16i32_ty, llvm_v16i32_ty, llvm_i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pcmpeq_q_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pcmpeqq128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i8_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_v2i64_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pcmpeq_q_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pcmpeqq256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i8_ty];
  list<LLVMType> ParamTypes = [llvm_v4i64_ty, llvm_v4i64_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pcmpeq_q_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pcmpeqq512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i8_ty];
  list<LLVMType> ParamTypes = [llvm_v8i64_ty, llvm_v8i64_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pcmpeq_w_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pcmpeqw128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i8_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pcmpeq_w_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pcmpeqw256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i16_ty];
  list<LLVMType> ParamTypes = [llvm_v16i16_ty, llvm_v16i16_ty, llvm_i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pcmpeq_w_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pcmpeqw512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_v32i16_ty, llvm_v32i16_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pcmpgt_b_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pcmpgtb128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i16_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty, llvm_i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pcmpgt_b_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pcmpgtb256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_v32i8_ty, llvm_v32i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pcmpgt_b_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pcmpgtb512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_v64i8_ty, llvm_v64i8_ty, llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pcmpgt_d_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pcmpgtd128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i8_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pcmpgt_d_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pcmpgtd256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i8_ty];
  list<LLVMType> ParamTypes = [llvm_v8i32_ty, llvm_v8i32_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pcmpgt_d_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pcmpgtd512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i16_ty];
  list<LLVMType> ParamTypes = [llvm_v16i32_ty, llvm_v16i32_ty, llvm_i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pcmpgt_q_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pcmpgtq128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i8_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_v2i64_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pcmpgt_q_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pcmpgtq256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i8_ty];
  list<LLVMType> ParamTypes = [llvm_v4i64_ty, llvm_v4i64_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pcmpgt_q_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pcmpgtq512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i8_ty];
  list<LLVMType> ParamTypes = [llvm_v8i64_ty, llvm_v8i64_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pcmpgt_w_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pcmpgtw128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i8_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pcmpgt_w_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pcmpgtw256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i16_ty];
  list<LLVMType> ParamTypes = [llvm_v16i16_ty, llvm_v16i16_ty, llvm_i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pcmpgt_w_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pcmpgtw512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_v32i16_ty, llvm_v32i16_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pmaxs_b_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmaxsb128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty, llvm_v16i8_ty, llvm_i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pmaxs_b_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmaxsb256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v32i8_ty];
  list<LLVMType> ParamTypes = [llvm_v32i8_ty, llvm_v32i8_ty, llvm_v32i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pmaxs_b_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmaxsb512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v64i8_ty];
  list<LLVMType> ParamTypes = [llvm_v64i8_ty, llvm_v64i8_ty, llvm_v64i8_ty, llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pmaxs_d_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmaxsd128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty, llvm_v4i32_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pmaxs_d_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmaxsd256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i32_ty];
  list<LLVMType> ParamTypes = [llvm_v8i32_ty, llvm_v8i32_ty, llvm_v8i32_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pmaxs_d_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmaxsd512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i32_ty, llvm_v16i32_ty, llvm_v16i32_ty, llvm_i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pmaxs_q_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmaxsq128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_v2i64_ty, llvm_v2i64_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pmaxs_q_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmaxsq256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4i64_ty];
  list<LLVMType> ParamTypes = [llvm_v4i64_ty, llvm_v4i64_ty, llvm_v4i64_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pmaxs_q_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmaxsq512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i64_ty];
  list<LLVMType> ParamTypes = [llvm_v8i64_ty, llvm_v8i64_ty, llvm_v8i64_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pmaxs_w_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmaxsw128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty, llvm_v8i16_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pmaxs_w_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmaxsw256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i16_ty];
  list<LLVMType> ParamTypes = [llvm_v16i16_ty, llvm_v16i16_ty, llvm_v16i16_ty, llvm_i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pmaxs_w_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmaxsw512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v32i16_ty];
  list<LLVMType> ParamTypes = [llvm_v32i16_ty, llvm_v32i16_ty, llvm_v32i16_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pmaxu_b_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmaxub128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty, llvm_v16i8_ty, llvm_i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pmaxu_b_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmaxub256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v32i8_ty];
  list<LLVMType> ParamTypes = [llvm_v32i8_ty, llvm_v32i8_ty, llvm_v32i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pmaxu_b_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmaxub512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v64i8_ty];
  list<LLVMType> ParamTypes = [llvm_v64i8_ty, llvm_v64i8_ty, llvm_v64i8_ty, llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pmaxu_d_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmaxud128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty, llvm_v4i32_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pmaxu_d_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmaxud256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i32_ty];
  list<LLVMType> ParamTypes = [llvm_v8i32_ty, llvm_v8i32_ty, llvm_v8i32_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pmaxu_d_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmaxud512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i32_ty, llvm_v16i32_ty, llvm_v16i32_ty, llvm_i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pmaxu_q_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmaxuq128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_v2i64_ty, llvm_v2i64_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pmaxu_q_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmaxuq256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4i64_ty];
  list<LLVMType> ParamTypes = [llvm_v4i64_ty, llvm_v4i64_ty, llvm_v4i64_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pmaxu_q_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmaxuq512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i64_ty];
  list<LLVMType> ParamTypes = [llvm_v8i64_ty, llvm_v8i64_ty, llvm_v8i64_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pmaxu_w_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmaxuw128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty, llvm_v8i16_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pmaxu_w_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmaxuw256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i16_ty];
  list<LLVMType> ParamTypes = [llvm_v16i16_ty, llvm_v16i16_ty, llvm_v16i16_ty, llvm_i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pmaxu_w_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmaxuw512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v32i16_ty];
  list<LLVMType> ParamTypes = [llvm_v32i16_ty, llvm_v32i16_ty, llvm_v32i16_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pmins_b_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pminsb128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty, llvm_v16i8_ty, llvm_i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pmins_b_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pminsb256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v32i8_ty];
  list<LLVMType> ParamTypes = [llvm_v32i8_ty, llvm_v32i8_ty, llvm_v32i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pmins_b_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pminsb512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v64i8_ty];
  list<LLVMType> ParamTypes = [llvm_v64i8_ty, llvm_v64i8_ty, llvm_v64i8_ty, llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pmins_d_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pminsd128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty, llvm_v4i32_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pmins_d_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pminsd256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i32_ty];
  list<LLVMType> ParamTypes = [llvm_v8i32_ty, llvm_v8i32_ty, llvm_v8i32_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pmins_d_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pminsd512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i32_ty, llvm_v16i32_ty, llvm_v16i32_ty, llvm_i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pmins_q_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pminsq128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_v2i64_ty, llvm_v2i64_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pmins_q_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pminsq256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4i64_ty];
  list<LLVMType> ParamTypes = [llvm_v4i64_ty, llvm_v4i64_ty, llvm_v4i64_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pmins_q_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pminsq512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i64_ty];
  list<LLVMType> ParamTypes = [llvm_v8i64_ty, llvm_v8i64_ty, llvm_v8i64_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pmins_w_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pminsw128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty, llvm_v8i16_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pmins_w_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pminsw256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i16_ty];
  list<LLVMType> ParamTypes = [llvm_v16i16_ty, llvm_v16i16_ty, llvm_v16i16_ty, llvm_i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pmins_w_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pminsw512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v32i16_ty];
  list<LLVMType> ParamTypes = [llvm_v32i16_ty, llvm_v32i16_ty, llvm_v32i16_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pminu_b_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pminub128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty, llvm_v16i8_ty, llvm_i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pminu_b_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pminub256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v32i8_ty];
  list<LLVMType> ParamTypes = [llvm_v32i8_ty, llvm_v32i8_ty, llvm_v32i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pminu_b_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pminub512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v64i8_ty];
  list<LLVMType> ParamTypes = [llvm_v64i8_ty, llvm_v64i8_ty, llvm_v64i8_ty, llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pminu_d_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pminud128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty, llvm_v4i32_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pminu_d_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pminud256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i32_ty];
  list<LLVMType> ParamTypes = [llvm_v8i32_ty, llvm_v8i32_ty, llvm_v8i32_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pminu_d_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pminud512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i32_ty, llvm_v16i32_ty, llvm_v16i32_ty, llvm_i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pminu_q_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pminuq128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_v2i64_ty, llvm_v2i64_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pminu_q_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pminuq256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4i64_ty];
  list<LLVMType> ParamTypes = [llvm_v4i64_ty, llvm_v4i64_ty, llvm_v4i64_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pminu_q_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pminuq512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i64_ty];
  list<LLVMType> ParamTypes = [llvm_v8i64_ty, llvm_v8i64_ty, llvm_v8i64_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pminu_w_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pminuw128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty, llvm_v8i16_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pminu_w_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pminuw256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i16_ty];
  list<LLVMType> ParamTypes = [llvm_v16i16_ty, llvm_v16i16_ty, llvm_v16i16_ty, llvm_i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pminu_w_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pminuw512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v32i16_ty];
  list<LLVMType> ParamTypes = [llvm_v32i16_ty, llvm_v32i16_ty, llvm_v32i16_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pmul_dq_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmuldq128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty, llvm_v2i64_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pmul_dq_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmuldq256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4i64_ty];
  list<LLVMType> ParamTypes = [llvm_v8i32_ty, llvm_v8i32_ty, llvm_v4i64_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pmul_dq_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmuldq512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i64_ty];
  list<LLVMType> ParamTypes = [llvm_v16i32_ty, llvm_v16i32_ty, llvm_v8i64_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pmul_hr_sw_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmulhrsw128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty, llvm_v8i16_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pmul_hr_sw_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmulhrsw256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i16_ty];
  list<LLVMType> ParamTypes = [llvm_v16i16_ty, llvm_v16i16_ty, llvm_v16i16_ty, llvm_i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pmul_hr_sw_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmulhrsw512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v32i16_ty];
  list<LLVMType> ParamTypes = [llvm_v32i16_ty, llvm_v32i16_ty, llvm_v32i16_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pmulh_w_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmulhw128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty, llvm_v8i16_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pmulh_w_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmulhw256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i16_ty];
  list<LLVMType> ParamTypes = [llvm_v16i16_ty, llvm_v16i16_ty, llvm_v16i16_ty, llvm_i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pmulh_w_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmulhw512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v32i16_ty];
  list<LLVMType> ParamTypes = [llvm_v32i16_ty, llvm_v32i16_ty, llvm_v32i16_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pmulhu_w_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmulhuw128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty, llvm_v8i16_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pmulhu_w_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmulhuw256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i16_ty];
  list<LLVMType> ParamTypes = [llvm_v16i16_ty, llvm_v16i16_ty, llvm_v16i16_ty, llvm_i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pmulhu_w_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmulhuw512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v32i16_ty];
  list<LLVMType> ParamTypes = [llvm_v32i16_ty, llvm_v32i16_ty, llvm_v32i16_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pmull_d_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmulld128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty, llvm_v4i32_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pmull_d_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmulld256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i32_ty];
  list<LLVMType> ParamTypes = [llvm_v8i32_ty, llvm_v8i32_ty, llvm_v8i32_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pmull_d_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmulld512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i32_ty, llvm_v16i32_ty, llvm_v16i32_ty, llvm_i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pmull_q_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmullq128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_v2i64_ty, llvm_v2i64_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pmull_q_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmullq256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4i64_ty];
  list<LLVMType> ParamTypes = [llvm_v4i64_ty, llvm_v4i64_ty, llvm_v4i64_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pmull_q_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmullq512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i64_ty];
  list<LLVMType> ParamTypes = [llvm_v8i64_ty, llvm_v8i64_ty, llvm_v8i64_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pmull_w_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmullw128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty, llvm_v8i16_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pmull_w_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmullw256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i16_ty];
  list<LLVMType> ParamTypes = [llvm_v16i16_ty, llvm_v16i16_ty, llvm_v16i16_ty, llvm_i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pmull_w_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmullw512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v32i16_ty];
  list<LLVMType> ParamTypes = [llvm_v32i16_ty, llvm_v32i16_ty, llvm_v32i16_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pmulu_dq_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmuludq128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty, llvm_v2i64_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pmulu_dq_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmuludq256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4i64_ty];
  list<LLVMType> ParamTypes = [llvm_v8i32_ty, llvm_v8i32_ty, llvm_v4i64_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pmulu_dq_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmuludq512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i64_ty];
  list<LLVMType> ParamTypes = [llvm_v16i32_ty, llvm_v16i32_ty, llvm_v8i64_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_por_d_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pord128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty, llvm_v4i32_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_por_d_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pord256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i32_ty];
  list<LLVMType> ParamTypes = [llvm_v8i32_ty, llvm_v8i32_ty, llvm_v8i32_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_por_d_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pord512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i32_ty, llvm_v16i32_ty, llvm_v16i32_ty, llvm_i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_por_q_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_porq128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_v2i64_ty, llvm_v2i64_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_por_q_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_porq256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4i64_ty];
  list<LLVMType> ParamTypes = [llvm_v4i64_ty, llvm_v4i64_ty, llvm_v4i64_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_por_q_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_porq512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i64_ty];
  list<LLVMType> ParamTypes = [llvm_v8i64_ty, llvm_v8i64_ty, llvm_v8i64_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pshuf_b_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pshufb128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty, llvm_v16i8_ty, llvm_i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pshuf_b_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pshufb256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v32i8_ty];
  list<LLVMType> ParamTypes = [llvm_v32i8_ty, llvm_v32i8_ty, llvm_v32i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pshuf_b_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pshufb512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v64i8_ty];
  list<LLVMType> ParamTypes = [llvm_v64i8_ty, llvm_v64i8_ty, llvm_v64i8_ty, llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_psll_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pslld512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i32_ty, llvm_v4i32_ty, llvm_v16i32_ty, llvm_i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_psll_q {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_psllq512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i64_ty];
  list<LLVMType> ParamTypes = [llvm_v8i64_ty, llvm_v2i64_ty, llvm_v8i64_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pslli_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pslldi512";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i32_ty, llvm_i32_ty, llvm_v16i32_ty, llvm_i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pslli_q {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_psllqi512";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i64_ty];
  list<LLVMType> ParamTypes = [llvm_v8i64_ty, llvm_i32_ty, llvm_v8i64_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_psllv_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_psllv16si_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i32_ty, llvm_v16i32_ty, llvm_v16i32_ty, llvm_i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_psllv_q {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_psllv8di_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i64_ty];
  list<LLVMType> ParamTypes = [llvm_v8i64_ty, llvm_v8i64_ty, llvm_v8i64_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_psra_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_psrad512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i32_ty, llvm_v4i32_ty, llvm_v16i32_ty, llvm_i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_psra_q {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_psraq512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i64_ty];
  list<LLVMType> ParamTypes = [llvm_v8i64_ty, llvm_v2i64_ty, llvm_v8i64_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_psrai_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_psradi512";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i32_ty, llvm_i32_ty, llvm_v16i32_ty, llvm_i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_psrai_q {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_psraqi512";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i64_ty];
  list<LLVMType> ParamTypes = [llvm_v8i64_ty, llvm_i32_ty, llvm_v8i64_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_psrav_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_psrav16si_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i32_ty, llvm_v16i32_ty, llvm_v16i32_ty, llvm_i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_psrav_q {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_psrav8di_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i64_ty];
  list<LLVMType> ParamTypes = [llvm_v8i64_ty, llvm_v8i64_ty, llvm_v8i64_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_psrl_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_psrld512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i32_ty, llvm_v4i32_ty, llvm_v16i32_ty, llvm_i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_psrl_q {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_psrlq512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i64_ty];
  list<LLVMType> ParamTypes = [llvm_v8i64_ty, llvm_v2i64_ty, llvm_v8i64_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_psrli_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_psrldi512";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i32_ty, llvm_i32_ty, llvm_v16i32_ty, llvm_i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_psrli_q {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_psrlqi512";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i64_ty];
  list<LLVMType> ParamTypes = [llvm_v8i64_ty, llvm_i32_ty, llvm_v8i64_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_psrlv_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_psrlv16si_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i32_ty, llvm_v16i32_ty, llvm_v16i32_ty, llvm_i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_psrlv_q {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_psrlv8di_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i64_ty];
  list<LLVMType> ParamTypes = [llvm_v8i64_ty, llvm_v8i64_ty, llvm_v8i64_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_psub_b_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_psubb128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty, llvm_v16i8_ty, llvm_i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_psub_b_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_psubb256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v32i8_ty];
  list<LLVMType> ParamTypes = [llvm_v32i8_ty, llvm_v32i8_ty, llvm_v32i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_psub_b_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_psubb512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v64i8_ty];
  list<LLVMType> ParamTypes = [llvm_v64i8_ty, llvm_v64i8_ty, llvm_v64i8_ty, llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_psub_d_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_psubd128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty, llvm_v4i32_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_psub_d_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_psubd256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i32_ty];
  list<LLVMType> ParamTypes = [llvm_v8i32_ty, llvm_v8i32_ty, llvm_v8i32_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_psub_d_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_psubd512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i32_ty, llvm_v16i32_ty, llvm_v16i32_ty, llvm_i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_psub_q_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_psubq128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_v2i64_ty, llvm_v2i64_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_psub_q_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_psubq256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4i64_ty];
  list<LLVMType> ParamTypes = [llvm_v4i64_ty, llvm_v4i64_ty, llvm_v4i64_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_psub_q_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_psubq512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i64_ty];
  list<LLVMType> ParamTypes = [llvm_v8i64_ty, llvm_v8i64_ty, llvm_v8i64_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_psub_w_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_psubw128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty, llvm_v8i16_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_psub_w_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_psubw256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i16_ty];
  list<LLVMType> ParamTypes = [llvm_v16i16_ty, llvm_v16i16_ty, llvm_v16i16_ty, llvm_i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_psub_w_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_psubw512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v32i16_ty];
  list<LLVMType> ParamTypes = [llvm_v32i16_ty, llvm_v32i16_ty, llvm_v32i16_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_psubs_b_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_psubsb128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty, llvm_v16i8_ty, llvm_i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_psubs_b_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_psubsb256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v32i8_ty];
  list<LLVMType> ParamTypes = [llvm_v32i8_ty, llvm_v32i8_ty, llvm_v32i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_psubs_b_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_psubsb512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v64i8_ty];
  list<LLVMType> ParamTypes = [llvm_v64i8_ty, llvm_v64i8_ty, llvm_v64i8_ty, llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_psubs_w_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_psubsw128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty, llvm_v8i16_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_psubs_w_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_psubsw256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i16_ty];
  list<LLVMType> ParamTypes = [llvm_v16i16_ty, llvm_v16i16_ty, llvm_v16i16_ty, llvm_i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_psubs_w_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_psubsw512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v32i16_ty];
  list<LLVMType> ParamTypes = [llvm_v32i16_ty, llvm_v32i16_ty, llvm_v32i16_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_psubus_b_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_psubusb128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty, llvm_v16i8_ty, llvm_i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_psubus_b_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_psubusb256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v32i8_ty];
  list<LLVMType> ParamTypes = [llvm_v32i8_ty, llvm_v32i8_ty, llvm_v32i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_psubus_b_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_psubusb512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v64i8_ty];
  list<LLVMType> ParamTypes = [llvm_v64i8_ty, llvm_v64i8_ty, llvm_v64i8_ty, llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_psubus_w_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_psubusw128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty, llvm_v8i16_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_psubus_w_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_psubusw256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i16_ty];
  list<LLVMType> ParamTypes = [llvm_v16i16_ty, llvm_v16i16_ty, llvm_v16i16_ty, llvm_i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_psubus_w_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_psubusw512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v32i16_ty];
  list<LLVMType> ParamTypes = [llvm_v32i16_ty, llvm_v32i16_ty, llvm_v32i16_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_ptestm_d_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_ptestmd512";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i16_ty];
  list<LLVMType> ParamTypes = [llvm_v16i32_ty, llvm_v16i32_ty, llvm_i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_ptestm_q_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_ptestmq512";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i8_ty];
  list<LLVMType> ParamTypes = [llvm_v8i64_ty, llvm_v8i64_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pxor_d_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pxord128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty, llvm_v4i32_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pxor_d_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pxord256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i32_ty];
  list<LLVMType> ParamTypes = [llvm_v8i32_ty, llvm_v8i32_ty, llvm_v8i32_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pxor_d_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pxord512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i32_ty, llvm_v16i32_ty, llvm_v16i32_ty, llvm_i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pxor_q_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pxorq128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_v2i64_ty, llvm_v2i64_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pxor_q_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pxorq256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4i64_ty];
  list<LLVMType> ParamTypes = [llvm_v4i64_ty, llvm_v4i64_ty, llvm_v4i64_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_pxor_q_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pxorq512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i64_ty];
  list<LLVMType> ParamTypes = [llvm_v8i64_ty, llvm_v8i64_ty, llvm_v8i64_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_rndscale_pd_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_rndscalepd_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8f64_ty];
  list<LLVMType> ParamTypes = [llvm_v8f64_ty, llvm_i32_ty, llvm_v8f64_ty, llvm_i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_rndscale_ps_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_rndscaleps_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16f32_ty];
  list<LLVMType> ParamTypes = [llvm_v16f32_ty, llvm_i32_ty, llvm_v16f32_ty, llvm_i16_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_rndscale_sd {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_rndscalesd_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2f64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_v2f64_ty, llvm_v2f64_ty, llvm_i8_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_rndscale_ss {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_rndscaless_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_v4f32_ty, llvm_v4f32_ty, llvm_i8_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_scalef_pd_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_scalefpd128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2f64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_v2f64_ty, llvm_v2f64_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_scalef_pd_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_scalefpd256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f64_ty];
  list<LLVMType> ParamTypes = [llvm_v4f64_ty, llvm_v4f64_ty, llvm_v4f64_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_scalef_pd_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_scalefpd512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8f64_ty];
  list<LLVMType> ParamTypes = [llvm_v8f64_ty, llvm_v8f64_ty, llvm_v8f64_ty, llvm_i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_scalef_ps_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_scalefps128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_v4f32_ty, llvm_v4f32_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_scalef_ps_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_scalefps256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8f32_ty];
  list<LLVMType> ParamTypes = [llvm_v8f32_ty, llvm_v8f32_ty, llvm_v8f32_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_scalef_ps_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_scalefps512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16f32_ty];
  list<LLVMType> ParamTypes = [llvm_v16f32_ty, llvm_v16f32_ty, llvm_v16f32_ty, llvm_i16_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_sqrt_pd_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_sqrtpd128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2f64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_v2f64_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_sqrt_pd_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_sqrtpd256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f64_ty];
  list<LLVMType> ParamTypes = [llvm_v4f64_ty, llvm_v4f64_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_sqrt_pd_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_sqrtpd512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8f64_ty];
  list<LLVMType> ParamTypes = [llvm_v8f64_ty, llvm_v8f64_ty, llvm_i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_sqrt_ps_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_sqrtps128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_v4f32_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_sqrt_ps_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_sqrtps256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8f32_ty];
  list<LLVMType> ParamTypes = [llvm_v8f32_ty, llvm_v8f32_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_sqrt_ps_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_sqrtps512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16f32_ty];
  list<LLVMType> ParamTypes = [llvm_v16f32_ty, llvm_v16f32_ty, llvm_i16_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_store_pd_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_storeapd512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_v8f64_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrReadWriteArgMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_store_ps_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_storeaps512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_v16f32_ty, llvm_i16_ty];
  list<IntrinsicProperty> Properties = [IntrReadWriteArgMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_store_ss {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_storess_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_v4f32_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrReadWriteArgMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_storeu_d_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_storedqusi512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_v16i32_ty, llvm_i16_ty];
  list<IntrinsicProperty> Properties = [IntrReadWriteArgMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_storeu_pd_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_storeupd512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_v8f64_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrReadWriteArgMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_storeu_ps_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_storeups512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_v16f32_ty, llvm_i16_ty];
  list<IntrinsicProperty> Properties = [IntrReadWriteArgMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_storeu_q_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_storedqudi512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_v8i64_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrReadWriteArgMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_sub_pd_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_subpd128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2f64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_v2f64_ty, llvm_v2f64_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_sub_pd_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_subpd256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f64_ty];
  list<LLVMType> ParamTypes = [llvm_v4f64_ty, llvm_v4f64_ty, llvm_v4f64_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_sub_pd_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_subpd512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8f64_ty];
  list<LLVMType> ParamTypes = [llvm_v8f64_ty, llvm_v8f64_ty, llvm_v8f64_ty, llvm_i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_sub_ps_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_subps128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_v4f32_ty, llvm_v4f32_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_sub_ps_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_subps256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8f32_ty];
  list<LLVMType> ParamTypes = [llvm_v8f32_ty, llvm_v8f32_ty, llvm_v8f32_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_sub_ps_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_subps512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16f32_ty];
  list<LLVMType> ParamTypes = [llvm_v16f32_ty, llvm_v16f32_ty, llvm_v16f32_ty, llvm_i16_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_sub_sd_round {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_subsd_round";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2f64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_v2f64_ty, llvm_v2f64_ty, llvm_i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_sub_ss_round {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_subss_round";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_v4f32_ty, llvm_v4f32_ty, llvm_i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_ucmp_b_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_ucmpb128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i16_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty, llvm_i32_ty, llvm_i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_ucmp_b_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_ucmpb256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_v32i8_ty, llvm_v32i8_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_ucmp_b_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_ucmpb512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_v64i8_ty, llvm_v64i8_ty, llvm_i32_ty, llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_ucmp_d_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_ucmpd128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i8_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty, llvm_i32_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_ucmp_d_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_ucmpd256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i8_ty];
  list<LLVMType> ParamTypes = [llvm_v8i32_ty, llvm_v8i32_ty, llvm_i32_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_ucmp_d_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_ucmpd512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i16_ty];
  list<LLVMType> ParamTypes = [llvm_v16i32_ty, llvm_v16i32_ty, llvm_i32_ty, llvm_i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_ucmp_q_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_ucmpq128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i8_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_v2i64_ty, llvm_i32_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_ucmp_q_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_ucmpq256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i8_ty];
  list<LLVMType> ParamTypes = [llvm_v4i64_ty, llvm_v4i64_ty, llvm_i32_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_ucmp_q_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_ucmpq512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i8_ty];
  list<LLVMType> ParamTypes = [llvm_v8i64_ty, llvm_v8i64_ty, llvm_i32_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_ucmp_w_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_ucmpw128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i8_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty, llvm_i32_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_ucmp_w_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_ucmpw256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i16_ty];
  list<LLVMType> ParamTypes = [llvm_v16i16_ty, llvm_v16i16_ty, llvm_i32_ty, llvm_i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_ucmp_w_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_ucmpw512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_v32i16_ty, llvm_v32i16_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_valign_d_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_alignd512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i32_ty, llvm_v16i32_ty, llvm_i8_ty, llvm_v16i32_ty, llvm_i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_valign_q_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_alignq512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i64_ty];
  list<LLVMType> ParamTypes = [llvm_v8i64_ty, llvm_v8i64_ty, llvm_i8_ty, llvm_v8i64_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_vcvtph2ps_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vcvtph2ps512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16f32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i16_ty, llvm_v16f32_ty, llvm_i16_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_vcvtps2ph_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vcvtps2ph512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i16_ty];
  list<LLVMType> ParamTypes = [llvm_v16f32_ty, llvm_i32_ty, llvm_v16i16_ty, llvm_i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_vextractf32x4_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_extractf32x4_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v16f32_ty, llvm_i8_ty, llvm_v4f32_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_vextractf64x4_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_extractf64x4_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f64_ty];
  list<LLVMType> ParamTypes = [llvm_v8f64_ty, llvm_i8_ty, llvm_v4f64_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_vextracti32x4_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_extracti32x4_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i32_ty, llvm_i8_ty, llvm_v4i32_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_vextracti64x4_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_extracti64x4_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4i64_ty];
  list<LLVMType> ParamTypes = [llvm_v8i64_ty, llvm_i8_ty, llvm_v4i64_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_vfmadd_pd_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vfmaddpd128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2f64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_v2f64_ty, llvm_v2f64_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_vfmadd_pd_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vfmaddpd256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f64_ty];
  list<LLVMType> ParamTypes = [llvm_v4f64_ty, llvm_v4f64_ty, llvm_v4f64_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_vfmadd_pd_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vfmaddpd512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8f64_ty];
  list<LLVMType> ParamTypes = [llvm_v8f64_ty, llvm_v8f64_ty, llvm_v8f64_ty, llvm_i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_vfmadd_ps_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vfmaddps128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_v4f32_ty, llvm_v4f32_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_vfmadd_ps_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vfmaddps256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8f32_ty];
  list<LLVMType> ParamTypes = [llvm_v8f32_ty, llvm_v8f32_ty, llvm_v8f32_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_vfmadd_ps_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vfmaddps512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16f32_ty];
  list<LLVMType> ParamTypes = [llvm_v16f32_ty, llvm_v16f32_ty, llvm_v16f32_ty, llvm_i16_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_vfmaddsub_pd_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vfmaddsubpd128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2f64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_v2f64_ty, llvm_v2f64_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_vfmaddsub_pd_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vfmaddsubpd256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f64_ty];
  list<LLVMType> ParamTypes = [llvm_v4f64_ty, llvm_v4f64_ty, llvm_v4f64_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_vfmaddsub_pd_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vfmaddsubpd512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8f64_ty];
  list<LLVMType> ParamTypes = [llvm_v8f64_ty, llvm_v8f64_ty, llvm_v8f64_ty, llvm_i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_vfmaddsub_ps_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vfmaddsubps128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_v4f32_ty, llvm_v4f32_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_vfmaddsub_ps_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vfmaddsubps256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8f32_ty];
  list<LLVMType> ParamTypes = [llvm_v8f32_ty, llvm_v8f32_ty, llvm_v8f32_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_vfmaddsub_ps_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vfmaddsubps512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16f32_ty];
  list<LLVMType> ParamTypes = [llvm_v16f32_ty, llvm_v16f32_ty, llvm_v16f32_ty, llvm_i16_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_vfnmadd_pd_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vfnmaddpd128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2f64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_v2f64_ty, llvm_v2f64_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_vfnmadd_pd_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vfnmaddpd256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f64_ty];
  list<LLVMType> ParamTypes = [llvm_v4f64_ty, llvm_v4f64_ty, llvm_v4f64_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_vfnmadd_pd_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vfnmaddpd512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8f64_ty];
  list<LLVMType> ParamTypes = [llvm_v8f64_ty, llvm_v8f64_ty, llvm_v8f64_ty, llvm_i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_vfnmadd_ps_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vfnmaddps128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_v4f32_ty, llvm_v4f32_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_vfnmadd_ps_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vfnmaddps256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8f32_ty];
  list<LLVMType> ParamTypes = [llvm_v8f32_ty, llvm_v8f32_ty, llvm_v8f32_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_vfnmadd_ps_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vfnmaddps512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16f32_ty];
  list<LLVMType> ParamTypes = [llvm_v16f32_ty, llvm_v16f32_ty, llvm_v16f32_ty, llvm_i16_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_vfnmsub_pd_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vfnmsubpd128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2f64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_v2f64_ty, llvm_v2f64_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_vfnmsub_pd_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vfnmsubpd256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f64_ty];
  list<LLVMType> ParamTypes = [llvm_v4f64_ty, llvm_v4f64_ty, llvm_v4f64_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_vfnmsub_pd_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vfnmsubpd512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8f64_ty];
  list<LLVMType> ParamTypes = [llvm_v8f64_ty, llvm_v8f64_ty, llvm_v8f64_ty, llvm_i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_vfnmsub_ps_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vfnmsubps128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_v4f32_ty, llvm_v4f32_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_vfnmsub_ps_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vfnmsubps256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8f32_ty];
  list<LLVMType> ParamTypes = [llvm_v8f32_ty, llvm_v8f32_ty, llvm_v8f32_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_vfnmsub_ps_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vfnmsubps512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16f32_ty];
  list<LLVMType> ParamTypes = [llvm_v16f32_ty, llvm_v16f32_ty, llvm_v16f32_ty, llvm_i16_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_vpermi2var_d_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vpermi2vard128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty, llvm_v4i32_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_vpermi2var_d_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vpermi2vard256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i32_ty];
  list<LLVMType> ParamTypes = [llvm_v8i32_ty, llvm_v8i32_ty, llvm_v8i32_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_vpermi2var_d_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vpermi2vard512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i32_ty, llvm_v16i32_ty, llvm_v16i32_ty, llvm_i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_vpermi2var_hi_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vpermi2varhi128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty, llvm_v8i16_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_vpermi2var_hi_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vpermi2varhi256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i16_ty];
  list<LLVMType> ParamTypes = [llvm_v16i16_ty, llvm_v16i16_ty, llvm_v16i16_ty, llvm_i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_vpermi2var_hi_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vpermi2varhi512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v32i16_ty];
  list<LLVMType> ParamTypes = [llvm_v32i16_ty, llvm_v32i16_ty, llvm_v32i16_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_vpermi2var_pd_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vpermi2varpd128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2f64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_v2i64_ty, llvm_v2f64_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_vpermi2var_pd_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vpermi2varpd256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f64_ty];
  list<LLVMType> ParamTypes = [llvm_v4f64_ty, llvm_v4i64_ty, llvm_v4f64_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_vpermi2var_pd_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vpermi2varpd512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8f64_ty];
  list<LLVMType> ParamTypes = [llvm_v8f64_ty, llvm_v8i64_ty, llvm_v8f64_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_vpermi2var_ps_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vpermi2varps128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_v4i32_ty, llvm_v4f32_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_vpermi2var_ps_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vpermi2varps256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8f32_ty];
  list<LLVMType> ParamTypes = [llvm_v8f32_ty, llvm_v8i32_ty, llvm_v8f32_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_vpermi2var_ps_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vpermi2varps512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16f32_ty];
  list<LLVMType> ParamTypes = [llvm_v16f32_ty, llvm_v16i32_ty, llvm_v16f32_ty, llvm_i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_vpermi2var_q_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vpermi2varq128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_v2i64_ty, llvm_v2i64_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_vpermi2var_q_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vpermi2varq256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4i64_ty];
  list<LLVMType> ParamTypes = [llvm_v4i64_ty, llvm_v4i64_ty, llvm_v4i64_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_vpermi2var_q_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vpermi2varq512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i64_ty];
  list<LLVMType> ParamTypes = [llvm_v8i64_ty, llvm_v8i64_ty, llvm_v8i64_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_vpermt2var_d_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vpermt2vard128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty, llvm_v4i32_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_vpermt2var_d_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vpermt2vard256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i32_ty];
  list<LLVMType> ParamTypes = [llvm_v8i32_ty, llvm_v8i32_ty, llvm_v8i32_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_vpermt2var_d_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vpermt2vard512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i32_ty, llvm_v16i32_ty, llvm_v16i32_ty, llvm_i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_vpermt2var_hi_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vpermt2varhi128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty, llvm_v8i16_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_vpermt2var_hi_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vpermt2varhi256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i16_ty];
  list<LLVMType> ParamTypes = [llvm_v16i16_ty, llvm_v16i16_ty, llvm_v16i16_ty, llvm_i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_vpermt2var_hi_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vpermt2varhi512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v32i16_ty];
  list<LLVMType> ParamTypes = [llvm_v32i16_ty, llvm_v32i16_ty, llvm_v32i16_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_vpermt2var_pd_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vpermt2varpd128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2f64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_v2f64_ty, llvm_v2f64_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_vpermt2var_pd_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vpermt2varpd256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f64_ty];
  list<LLVMType> ParamTypes = [llvm_v4i64_ty, llvm_v4f64_ty, llvm_v4f64_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_vpermt2var_pd_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vpermt2varpd512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8f64_ty];
  list<LLVMType> ParamTypes = [llvm_v8i64_ty, llvm_v8f64_ty, llvm_v8f64_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_vpermt2var_ps_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vpermt2varps128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4f32_ty, llvm_v4f32_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_vpermt2var_ps_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vpermt2varps256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8f32_ty];
  list<LLVMType> ParamTypes = [llvm_v8i32_ty, llvm_v8f32_ty, llvm_v8f32_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_vpermt2var_ps_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vpermt2varps512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16f32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i32_ty, llvm_v16f32_ty, llvm_v16f32_ty, llvm_i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_vpermt2var_q_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vpermt2varq128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_v2i64_ty, llvm_v2i64_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_vpermt2var_q_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vpermt2varq256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4i64_ty];
  list<LLVMType> ParamTypes = [llvm_v4i64_ty, llvm_v4i64_ty, llvm_v4i64_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_vpermt2var_q_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vpermt2varq512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i64_ty];
  list<LLVMType> ParamTypes = [llvm_v8i64_ty, llvm_v8i64_ty, llvm_v8i64_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_xor_pd_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_xorpd128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2f64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_v2f64_ty, llvm_v2f64_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_xor_pd_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_xorpd256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f64_ty];
  list<LLVMType> ParamTypes = [llvm_v4f64_ty, llvm_v4f64_ty, llvm_v4f64_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_xor_pd_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_xorpd512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8f64_ty];
  list<LLVMType> ParamTypes = [llvm_v8f64_ty, llvm_v8f64_ty, llvm_v8f64_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_xor_ps_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_xorps128_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_v4f32_ty, llvm_v4f32_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_xor_ps_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_xorps256_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8f32_ty];
  list<LLVMType> ParamTypes = [llvm_v8f32_ty, llvm_v8f32_ty, llvm_v8f32_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_mask_xor_ps_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_xorps512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16f32_ty];
  list<LLVMType> ParamTypes = [llvm_v16f32_ty, llvm_v16f32_ty, llvm_v16f32_ty, llvm_i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_maskz_vfmadd_pd_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vfmaddpd128_maskz";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2f64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_v2f64_ty, llvm_v2f64_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_maskz_vfmadd_pd_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vfmaddpd256_maskz";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f64_ty];
  list<LLVMType> ParamTypes = [llvm_v4f64_ty, llvm_v4f64_ty, llvm_v4f64_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_maskz_vfmadd_pd_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vfmaddpd512_maskz";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8f64_ty];
  list<LLVMType> ParamTypes = [llvm_v8f64_ty, llvm_v8f64_ty, llvm_v8f64_ty, llvm_i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_maskz_vfmadd_ps_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vfmaddps128_maskz";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_v4f32_ty, llvm_v4f32_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_maskz_vfmadd_ps_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vfmaddps256_maskz";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8f32_ty];
  list<LLVMType> ParamTypes = [llvm_v8f32_ty, llvm_v8f32_ty, llvm_v8f32_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_maskz_vfmadd_ps_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vfmaddps512_maskz";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16f32_ty];
  list<LLVMType> ParamTypes = [llvm_v16f32_ty, llvm_v16f32_ty, llvm_v16f32_ty, llvm_i16_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_maskz_vfmaddsub_pd_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vfmaddsubpd128_maskz";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2f64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_v2f64_ty, llvm_v2f64_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_maskz_vfmaddsub_pd_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vfmaddsubpd256_maskz";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f64_ty];
  list<LLVMType> ParamTypes = [llvm_v4f64_ty, llvm_v4f64_ty, llvm_v4f64_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_maskz_vfmaddsub_pd_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vfmaddsubpd512_maskz";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8f64_ty];
  list<LLVMType> ParamTypes = [llvm_v8f64_ty, llvm_v8f64_ty, llvm_v8f64_ty, llvm_i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_maskz_vfmaddsub_ps_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vfmaddsubps128_maskz";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_v4f32_ty, llvm_v4f32_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_maskz_vfmaddsub_ps_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vfmaddsubps256_maskz";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8f32_ty];
  list<LLVMType> ParamTypes = [llvm_v8f32_ty, llvm_v8f32_ty, llvm_v8f32_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_maskz_vfmaddsub_ps_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vfmaddsubps512_maskz";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16f32_ty];
  list<LLVMType> ParamTypes = [llvm_v16f32_ty, llvm_v16f32_ty, llvm_v16f32_ty, llvm_i16_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_maskz_vpermt2var_d_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vpermt2vard128_maskz";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty, llvm_v4i32_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_maskz_vpermt2var_d_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vpermt2vard256_maskz";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i32_ty];
  list<LLVMType> ParamTypes = [llvm_v8i32_ty, llvm_v8i32_ty, llvm_v8i32_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_maskz_vpermt2var_d_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vpermt2vard512_maskz";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i32_ty, llvm_v16i32_ty, llvm_v16i32_ty, llvm_i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_maskz_vpermt2var_hi_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vpermt2varhi128_maskz";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty, llvm_v8i16_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_maskz_vpermt2var_hi_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vpermt2varhi256_maskz";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i16_ty];
  list<LLVMType> ParamTypes = [llvm_v16i16_ty, llvm_v16i16_ty, llvm_v16i16_ty, llvm_i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_maskz_vpermt2var_hi_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vpermt2varhi512_maskz";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v32i16_ty];
  list<LLVMType> ParamTypes = [llvm_v32i16_ty, llvm_v32i16_ty, llvm_v32i16_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_maskz_vpermt2var_pd_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vpermt2varpd128_maskz";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2f64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_v2f64_ty, llvm_v2f64_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_maskz_vpermt2var_pd_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vpermt2varpd256_maskz";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f64_ty];
  list<LLVMType> ParamTypes = [llvm_v4i64_ty, llvm_v4f64_ty, llvm_v4f64_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_maskz_vpermt2var_pd_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vpermt2varpd512_maskz";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8f64_ty];
  list<LLVMType> ParamTypes = [llvm_v8i64_ty, llvm_v8f64_ty, llvm_v8f64_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_maskz_vpermt2var_ps_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vpermt2varps128_maskz";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4f32_ty, llvm_v4f32_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_maskz_vpermt2var_ps_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vpermt2varps256_maskz";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8f32_ty];
  list<LLVMType> ParamTypes = [llvm_v8i32_ty, llvm_v8f32_ty, llvm_v8f32_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_maskz_vpermt2var_ps_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vpermt2varps512_maskz";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16f32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i32_ty, llvm_v16f32_ty, llvm_v16f32_ty, llvm_i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_maskz_vpermt2var_q_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vpermt2varq128_maskz";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_v2i64_ty, llvm_v2i64_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_maskz_vpermt2var_q_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vpermt2varq256_maskz";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4i64_ty];
  list<LLVMType> ParamTypes = [llvm_v4i64_ty, llvm_v4i64_ty, llvm_v4i64_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_maskz_vpermt2var_q_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vpermt2varq512_maskz";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i64_ty];
  list<LLVMType> ParamTypes = [llvm_v8i64_ty, llvm_v8i64_ty, llvm_v8i64_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_movntdqa {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_movntdqa512";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i64_ty];
  list<LLVMType> ParamTypes = [llvm_ptr_ty];
  list<IntrinsicProperty> Properties = [IntrReadMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_pbroadcastd_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pbroadcastd512";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_pbroadcastd_i32_512 {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_pbroadcastq_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pbroadcastq512";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_pbroadcastq_i64_512 {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_pmovzxbd {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmovzxbd512";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_pmovzxbq {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmovzxbq512";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i64_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_pmovzxdq {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmovzxdq512";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i64_ty];
  list<LLVMType> ParamTypes = [llvm_v8i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_pmovzxwd {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmovzxwd512";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_pmovzxwq {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmovzxwq512";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i64_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_rcp14_pd_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_rcp14pd512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8f64_ty];
  list<LLVMType> ParamTypes = [llvm_v8f64_ty, llvm_v8f64_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_rcp14_ps_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_rcp14ps512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16f32_ty];
  list<LLVMType> ParamTypes = [llvm_v16f32_ty, llvm_v16f32_ty, llvm_i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_rcp14_sd {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_rcp14sd_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2f64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_v2f64_ty, llvm_v2f64_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_rcp14_ss {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_rcp14ss_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_v4f32_ty, llvm_v4f32_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_rcp28_pd {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_rcp28pd_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8f64_ty];
  list<LLVMType> ParamTypes = [llvm_v8f64_ty, llvm_v8f64_ty, llvm_i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_rcp28_ps {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_rcp28ps_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16f32_ty];
  list<LLVMType> ParamTypes = [llvm_v16f32_ty, llvm_v16f32_ty, llvm_i16_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_rcp28_sd {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_rcp28sd_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2f64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_v2f64_ty, llvm_v2f64_ty, llvm_i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_rcp28_ss {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_rcp28ss_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_v4f32_ty, llvm_v4f32_ty, llvm_i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_rsqrt14_pd_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_rsqrt14pd512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8f64_ty];
  list<LLVMType> ParamTypes = [llvm_v8f64_ty, llvm_v8f64_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_rsqrt14_ps_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_rsqrt14ps512_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16f32_ty];
  list<LLVMType> ParamTypes = [llvm_v16f32_ty, llvm_v16f32_ty, llvm_i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_rsqrt14_sd {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_rsqrt14sd_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2f64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_v2f64_ty, llvm_v2f64_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_rsqrt14_ss {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_rsqrt14ss_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_v4f32_ty, llvm_v4f32_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_rsqrt28_pd {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_rsqrt28pd_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8f64_ty];
  list<LLVMType> ParamTypes = [llvm_v8f64_ty, llvm_v8f64_ty, llvm_i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_rsqrt28_ps {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_rsqrt28ps_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16f32_ty];
  list<LLVMType> ParamTypes = [llvm_v16f32_ty, llvm_v16f32_ty, llvm_i16_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_rsqrt28_sd {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_rsqrt28sd_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2f64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_v2f64_ty, llvm_v2f64_ty, llvm_i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_rsqrt28_ss {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_rsqrt28ss_mask";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_v4f32_ty, llvm_v4f32_ty, llvm_i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_scatter_dpd_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_scattersiv8df";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_i8_ty, llvm_v8i32_ty, llvm_v8f64_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrReadWriteArgMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_scatter_dpi_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_scattersiv16si";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_i16_ty, llvm_v16i32_ty, llvm_v16i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrReadWriteArgMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_scatter_dpq_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_scattersiv8di";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_i8_ty, llvm_v8i32_ty, llvm_v8i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrReadWriteArgMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_scatter_dps_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_scattersiv16sf";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_i16_ty, llvm_v16i32_ty, llvm_v16f32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrReadWriteArgMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_scatter_qpd_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_scatterdiv8df";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_i8_ty, llvm_v8i64_ty, llvm_v8f64_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrReadWriteArgMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_scatter_qpi_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_scatterdiv16si";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_i8_ty, llvm_v8i64_ty, llvm_v8i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrReadWriteArgMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_scatter_qpq_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_scatterdiv8di";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_i8_ty, llvm_v8i64_ty, llvm_v8i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrReadWriteArgMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_scatter_qps_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_scatterdiv16sf";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_i8_ty, llvm_v8i64_ty, llvm_v8f32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrReadWriteArgMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_scatterdiv2_df {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_scatterdiv2df";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_i8_ty, llvm_v2i64_ty, llvm_v2f64_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrReadWriteArgMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_scatterdiv2_di {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_scatterdiv2di";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_i8_ty, llvm_v2i64_ty, llvm_v2i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrReadWriteArgMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_scatterdiv4_df {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_scatterdiv4df";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_i8_ty, llvm_v4i64_ty, llvm_v4f64_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrReadWriteArgMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_scatterdiv4_di {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_scatterdiv4di";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_i8_ty, llvm_v4i64_ty, llvm_v4i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrReadWriteArgMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_scatterdiv4_sf {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_scatterdiv4sf";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_i8_ty, llvm_v2i64_ty, llvm_v4f32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrReadWriteArgMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_scatterdiv4_si {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_scatterdiv4si";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_i8_ty, llvm_v2i64_ty, llvm_v4i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrReadWriteArgMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_scatterdiv8_sf {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_scatterdiv8sf";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_i8_ty, llvm_v4i64_ty, llvm_v4f32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrReadWriteArgMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_scatterdiv8_si {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_scatterdiv8si";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_i8_ty, llvm_v4i64_ty, llvm_v4i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrReadWriteArgMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_scatterpf_dpd_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_scatterpfdpd";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i8_ty, llvm_v8i32_ty, llvm_ptr_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrReadWriteArgMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_scatterpf_dps_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_scatterpfdps";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i16_ty, llvm_v16i32_ty, llvm_ptr_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrReadWriteArgMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_scatterpf_qpd_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_scatterpfqpd";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i8_ty, llvm_v8i64_ty, llvm_ptr_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrReadWriteArgMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_scatterpf_qps_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_scatterpfqps";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i8_ty, llvm_v8i64_ty, llvm_ptr_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrReadWriteArgMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_scattersiv2_df {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_scattersiv2df";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_i8_ty, llvm_v4i32_ty, llvm_v2f64_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrReadWriteArgMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_scattersiv2_di {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_scattersiv2di";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_i8_ty, llvm_v4i32_ty, llvm_v2i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrReadWriteArgMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_scattersiv4_df {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_scattersiv4df";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_i8_ty, llvm_v4i32_ty, llvm_v4f64_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrReadWriteArgMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_scattersiv4_di {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_scattersiv4di";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_i8_ty, llvm_v4i32_ty, llvm_v4i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrReadWriteArgMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_scattersiv4_sf {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_scattersiv4sf";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_i8_ty, llvm_v4i32_ty, llvm_v4f32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrReadWriteArgMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_scattersiv4_si {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_scattersiv4si";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_i8_ty, llvm_v4i32_ty, llvm_v4i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrReadWriteArgMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_scattersiv8_sf {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_scattersiv8sf";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_i8_ty, llvm_v8i32_ty, llvm_v8f32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrReadWriteArgMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_scattersiv8_si {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_scattersiv8si";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_i8_ty, llvm_v8i32_ty, llvm_v8i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrReadWriteArgMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_sqrt_sd {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_sqrtrndsd";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2f64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_v2f64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_sqrt_ss {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_sqrtrndss";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_v4f32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_vbroadcast_sd_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vbroadcastsd512";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8f64_ty];
  list<LLVMType> ParamTypes = [llvm_ptr_ty];
  list<IntrinsicProperty> Properties = [IntrReadArgMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_vbroadcast_sd_pd_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vbroadcastsd_pd512";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8f64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_vbroadcast_ss_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vbroadcastss512";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16f32_ty];
  list<LLVMType> ParamTypes = [llvm_ptr_ty];
  list<IntrinsicProperty> Properties = [IntrReadArgMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx512_vbroadcast_ss_ps_512 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vbroadcastss_ps512";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16f32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx_addsub_pd_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_addsubpd256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f64_ty];
  list<LLVMType> ParamTypes = [llvm_v4f64_ty, llvm_v4f64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx_addsub_ps_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_addsubps256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8f32_ty];
  list<LLVMType> ParamTypes = [llvm_v8f32_ty, llvm_v8f32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx_blendv_pd_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_blendvpd256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f64_ty];
  list<LLVMType> ParamTypes = [llvm_v4f64_ty, llvm_v4f64_ty, llvm_v4f64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx_blendv_ps_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_blendvps256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8f32_ty];
  list<LLVMType> ParamTypes = [llvm_v8f32_ty, llvm_v8f32_ty, llvm_v8f32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx_cmp_pd_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_cmppd256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f64_ty];
  list<LLVMType> ParamTypes = [llvm_v4f64_ty, llvm_v4f64_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx_cmp_ps_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_cmpps256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8f32_ty];
  list<LLVMType> ParamTypes = [llvm_v8f32_ty, llvm_v8f32_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx_cvt_pd2_ps_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_cvtpd2ps256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx_cvt_pd2dq_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_cvtpd2dq256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx_cvt_ps2_pd_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_cvtps2pd256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f64_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx_cvt_ps2dq_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_cvtps2dq256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i32_ty];
  list<LLVMType> ParamTypes = [llvm_v8f32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx_cvtdq2_pd_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_cvtdq2pd256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f64_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx_cvtdq2_ps_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_cvtdq2ps256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8f32_ty];
  list<LLVMType> ParamTypes = [llvm_v8i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx_cvtt_pd2dq_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_cvttpd2dq256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx_cvtt_ps2dq_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_cvttps2dq256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i32_ty];
  list<LLVMType> ParamTypes = [llvm_v8f32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx_dp_ps_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_dpps256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8f32_ty];
  list<LLVMType> ParamTypes = [llvm_v8f32_ty, llvm_v8f32_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx_hadd_pd_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_haddpd256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f64_ty];
  list<LLVMType> ParamTypes = [llvm_v4f64_ty, llvm_v4f64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx_hadd_ps_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_haddps256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8f32_ty];
  list<LLVMType> ParamTypes = [llvm_v8f32_ty, llvm_v8f32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx_hsub_pd_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_hsubpd256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f64_ty];
  list<LLVMType> ParamTypes = [llvm_v4f64_ty, llvm_v4f64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx_hsub_ps_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_hsubps256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8f32_ty];
  list<LLVMType> ParamTypes = [llvm_v8f32_ty, llvm_v8f32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx_ldu_dq_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_lddqu256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v32i8_ty];
  list<LLVMType> ParamTypes = [llvm_ptr_ty];
  list<IntrinsicProperty> Properties = [IntrReadMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx_maskload_pd {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_maskloadpd";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2f64_ty];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_v2f64_ty];
  list<IntrinsicProperty> Properties = [IntrReadArgMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx_maskload_pd_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_maskloadpd256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f64_ty];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_v4f64_ty];
  list<IntrinsicProperty> Properties = [IntrReadArgMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx_maskload_ps {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_maskloadps";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_v4f32_ty];
  list<IntrinsicProperty> Properties = [IntrReadArgMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx_maskload_ps_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_maskloadps256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8f32_ty];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_v8f32_ty];
  list<IntrinsicProperty> Properties = [IntrReadArgMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx_maskstore_pd {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_maskstorepd";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_v2f64_ty, llvm_v2f64_ty];
  list<IntrinsicProperty> Properties = [IntrReadWriteArgMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx_maskstore_pd_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_maskstorepd256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_v4f64_ty, llvm_v4f64_ty];
  list<IntrinsicProperty> Properties = [IntrReadWriteArgMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx_maskstore_ps {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_maskstoreps";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_v4f32_ty, llvm_v4f32_ty];
  list<IntrinsicProperty> Properties = [IntrReadWriteArgMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx_maskstore_ps_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_maskstoreps256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_v8f32_ty, llvm_v8f32_ty];
  list<IntrinsicProperty> Properties = [IntrReadWriteArgMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx_max_pd_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_maxpd256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f64_ty];
  list<LLVMType> ParamTypes = [llvm_v4f64_ty, llvm_v4f64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx_max_ps_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_maxps256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8f32_ty];
  list<LLVMType> ParamTypes = [llvm_v8f32_ty, llvm_v8f32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx_min_pd_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_minpd256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f64_ty];
  list<LLVMType> ParamTypes = [llvm_v4f64_ty, llvm_v4f64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx_min_ps_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_minps256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8f32_ty];
  list<LLVMType> ParamTypes = [llvm_v8f32_ty, llvm_v8f32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx_movmsk_pd_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_movmskpd256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx_movmsk_ps_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_movmskps256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_v8f32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx_ptestc_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_ptestc256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i64_ty, llvm_v4i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx_ptestnzc_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_ptestnzc256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i64_ty, llvm_v4i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx_ptestz_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_ptestz256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i64_ty, llvm_v4i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx_rcp_ps_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_rcpps256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8f32_ty];
  list<LLVMType> ParamTypes = [llvm_v8f32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx_round_pd_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_roundpd256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f64_ty];
  list<LLVMType> ParamTypes = [llvm_v4f64_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx_round_ps_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_roundps256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8f32_ty];
  list<LLVMType> ParamTypes = [llvm_v8f32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx_rsqrt_ps_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_rsqrtps256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8f32_ty];
  list<LLVMType> ParamTypes = [llvm_v8f32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx_sqrt_pd_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_sqrtpd256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f64_ty];
  list<LLVMType> ParamTypes = [llvm_v4f64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx_sqrt_ps_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_sqrtps256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8f32_ty];
  list<LLVMType> ParamTypes = [llvm_v8f32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx_storeu_dq_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_storedqu256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_v32i8_ty];
  list<IntrinsicProperty> Properties = [IntrReadWriteArgMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx_storeu_pd_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_storeupd256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_v4f64_ty];
  list<IntrinsicProperty> Properties = [IntrReadWriteArgMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx_storeu_ps_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_storeups256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_v8f32_ty];
  list<IntrinsicProperty> Properties = [IntrReadWriteArgMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx_vbroadcastf128_pd_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vbroadcastf128_pd256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f64_ty];
  list<LLVMType> ParamTypes = [llvm_ptr_ty];
  list<IntrinsicProperty> Properties = [IntrReadArgMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx_vbroadcastf128_ps_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vbroadcastf128_ps256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8f32_ty];
  list<LLVMType> ParamTypes = [llvm_ptr_ty];
  list<IntrinsicProperty> Properties = [IntrReadArgMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx_vperm2f128_pd_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vperm2f128_pd256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f64_ty];
  list<LLVMType> ParamTypes = [llvm_v4f64_ty, llvm_v4f64_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx_vperm2f128_ps_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vperm2f128_ps256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8f32_ty];
  list<LLVMType> ParamTypes = [llvm_v8f32_ty, llvm_v8f32_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx_vperm2f128_si_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vperm2f128_si256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i32_ty];
  list<LLVMType> ParamTypes = [llvm_v8i32_ty, llvm_v8i32_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx_vpermilvar_pd {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vpermilvarpd";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2f64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_v2i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx_vpermilvar_pd_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vpermilvarpd256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f64_ty];
  list<LLVMType> ParamTypes = [llvm_v4f64_ty, llvm_v4i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx_vpermilvar_ps {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vpermilvarps";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx_vpermilvar_ps_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vpermilvarps256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8f32_ty];
  list<LLVMType> ParamTypes = [llvm_v8f32_ty, llvm_v8i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx_vtestc_pd {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vtestcpd";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_v2f64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx_vtestc_pd_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vtestcpd256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f64_ty, llvm_v4f64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx_vtestc_ps {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vtestcps";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_v4f32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx_vtestc_ps_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vtestcps256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_v8f32_ty, llvm_v8f32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx_vtestnzc_pd {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vtestnzcpd";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_v2f64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx_vtestnzc_pd_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vtestnzcpd256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f64_ty, llvm_v4f64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx_vtestnzc_ps {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vtestnzcps";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_v4f32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx_vtestnzc_ps_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vtestnzcps256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_v8f32_ty, llvm_v8f32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx_vtestz_pd {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vtestzpd";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_v2f64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx_vtestz_pd_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vtestzpd256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f64_ty, llvm_v4f64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx_vtestz_ps {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vtestzps";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_v4f32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx_vtestz_ps_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vtestzps256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_v8f32_ty, llvm_v8f32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx_vzeroall {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vzeroall";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_avx_vzeroupper {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vzeroupper";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_bmi_bextr_32 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_bextr_u32";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_bmi_bextr_64 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_bextr_u64";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_bmi_bzhi_32 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_bzhi_si";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_bmi_bzhi_64 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_bzhi_di";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_bmi_pdep_32 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pdep_si";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_bmi_pdep_64 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pdep_di";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_bmi_pext_32 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pext_si";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_bmi_pext_64 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pext_di";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_fma_vfmadd_pd {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vfmaddpd";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2f64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_v2f64_ty, llvm_v2f64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_fma_vfmadd_pd_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vfmaddpd256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f64_ty];
  list<LLVMType> ParamTypes = [llvm_v4f64_ty, llvm_v4f64_ty, llvm_v4f64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_fma_vfmadd_ps {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vfmaddps";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_v4f32_ty, llvm_v4f32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_fma_vfmadd_ps_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vfmaddps256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8f32_ty];
  list<LLVMType> ParamTypes = [llvm_v8f32_ty, llvm_v8f32_ty, llvm_v8f32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_fma_vfmadd_sd {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vfmaddsd";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2f64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_v2f64_ty, llvm_v2f64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_fma_vfmadd_ss {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vfmaddss";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_v4f32_ty, llvm_v4f32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_fma_vfmaddsub_pd {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vfmaddsubpd";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2f64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_v2f64_ty, llvm_v2f64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_fma_vfmaddsub_pd_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vfmaddsubpd256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f64_ty];
  list<LLVMType> ParamTypes = [llvm_v4f64_ty, llvm_v4f64_ty, llvm_v4f64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_fma_vfmaddsub_ps {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vfmaddsubps";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_v4f32_ty, llvm_v4f32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_fma_vfmaddsub_ps_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vfmaddsubps256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8f32_ty];
  list<LLVMType> ParamTypes = [llvm_v8f32_ty, llvm_v8f32_ty, llvm_v8f32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_fma_vfmsub_pd {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vfmsubpd";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2f64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_v2f64_ty, llvm_v2f64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_fma_vfmsub_pd_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vfmsubpd256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f64_ty];
  list<LLVMType> ParamTypes = [llvm_v4f64_ty, llvm_v4f64_ty, llvm_v4f64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_fma_vfmsub_ps {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vfmsubps";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_v4f32_ty, llvm_v4f32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_fma_vfmsub_ps_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vfmsubps256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8f32_ty];
  list<LLVMType> ParamTypes = [llvm_v8f32_ty, llvm_v8f32_ty, llvm_v8f32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_fma_vfmsub_sd {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vfmsubsd";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2f64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_v2f64_ty, llvm_v2f64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_fma_vfmsub_ss {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vfmsubss";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_v4f32_ty, llvm_v4f32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_fma_vfmsubadd_pd {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vfmsubaddpd";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2f64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_v2f64_ty, llvm_v2f64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_fma_vfmsubadd_pd_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vfmsubaddpd256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f64_ty];
  list<LLVMType> ParamTypes = [llvm_v4f64_ty, llvm_v4f64_ty, llvm_v4f64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_fma_vfmsubadd_ps {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vfmsubaddps";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_v4f32_ty, llvm_v4f32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_fma_vfmsubadd_ps_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vfmsubaddps256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8f32_ty];
  list<LLVMType> ParamTypes = [llvm_v8f32_ty, llvm_v8f32_ty, llvm_v8f32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_fma_vfnmadd_pd {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vfnmaddpd";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2f64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_v2f64_ty, llvm_v2f64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_fma_vfnmadd_pd_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vfnmaddpd256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f64_ty];
  list<LLVMType> ParamTypes = [llvm_v4f64_ty, llvm_v4f64_ty, llvm_v4f64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_fma_vfnmadd_ps {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vfnmaddps";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_v4f32_ty, llvm_v4f32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_fma_vfnmadd_ps_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vfnmaddps256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8f32_ty];
  list<LLVMType> ParamTypes = [llvm_v8f32_ty, llvm_v8f32_ty, llvm_v8f32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_fma_vfnmadd_sd {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vfnmaddsd";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2f64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_v2f64_ty, llvm_v2f64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_fma_vfnmadd_ss {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vfnmaddss";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_v4f32_ty, llvm_v4f32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_fma_vfnmsub_pd {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vfnmsubpd";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2f64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_v2f64_ty, llvm_v2f64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_fma_vfnmsub_pd_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vfnmsubpd256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f64_ty];
  list<LLVMType> ParamTypes = [llvm_v4f64_ty, llvm_v4f64_ty, llvm_v4f64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_fma_vfnmsub_ps {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vfnmsubps";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_v4f32_ty, llvm_v4f32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_fma_vfnmsub_ps_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vfnmsubps256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8f32_ty];
  list<LLVMType> ParamTypes = [llvm_v8f32_ty, llvm_v8f32_ty, llvm_v8f32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_fma_vfnmsub_sd {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vfnmsubsd";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2f64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_v2f64_ty, llvm_v2f64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_fma_vfnmsub_ss {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vfnmsubss";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_v4f32_ty, llvm_v4f32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_fxrstor {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_fxrstor";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_ptr_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_fxrstor64 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_fxrstor64";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_ptr_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_fxsave {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_fxsave";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_ptr_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_fxsave64 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_fxsave64";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_ptr_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_int {	// SDPatternOperator Intrinsic
  list<IntrinsicProperty> Intrinsic:properties = [];
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i8_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_mmx_emms {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_emms";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_mmx_femms {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_femms";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_mmx_maskmovq {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_maskmovq";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_x86mmx_ty, llvm_x86mmx_ty, llvm_ptr_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_mmx_movnt_dq {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_movntq";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_ptrx86mmx_ty, llvm_x86mmx_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_mmx_packssdw {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_packssdw";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_x86mmx_ty];
  list<LLVMType> ParamTypes = [llvm_x86mmx_ty, llvm_x86mmx_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_mmx_packsswb {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_packsswb";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_x86mmx_ty];
  list<LLVMType> ParamTypes = [llvm_x86mmx_ty, llvm_x86mmx_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_mmx_packuswb {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_packuswb";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_x86mmx_ty];
  list<LLVMType> ParamTypes = [llvm_x86mmx_ty, llvm_x86mmx_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_mmx_padd_b {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_paddb";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_x86mmx_ty];
  list<LLVMType> ParamTypes = [llvm_x86mmx_ty, llvm_x86mmx_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_mmx_padd_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_paddd";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_x86mmx_ty];
  list<LLVMType> ParamTypes = [llvm_x86mmx_ty, llvm_x86mmx_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_mmx_padd_q {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_paddq";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_x86mmx_ty];
  list<LLVMType> ParamTypes = [llvm_x86mmx_ty, llvm_x86mmx_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_mmx_padd_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_paddw";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_x86mmx_ty];
  list<LLVMType> ParamTypes = [llvm_x86mmx_ty, llvm_x86mmx_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_mmx_padds_b {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_paddsb";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_x86mmx_ty];
  list<LLVMType> ParamTypes = [llvm_x86mmx_ty, llvm_x86mmx_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_mmx_padds_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_paddsw";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_x86mmx_ty];
  list<LLVMType> ParamTypes = [llvm_x86mmx_ty, llvm_x86mmx_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_mmx_paddus_b {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_paddusb";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_x86mmx_ty];
  list<LLVMType> ParamTypes = [llvm_x86mmx_ty, llvm_x86mmx_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_mmx_paddus_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_paddusw";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_x86mmx_ty];
  list<LLVMType> ParamTypes = [llvm_x86mmx_ty, llvm_x86mmx_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_mmx_palignr_b {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_palignr";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_x86mmx_ty];
  list<LLVMType> ParamTypes = [llvm_x86mmx_ty, llvm_x86mmx_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_mmx_pand {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pand";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_x86mmx_ty];
  list<LLVMType> ParamTypes = [llvm_x86mmx_ty, llvm_x86mmx_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_mmx_pandn {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pandn";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_x86mmx_ty];
  list<LLVMType> ParamTypes = [llvm_x86mmx_ty, llvm_x86mmx_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_mmx_pavg_b {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pavgb";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_x86mmx_ty];
  list<LLVMType> ParamTypes = [llvm_x86mmx_ty, llvm_x86mmx_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_mmx_pavg_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pavgw";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_x86mmx_ty];
  list<LLVMType> ParamTypes = [llvm_x86mmx_ty, llvm_x86mmx_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_mmx_pcmpeq_b {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pcmpeqb";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_x86mmx_ty];
  list<LLVMType> ParamTypes = [llvm_x86mmx_ty, llvm_x86mmx_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_mmx_pcmpeq_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pcmpeqd";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_x86mmx_ty];
  list<LLVMType> ParamTypes = [llvm_x86mmx_ty, llvm_x86mmx_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_mmx_pcmpeq_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pcmpeqw";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_x86mmx_ty];
  list<LLVMType> ParamTypes = [llvm_x86mmx_ty, llvm_x86mmx_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_mmx_pcmpgt_b {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pcmpgtb";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_x86mmx_ty];
  list<LLVMType> ParamTypes = [llvm_x86mmx_ty, llvm_x86mmx_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_mmx_pcmpgt_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pcmpgtd";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_x86mmx_ty];
  list<LLVMType> ParamTypes = [llvm_x86mmx_ty, llvm_x86mmx_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_mmx_pcmpgt_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pcmpgtw";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_x86mmx_ty];
  list<LLVMType> ParamTypes = [llvm_x86mmx_ty, llvm_x86mmx_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_mmx_pextr_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vec_ext_v4hi";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_x86mmx_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_mmx_pinsr_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vec_set_v4hi";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_x86mmx_ty];
  list<LLVMType> ParamTypes = [llvm_x86mmx_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_mmx_pmadd_wd {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmaddwd";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_x86mmx_ty];
  list<LLVMType> ParamTypes = [llvm_x86mmx_ty, llvm_x86mmx_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_mmx_pmaxs_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmaxsw";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_x86mmx_ty];
  list<LLVMType> ParamTypes = [llvm_x86mmx_ty, llvm_x86mmx_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_mmx_pmaxu_b {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmaxub";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_x86mmx_ty];
  list<LLVMType> ParamTypes = [llvm_x86mmx_ty, llvm_x86mmx_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_mmx_pmins_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pminsw";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_x86mmx_ty];
  list<LLVMType> ParamTypes = [llvm_x86mmx_ty, llvm_x86mmx_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_mmx_pminu_b {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pminub";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_x86mmx_ty];
  list<LLVMType> ParamTypes = [llvm_x86mmx_ty, llvm_x86mmx_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_mmx_pmovmskb {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmovmskb";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_x86mmx_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_mmx_pmulh_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmulhw";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_x86mmx_ty];
  list<LLVMType> ParamTypes = [llvm_x86mmx_ty, llvm_x86mmx_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_mmx_pmulhu_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmulhuw";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_x86mmx_ty];
  list<LLVMType> ParamTypes = [llvm_x86mmx_ty, llvm_x86mmx_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_mmx_pmull_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmullw";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_x86mmx_ty];
  list<LLVMType> ParamTypes = [llvm_x86mmx_ty, llvm_x86mmx_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_mmx_pmulu_dq {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmuludq";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_x86mmx_ty];
  list<LLVMType> ParamTypes = [llvm_x86mmx_ty, llvm_x86mmx_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_mmx_por {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_por";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_x86mmx_ty];
  list<LLVMType> ParamTypes = [llvm_x86mmx_ty, llvm_x86mmx_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_mmx_psad_bw {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_psadbw";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_x86mmx_ty];
  list<LLVMType> ParamTypes = [llvm_x86mmx_ty, llvm_x86mmx_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_mmx_psll_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pslld";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_x86mmx_ty];
  list<LLVMType> ParamTypes = [llvm_x86mmx_ty, llvm_x86mmx_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_mmx_psll_q {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_psllq";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_x86mmx_ty];
  list<LLVMType> ParamTypes = [llvm_x86mmx_ty, llvm_x86mmx_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_mmx_psll_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_psllw";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_x86mmx_ty];
  list<LLVMType> ParamTypes = [llvm_x86mmx_ty, llvm_x86mmx_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_mmx_pslli_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pslldi";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_x86mmx_ty];
  list<LLVMType> ParamTypes = [llvm_x86mmx_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_mmx_pslli_q {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_psllqi";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_x86mmx_ty];
  list<LLVMType> ParamTypes = [llvm_x86mmx_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_mmx_pslli_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_psllwi";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_x86mmx_ty];
  list<LLVMType> ParamTypes = [llvm_x86mmx_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_mmx_psra_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_psrad";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_x86mmx_ty];
  list<LLVMType> ParamTypes = [llvm_x86mmx_ty, llvm_x86mmx_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_mmx_psra_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_psraw";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_x86mmx_ty];
  list<LLVMType> ParamTypes = [llvm_x86mmx_ty, llvm_x86mmx_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_mmx_psrai_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_psradi";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_x86mmx_ty];
  list<LLVMType> ParamTypes = [llvm_x86mmx_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_mmx_psrai_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_psrawi";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_x86mmx_ty];
  list<LLVMType> ParamTypes = [llvm_x86mmx_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_mmx_psrl_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_psrld";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_x86mmx_ty];
  list<LLVMType> ParamTypes = [llvm_x86mmx_ty, llvm_x86mmx_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_mmx_psrl_q {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_psrlq";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_x86mmx_ty];
  list<LLVMType> ParamTypes = [llvm_x86mmx_ty, llvm_x86mmx_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_mmx_psrl_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_psrlw";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_x86mmx_ty];
  list<LLVMType> ParamTypes = [llvm_x86mmx_ty, llvm_x86mmx_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_mmx_psrli_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_psrldi";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_x86mmx_ty];
  list<LLVMType> ParamTypes = [llvm_x86mmx_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_mmx_psrli_q {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_psrlqi";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_x86mmx_ty];
  list<LLVMType> ParamTypes = [llvm_x86mmx_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_mmx_psrli_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_psrlwi";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_x86mmx_ty];
  list<LLVMType> ParamTypes = [llvm_x86mmx_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_mmx_psub_b {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_psubb";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_x86mmx_ty];
  list<LLVMType> ParamTypes = [llvm_x86mmx_ty, llvm_x86mmx_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_mmx_psub_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_psubd";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_x86mmx_ty];
  list<LLVMType> ParamTypes = [llvm_x86mmx_ty, llvm_x86mmx_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_mmx_psub_q {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_psubq";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_x86mmx_ty];
  list<LLVMType> ParamTypes = [llvm_x86mmx_ty, llvm_x86mmx_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_mmx_psub_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_psubw";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_x86mmx_ty];
  list<LLVMType> ParamTypes = [llvm_x86mmx_ty, llvm_x86mmx_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_mmx_psubs_b {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_psubsb";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_x86mmx_ty];
  list<LLVMType> ParamTypes = [llvm_x86mmx_ty, llvm_x86mmx_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_mmx_psubs_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_psubsw";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_x86mmx_ty];
  list<LLVMType> ParamTypes = [llvm_x86mmx_ty, llvm_x86mmx_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_mmx_psubus_b {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_psubusb";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_x86mmx_ty];
  list<LLVMType> ParamTypes = [llvm_x86mmx_ty, llvm_x86mmx_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_mmx_psubus_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_psubusw";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_x86mmx_ty];
  list<LLVMType> ParamTypes = [llvm_x86mmx_ty, llvm_x86mmx_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_mmx_punpckhbw {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_punpckhbw";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_x86mmx_ty];
  list<LLVMType> ParamTypes = [llvm_x86mmx_ty, llvm_x86mmx_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_mmx_punpckhdq {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_punpckhdq";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_x86mmx_ty];
  list<LLVMType> ParamTypes = [llvm_x86mmx_ty, llvm_x86mmx_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_mmx_punpckhwd {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_punpckhwd";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_x86mmx_ty];
  list<LLVMType> ParamTypes = [llvm_x86mmx_ty, llvm_x86mmx_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_mmx_punpcklbw {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_punpcklbw";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_x86mmx_ty];
  list<LLVMType> ParamTypes = [llvm_x86mmx_ty, llvm_x86mmx_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_mmx_punpckldq {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_punpckldq";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_x86mmx_ty];
  list<LLVMType> ParamTypes = [llvm_x86mmx_ty, llvm_x86mmx_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_mmx_punpcklwd {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_punpcklwd";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_x86mmx_ty];
  list<LLVMType> ParamTypes = [llvm_x86mmx_ty, llvm_x86mmx_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_mmx_pxor {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pxor";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_x86mmx_ty];
  list<LLVMType> ParamTypes = [llvm_x86mmx_ty, llvm_x86mmx_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_pclmulqdq {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pclmulqdq128";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_v2i64_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_rdfsbase_32 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_rdfsbase32";
  list<IntrinsicProperty> Intrinsic:properties = [];
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_rdfsbase_64 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_rdfsbase64";
  list<IntrinsicProperty> Intrinsic:properties = [];
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_rdgsbase_32 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_rdgsbase32";
  list<IntrinsicProperty> Intrinsic:properties = [];
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_rdgsbase_64 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_rdgsbase64";
  list<IntrinsicProperty> Intrinsic:properties = [];
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_rdpmc {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_rdpmc";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_rdrand_16 {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i16_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_rdrand_32 {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_rdrand_64 {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i64_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_rdseed_16 {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i16_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_rdseed_32 {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_rdseed_64 {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i64_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_rdtsc {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_rdtsc";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_rdtscp {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_rdtscp";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_ptr_ty];
  list<IntrinsicProperty> Properties = [IntrReadWriteArgMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_seh_lsda {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_ptr_ty];
  list<LLVMType> ParamTypes = [llvm_ptr_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_seh_recoverfp {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_ptr_ty];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_ptr_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_seh_restoreframe {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sha1msg1 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_sha1msg1";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sha1msg2 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_sha1msg2";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sha1nexte {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_sha1nexte";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sha1rnds4 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_sha1rnds4";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sha256msg1 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_sha256msg1";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sha256msg2 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_sha256msg2";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sha256rnds2 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_sha256rnds2";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse2_add_sd {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_addsd";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2f64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_v2f64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse2_clflush {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_clflush";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_ptr_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse2_cmp_pd {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_cmppd";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2f64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_v2f64_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse2_cmp_sd {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_cmpsd";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2f64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_v2f64_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse2_comieq_sd {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_comisdeq";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_v2f64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse2_comige_sd {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_comisdge";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_v2f64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse2_comigt_sd {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_comisdgt";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_v2f64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse2_comile_sd {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_comisdle";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_v2f64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse2_comilt_sd {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_comisdlt";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_v2f64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse2_comineq_sd {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_comisdneq";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_v2f64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse2_cvtdq2pd {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_cvtdq2pd";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2f64_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse2_cvtdq2ps {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_cvtdq2ps";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse2_cvtpd2dq {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_cvtpd2dq";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse2_cvtpd2ps {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_cvtpd2ps";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse2_cvtps2dq {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_cvtps2dq";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse2_cvtps2pd {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_cvtps2pd";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2f64_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse2_cvtsd2si {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_cvtsd2si";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse2_cvtsd2si64 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_cvtsd2si64";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse2_cvtsd2ss {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_cvtsd2ss";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_v2f64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse2_cvtsi2sd {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_cvtsi2sd";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2f64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse2_cvtsi642sd {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_cvtsi642sd";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2f64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse2_cvtss2sd {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_cvtss2sd";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2f64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_v4f32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse2_cvttpd2dq {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_cvttpd2dq";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse2_cvttps2dq {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_cvttps2dq";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse2_cvttsd2si {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_cvttsd2si";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse2_cvttsd2si64 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_cvttsd2si64";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse2_div_sd {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_divsd";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2f64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_v2f64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse2_lfence {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_lfence";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse2_maskmov_dqu {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_maskmovdqu";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty, llvm_ptr_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse2_max_pd {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_maxpd";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2f64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_v2f64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse2_max_sd {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_maxsd";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2f64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_v2f64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse2_mfence {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_mfence";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse2_min_pd {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_minpd";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2f64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_v2f64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse2_min_sd {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_minsd";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2f64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_v2f64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse2_movmsk_pd {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_movmskpd";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse2_mul_sd {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_mulsd";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2f64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_v2f64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse2_packssdw_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_packssdw128";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse2_packsswb_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_packsswb128";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse2_packuswb_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_packuswb128";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse2_padds_b {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_paddsb128";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse2_padds_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_paddsw128";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse2_paddus_b {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_paddusb128";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse2_paddus_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_paddusw128";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse2_pause {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pause";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse2_pavg_b {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pavgb128";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse2_pavg_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pavgw128";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse2_pmadd_wd {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmaddwd128";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse2_pmaxs_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmaxsw128";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse2_pmaxu_b {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmaxub128";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse2_pmins_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pminsw128";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse2_pminu_b {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pminub128";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse2_pmovmskb_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmovmskb128";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse2_pmulh_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmulhw128";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse2_pmulhu_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmulhuw128";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse2_pmulu_dq {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmuludq128";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse2_psad_bw {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_psadbw128";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse2_pshuf_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pshufd";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse2_pshufh_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pshufhw";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse2_pshufl_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pshuflw";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse2_psll_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pslld128";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse2_psll_q {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_psllq128";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_v2i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse2_psll_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_psllw128";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse2_pslli_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pslldi128";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse2_pslli_q {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_psllqi128";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse2_pslli_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_psllwi128";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse2_psra_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_psrad128";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse2_psra_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_psraw128";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse2_psrai_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_psradi128";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse2_psrai_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_psrawi128";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse2_psrl_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_psrld128";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse2_psrl_q {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_psrlq128";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_v2i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse2_psrl_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_psrlw128";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse2_psrli_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_psrldi128";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse2_psrli_q {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_psrlqi128";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse2_psrli_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_psrlwi128";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse2_psubs_b {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_psubsb128";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse2_psubs_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_psubsw128";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse2_psubus_b {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_psubusb128";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse2_psubus_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_psubusw128";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse2_sqrt_pd {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_sqrtpd";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2f64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse2_sqrt_sd {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_sqrtsd";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2f64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse2_storel_dq {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_storelv4si";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> Properties = [IntrReadWriteArgMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse2_storeu_dq {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_storedqu";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> Properties = [IntrReadWriteArgMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse2_storeu_pd {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_storeupd";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_v2f64_ty];
  list<IntrinsicProperty> Properties = [IntrReadWriteArgMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse2_sub_sd {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_subsd";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2f64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_v2f64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse2_ucomieq_sd {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_ucomisdeq";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_v2f64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse2_ucomige_sd {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_ucomisdge";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_v2f64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse2_ucomigt_sd {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_ucomisdgt";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_v2f64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse2_ucomile_sd {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_ucomisdle";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_v2f64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse2_ucomilt_sd {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_ucomisdlt";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_v2f64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse2_ucomineq_sd {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_ucomisdneq";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_v2f64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse3_addsub_pd {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_addsubpd";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2f64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_v2f64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse3_addsub_ps {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_addsubps";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_v4f32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse3_hadd_pd {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_haddpd";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2f64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_v2f64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse3_hadd_ps {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_haddps";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_v4f32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse3_hsub_pd {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_hsubpd";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2f64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_v2f64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse3_hsub_ps {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_hsubps";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_v4f32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse3_ldu_dq {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_lddqu";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_ptr_ty];
  list<IntrinsicProperty> Properties = [IntrReadMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse3_monitor {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_monitor";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse3_mwait {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_mwait";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse41_blendvpd {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_blendvpd";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2f64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_v2f64_ty, llvm_v2f64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse41_blendvps {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_blendvps";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_v4f32_ty, llvm_v4f32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse41_dppd {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_dppd";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2f64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_v2f64_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse41_dpps {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_dpps";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_v4f32_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse41_extractps {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_extractps128";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse41_insertps {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_insertps128";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_v4f32_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse41_movntdqa {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_movntdqa";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_ptr_ty];
  list<IntrinsicProperty> Properties = [IntrReadMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse41_mpsadbw {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_mpsadbw128";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse41_packusdw {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_packusdw128";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse41_pblendvb {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pblendvb128";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse41_pextrb {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse41_pextrd {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse41_pextrq {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse41_phminposuw {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_phminposuw128";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse41_pmaxsb {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmaxsb128";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse41_pmaxsd {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmaxsd128";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse41_pmaxud {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmaxud128";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse41_pmaxuw {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmaxuw128";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse41_pminsb {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pminsb128";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse41_pminsd {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pminsd128";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse41_pminud {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pminud128";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse41_pminuw {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pminuw128";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse41_pmovsxbd {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmovsxbd128";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse41_pmovsxbq {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmovsxbq128";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse41_pmovsxbw {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmovsxbw128";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse41_pmovsxdq {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmovsxdq128";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse41_pmovsxwd {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmovsxwd128";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse41_pmovsxwq {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmovsxwq128";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse41_pmovzxbd {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmovzxbd128";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse41_pmovzxbq {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmovzxbq128";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse41_pmovzxbw {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmovzxbw128";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse41_pmovzxdq {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmovzxdq128";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse41_pmovzxwd {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmovzxwd128";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse41_pmovzxwq {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmovzxwq128";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse41_pmuldq {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmuldq128";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse41_ptestc {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_ptestc128";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_v2i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse41_ptestnzc {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_ptestnzc128";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_v2i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse41_ptestz {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_ptestz128";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_v2i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse41_round_pd {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_roundpd";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2f64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse41_round_ps {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_roundps";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse41_round_sd {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_roundsd";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2f64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_v2f64_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse41_round_ss {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_roundss";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_v4f32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse42_crc32_32_16 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_crc32hi";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse42_crc32_32_32 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_crc32si";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse42_crc32_32_8 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_crc32qi";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse42_crc32_64_64 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_crc32di";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse42_pcmpestri128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pcmpestri128";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_i32_ty, llvm_v16i8_ty, llvm_i32_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse42_pcmpestria128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pcmpestria128";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_i32_ty, llvm_v16i8_ty, llvm_i32_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse42_pcmpestric128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pcmpestric128";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_i32_ty, llvm_v16i8_ty, llvm_i32_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse42_pcmpestrio128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pcmpestrio128";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_i32_ty, llvm_v16i8_ty, llvm_i32_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse42_pcmpestris128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pcmpestris128";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_i32_ty, llvm_v16i8_ty, llvm_i32_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse42_pcmpestriz128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pcmpestriz128";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_i32_ty, llvm_v16i8_ty, llvm_i32_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse42_pcmpestrm128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pcmpestrm128";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_i32_ty, llvm_v16i8_ty, llvm_i32_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse42_pcmpistri128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pcmpistri128";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse42_pcmpistria128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pcmpistria128";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse42_pcmpistric128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pcmpistric128";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse42_pcmpistrio128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pcmpistrio128";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse42_pcmpistris128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pcmpistris128";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse42_pcmpistriz128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pcmpistriz128";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse42_pcmpistrm128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pcmpistrm128";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse4a_extrq {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_extrq";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse4a_extrqi {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_extrqi";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_i8_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse4a_insertq {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_insertq";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_v2i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse4a_insertqi {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_insertqi";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_v2i64_ty, llvm_i8_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse4a_movnt_sd {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_movntsd";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_v2f64_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse4a_movnt_ss {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_movntss";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_v4f32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse_add_ss {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_addss";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_v4f32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse_cmp_ps {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_cmpps";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_v4f32_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse_cmp_ss {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_cmpss";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_v4f32_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse_comieq_ss {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_comieq";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_v4f32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse_comige_ss {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_comige";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_v4f32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse_comigt_ss {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_comigt";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_v4f32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse_comile_ss {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_comile";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_v4f32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse_comilt_ss {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_comilt";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_v4f32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse_comineq_ss {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_comineq";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_v4f32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse_cvtpd2pi {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_cvtpd2pi";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_x86mmx_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse_cvtpi2pd {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_cvtpi2pd";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v2f64_ty];
  list<LLVMType> ParamTypes = [llvm_x86mmx_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse_cvtpi2ps {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_cvtpi2ps";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_x86mmx_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse_cvtps2pi {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_cvtps2pi";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_x86mmx_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse_cvtsi2ss {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_cvtsi2ss";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse_cvtsi642ss {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_cvtsi642ss";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse_cvtss2si {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_cvtss2si";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse_cvtss2si64 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_cvtss2si64";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse_cvttpd2pi {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_cvttpd2pi";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_x86mmx_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse_cvttps2pi {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_cvttps2pi";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_x86mmx_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse_cvttss2si {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_cvttss2si";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse_cvttss2si64 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_cvttss2si64";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse_div_ss {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_divss";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_v4f32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse_ldmxcsr {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_ptr_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse_max_ps {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_maxps";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_v4f32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse_max_ss {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_maxss";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_v4f32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse_min_ps {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_minps";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_v4f32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse_min_ss {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_minss";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_v4f32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse_movmsk_ps {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_movmskps";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse_mul_ss {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_mulss";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_v4f32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse_pshuf_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pshufw";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_x86mmx_ty];
  list<LLVMType> ParamTypes = [llvm_x86mmx_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse_rcp_ps {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_rcpps";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse_rcp_ss {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_rcpss";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse_rsqrt_ps {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_rsqrtps";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse_rsqrt_ss {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_rsqrtss";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse_sfence {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_sfence";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse_sqrt_ps {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_sqrtps";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse_sqrt_ss {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_sqrtss";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse_stmxcsr {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_ptr_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse_storeu_ps {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_storeups";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_ptr_ty, llvm_v4f32_ty];
  list<IntrinsicProperty> Properties = [IntrReadWriteArgMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse_sub_ss {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_subss";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_v4f32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse_ucomieq_ss {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_ucomieq";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_v4f32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse_ucomige_ss {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_ucomige";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_v4f32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse_ucomigt_ss {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_ucomigt";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_v4f32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse_ucomile_ss {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_ucomile";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_v4f32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse_ucomilt_ss {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_ucomilt";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_v4f32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_sse_ucomineq_ss {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_ucomineq";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_v4f32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_ssse3_pabs_b {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pabsb";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_x86mmx_ty];
  list<LLVMType> ParamTypes = [llvm_x86mmx_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_ssse3_pabs_b_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pabsb128";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_ssse3_pabs_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pabsd";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_x86mmx_ty];
  list<LLVMType> ParamTypes = [llvm_x86mmx_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_ssse3_pabs_d_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pabsd128";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_ssse3_pabs_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pabsw";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_x86mmx_ty];
  list<LLVMType> ParamTypes = [llvm_x86mmx_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_ssse3_pabs_w_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pabsw128";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_ssse3_phadd_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_phaddd";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_x86mmx_ty];
  list<LLVMType> ParamTypes = [llvm_x86mmx_ty, llvm_x86mmx_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_ssse3_phadd_d_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_phaddd128";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_ssse3_phadd_sw {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_phaddsw";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_x86mmx_ty];
  list<LLVMType> ParamTypes = [llvm_x86mmx_ty, llvm_x86mmx_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_ssse3_phadd_sw_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_phaddsw128";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_ssse3_phadd_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_phaddw";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_x86mmx_ty];
  list<LLVMType> ParamTypes = [llvm_x86mmx_ty, llvm_x86mmx_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_ssse3_phadd_w_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_phaddw128";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_ssse3_phsub_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_phsubd";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_x86mmx_ty];
  list<LLVMType> ParamTypes = [llvm_x86mmx_ty, llvm_x86mmx_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_ssse3_phsub_d_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_phsubd128";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_ssse3_phsub_sw {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_phsubsw";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_x86mmx_ty];
  list<LLVMType> ParamTypes = [llvm_x86mmx_ty, llvm_x86mmx_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_ssse3_phsub_sw_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_phsubsw128";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_ssse3_phsub_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_phsubw";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_x86mmx_ty];
  list<LLVMType> ParamTypes = [llvm_x86mmx_ty, llvm_x86mmx_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_ssse3_phsub_w_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_phsubw128";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_ssse3_pmadd_ub_sw {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmaddubsw";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_x86mmx_ty];
  list<LLVMType> ParamTypes = [llvm_x86mmx_ty, llvm_x86mmx_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_ssse3_pmadd_ub_sw_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmaddubsw128";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_ssse3_pmul_hr_sw {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmulhrsw";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_x86mmx_ty];
  list<LLVMType> ParamTypes = [llvm_x86mmx_ty, llvm_x86mmx_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_ssse3_pmul_hr_sw_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pmulhrsw128";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem, Commutative];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_ssse3_pshuf_b {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pshufb";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_x86mmx_ty];
  list<LLVMType> ParamTypes = [llvm_x86mmx_ty, llvm_x86mmx_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_ssse3_pshuf_b_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_pshufb128";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_ssse3_psign_b {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_psignb";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_x86mmx_ty];
  list<LLVMType> ParamTypes = [llvm_x86mmx_ty, llvm_x86mmx_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_ssse3_psign_b_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_psignb128";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_ssse3_psign_d {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_psignd";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_x86mmx_ty];
  list<LLVMType> ParamTypes = [llvm_x86mmx_ty, llvm_x86mmx_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_ssse3_psign_d_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_psignd128";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_ssse3_psign_w {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_psignw";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_x86mmx_ty];
  list<LLVMType> ParamTypes = [llvm_x86mmx_ty, llvm_x86mmx_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_ssse3_psign_w_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_psignw128";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_subborrow_u32 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_subborrow_u32";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i8_ty];
  list<LLVMType> ParamTypes = [llvm_i8_ty, llvm_i32_ty, llvm_i32_ty, llvm_ptr_ty];
  list<IntrinsicProperty> Properties = [IntrReadWriteArgMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_subborrow_u64 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_subborrow_u64";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i8_ty];
  list<LLVMType> ParamTypes = [llvm_i8_ty, llvm_i64_ty, llvm_i64_ty, llvm_ptr_ty];
  list<IntrinsicProperty> Properties = [IntrReadWriteArgMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_tbm_bextri_u32 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_bextri_u32";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_tbm_bextri_u64 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_bextri_u64";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i64_ty];
  list<LLVMType> ParamTypes = [llvm_i64_ty, llvm_i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_vcvtph2ps_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vcvtph2ps";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_vcvtph2ps_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vcvtph2ps256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8f32_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_vcvtps2ph_128 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vcvtps2ph";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_vcvtps2ph_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vcvtps2ph256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8f32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_wrfsbase_32 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_wrfsbase32";
  list<IntrinsicProperty> Intrinsic:properties = [];
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_wrfsbase_64 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_wrfsbase64";
  list<IntrinsicProperty> Intrinsic:properties = [];
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_wrgsbase_32 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_wrgsbase32";
  list<IntrinsicProperty> Intrinsic:properties = [];
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_wrgsbase_64 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_wrgsbase64";
  list<IntrinsicProperty> Intrinsic:properties = [];
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i64_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_xabort {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_xabort";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoReturn];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_xbegin {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_xbegin";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_xend {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_xend";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_xop_vfrcz_pd {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vfrczpd";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_v2f64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_xop_vfrcz_pd_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vfrczpd256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_v4f64_ty];
  list<LLVMType> ParamTypes = [llvm_v4f64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_xop_vfrcz_ps {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vfrczps";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_xop_vfrcz_ps_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vfrczps256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_v8f32_ty];
  list<LLVMType> ParamTypes = [llvm_v8f32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_xop_vfrcz_sd {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vfrczsd";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_v2f64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_xop_vfrcz_ss {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vfrczss";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_xop_vpcmov {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vpcmov";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_v2i64_ty, llvm_v2i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_xop_vpcmov_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vpcmov_256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_v4i64_ty];
  list<LLVMType> ParamTypes = [llvm_v4i64_ty, llvm_v4i64_ty, llvm_v4i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_xop_vpcomb {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vpcomb";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_xop_vpcomd {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vpcomd";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_xop_vpcomq {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vpcomq";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_v2i64_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_xop_vpcomub {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vpcomub";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_xop_vpcomud {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vpcomud";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_xop_vpcomuq {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vpcomuq";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_v2i64_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_xop_vpcomuw {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vpcomuw";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_xop_vpcomw {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vpcomw";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_xop_vpermil2pd {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vpermil2pd";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_v2f64_ty];
  list<LLVMType> ParamTypes = [llvm_v2f64_ty, llvm_v2f64_ty, llvm_v2f64_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_xop_vpermil2pd_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vpermil2pd256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_v4f64_ty];
  list<LLVMType> ParamTypes = [llvm_v4f64_ty, llvm_v4f64_ty, llvm_v4f64_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_xop_vpermil2ps {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vpermil2ps";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_v4f32_ty];
  list<LLVMType> ParamTypes = [llvm_v4f32_ty, llvm_v4f32_ty, llvm_v4f32_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_xop_vpermil2ps_256 {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vpermil2ps256";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_v8f32_ty];
  list<LLVMType> ParamTypes = [llvm_v8f32_ty, llvm_v8f32_ty, llvm_v8f32_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_xop_vphaddbd {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vphaddbd";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_xop_vphaddbq {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vphaddbq";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_xop_vphaddbw {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vphaddbw";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_xop_vphadddq {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vphadddq";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_xop_vphaddubd {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vphaddubd";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_xop_vphaddubq {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vphaddubq";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_xop_vphaddubw {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vphaddubw";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_xop_vphaddudq {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vphaddudq";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_xop_vphadduwd {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vphadduwd";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_xop_vphadduwq {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vphadduwq";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_xop_vphaddwd {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vphaddwd";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_xop_vphaddwq {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vphaddwq";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_xop_vphsubbw {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vphsubbw";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_xop_vphsubdq {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vphsubdq";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_xop_vphsubwd {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vphsubwd";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_xop_vpmacsdd {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vpmacsdd";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_xop_vpmacsdqh {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vpmacsdqh";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty, llvm_v2i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_xop_vpmacsdql {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vpmacsdql";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty, llvm_v2i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_xop_vpmacssdd {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vpmacssdd";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_xop_vpmacssdqh {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vpmacssdqh";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty, llvm_v2i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_xop_vpmacssdql {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vpmacssdql";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty, llvm_v2i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_xop_vpmacsswd {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vpmacsswd";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_xop_vpmacssww {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vpmacssww";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_xop_vpmacswd {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vpmacswd";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_xop_vpmacsww {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vpmacsww";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_xop_vpmadcsswd {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vpmadcsswd";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_xop_vpmadcswd {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vpmadcswd";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_xop_vpperm {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vpperm";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_xop_vprotb {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vprotb";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_xop_vprotbi {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vprotbi";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_xop_vprotd {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vprotd";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_xop_vprotdi {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vprotdi";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_xop_vprotq {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vprotq";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_v2i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_xop_vprotqi {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vprotqi";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_xop_vprotw {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vprotw";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_xop_vprotwi {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vprotwi";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_xop_vpshab {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vpshab";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_xop_vpshad {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vpshad";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_xop_vpshaq {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vpshaq";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_v2i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_xop_vpshaw {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vpshaw";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_xop_vpshlb {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vpshlb";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_v16i8_ty];
  list<LLVMType> ParamTypes = [llvm_v16i8_ty, llvm_v16i8_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_xop_vpshld {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vpshld";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_v4i32_ty];
  list<LLVMType> ParamTypes = [llvm_v4i32_ty, llvm_v4i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_xop_vpshlq {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vpshlq";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_v2i64_ty];
  list<LLVMType> ParamTypes = [llvm_v2i64_ty, llvm_v2i64_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_xop_vpshlw {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_vpshlw";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "";
  list<LLVMType> RetTypes = [llvm_v8i16_ty];
  list<LLVMType> ParamTypes = [llvm_v8i16_ty, llvm_v8i16_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_x86_xtest {	// GCCBuiltin SDPatternOperator Intrinsic
  string GCCBuiltinName = "__builtin_ia32_xtest";
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "x86";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_xcore_bitrev {	// SDPatternOperator Intrinsic GCCBuiltin
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "xcore";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string GCCBuiltinName = "__builtin_bitrev";
  string NAME = ?;
}
def int_xcore_checkevent {	// SDPatternOperator Intrinsic
  list<IntrinsicProperty> Intrinsic:properties = [];
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "xcore";
  list<LLVMType> RetTypes = [llvm_ptr_ty];
  list<LLVMType> ParamTypes = [llvm_ptr_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_xcore_chkct {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "xcore";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_anyptr_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [anonymous_246];
  bit isTarget = 0;
  string NAME = ?;
}
def int_xcore_clre {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "xcore";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_xcore_clrpt {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "xcore";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_anyptr_ty];
  list<IntrinsicProperty> Properties = [anonymous_254];
  bit isTarget = 0;
  string NAME = ?;
}
def int_xcore_clrsr {	// SDPatternOperator Intrinsic
  list<IntrinsicProperty> Intrinsic:properties = [];
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "xcore";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_xcore_crc32 {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "xcore";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_xcore_crc8 {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "xcore";
  list<LLVMType> RetTypes = [llvm_i32_ty, llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_xcore_edu {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "xcore";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_anyptr_ty];
  list<IntrinsicProperty> Properties = [anonymous_261];
  bit isTarget = 0;
  string NAME = ?;
}
def int_xcore_eeu {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "xcore";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_anyptr_ty];
  list<IntrinsicProperty> Properties = [anonymous_260];
  bit isTarget = 0;
  string NAME = ?;
}
def int_xcore_endin {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "xcore";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_anyptr_ty];
  list<IntrinsicProperty> Properties = [anonymous_268];
  bit isTarget = 0;
  string NAME = ?;
}
def int_xcore_freer {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "xcore";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_anyptr_ty];
  list<IntrinsicProperty> Properties = [anonymous_239];
  bit isTarget = 0;
  string NAME = ?;
}
def int_xcore_geted {	// SDPatternOperator Intrinsic
  list<IntrinsicProperty> Intrinsic:properties = [];
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "xcore";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_xcore_getet {	// SDPatternOperator Intrinsic
  list<IntrinsicProperty> Intrinsic:properties = [];
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "xcore";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_xcore_getid {	// SDPatternOperator Intrinsic GCCBuiltin
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "xcore";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string GCCBuiltinName = "__builtin_getid";
  string NAME = ?;
}
def int_xcore_getps {	// SDPatternOperator Intrinsic GCCBuiltin
  list<IntrinsicProperty> Intrinsic:properties = [];
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "xcore";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__builtin_getps";
  string NAME = ?;
}
def int_xcore_getr {	// SDPatternOperator Intrinsic
  list<IntrinsicProperty> Intrinsic:properties = [];
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "xcore";
  list<LLVMType> RetTypes = [llvm_anyptr_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_xcore_getst {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "xcore";
  list<LLVMType> RetTypes = [llvm_anyptr_ty];
  list<LLVMType> ParamTypes = [llvm_anyptr_ty];
  list<IntrinsicProperty> Properties = [anonymous_269];
  bit isTarget = 0;
  string NAME = ?;
}
def int_xcore_getts {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "xcore";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_anyptr_ty];
  list<IntrinsicProperty> Properties = [anonymous_255];
  bit isTarget = 0;
  string NAME = ?;
}
def int_xcore_in {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "xcore";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_anyptr_ty];
  list<IntrinsicProperty> Properties = [anonymous_240];
  bit isTarget = 0;
  string NAME = ?;
}
def int_xcore_inct {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "xcore";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_anyptr_ty];
  list<IntrinsicProperty> Properties = [anonymous_242];
  bit isTarget = 0;
  string NAME = ?;
}
def int_xcore_initcp {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "xcore";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_anyptr_ty, llvm_ptr_ty];
  list<IntrinsicProperty> Properties = [anonymous_275];
  bit isTarget = 0;
  string NAME = ?;
}
def int_xcore_initdp {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "xcore";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_anyptr_ty, llvm_ptr_ty];
  list<IntrinsicProperty> Properties = [anonymous_276];
  bit isTarget = 0;
  string NAME = ?;
}
def int_xcore_initlr {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "xcore";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_anyptr_ty, llvm_ptr_ty];
  list<IntrinsicProperty> Properties = [anonymous_274];
  bit isTarget = 0;
  string NAME = ?;
}
def int_xcore_initpc {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "xcore";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_anyptr_ty, llvm_ptr_ty];
  list<IntrinsicProperty> Properties = [anonymous_273];
  bit isTarget = 0;
  string NAME = ?;
}
def int_xcore_initsp {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "xcore";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_anyptr_ty, llvm_ptr_ty];
  list<IntrinsicProperty> Properties = [anonymous_272];
  bit isTarget = 0;
  string NAME = ?;
}
def int_xcore_inshr {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "xcore";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_anyptr_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [anonymous_251];
  bit isTarget = 0;
  string NAME = ?;
}
def int_xcore_int {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "xcore";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_anyptr_ty];
  list<IntrinsicProperty> Properties = [anonymous_241];
  bit isTarget = 0;
  string NAME = ?;
}
def int_xcore_mjoin {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "xcore";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_anyptr_ty];
  list<IntrinsicProperty> Properties = [anonymous_271];
  bit isTarget = 0;
  string NAME = ?;
}
def int_xcore_msync {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "xcore";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_anyptr_ty];
  list<IntrinsicProperty> Properties = [anonymous_270];
  bit isTarget = 0;
  string NAME = ?;
}
def int_xcore_out {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "xcore";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_anyptr_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [anonymous_243];
  bit isTarget = 0;
  string NAME = ?;
}
def int_xcore_outct {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "xcore";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_anyptr_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [anonymous_245];
  bit isTarget = 0;
  string NAME = ?;
}
def int_xcore_outshr {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "xcore";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_anyptr_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [anonymous_252];
  bit isTarget = 0;
  string NAME = ?;
}
def int_xcore_outt {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "xcore";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_anyptr_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [anonymous_244];
  bit isTarget = 0;
  string NAME = ?;
}
def int_xcore_peek {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "xcore";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_anyptr_ty];
  list<IntrinsicProperty> Properties = [anonymous_267];
  bit isTarget = 0;
  string NAME = ?;
}
def int_xcore_setc {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "xcore";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_anyptr_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [anonymous_250];
  bit isTarget = 0;
  string NAME = ?;
}
def int_xcore_setclk {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "xcore";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_anyptr_ty, llvm_anyptr_ty];
  list<IntrinsicProperty> Properties = [anonymous_262, anonymous_263];
  bit isTarget = 0;
  string NAME = ?;
}
def int_xcore_setd {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "xcore";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_anyptr_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [anonymous_249];
  bit isTarget = 0;
  string NAME = ?;
}
def int_xcore_setev {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "xcore";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_anyptr_ty, llvm_ptr_ty];
  list<IntrinsicProperty> Properties = [anonymous_259];
  bit isTarget = 0;
  string NAME = ?;
}
def int_xcore_setps {	// SDPatternOperator Intrinsic GCCBuiltin
  list<IntrinsicProperty> Intrinsic:properties = [];
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "xcore";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string GCCBuiltinName = "__builtin_setps";
  string NAME = ?;
}
def int_xcore_setpsc {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "xcore";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_anyptr_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [anonymous_266];
  bit isTarget = 0;
  string NAME = ?;
}
def int_xcore_setpt {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "xcore";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_anyptr_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [anonymous_253];
  bit isTarget = 0;
  string NAME = ?;
}
def int_xcore_setrdy {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "xcore";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_anyptr_ty, llvm_anyptr_ty];
  list<IntrinsicProperty> Properties = [anonymous_264, anonymous_265];
  bit isTarget = 0;
  string NAME = ?;
}
def int_xcore_setsr {	// SDPatternOperator Intrinsic
  list<IntrinsicProperty> Intrinsic:properties = [];
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "xcore";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_i32_ty];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_xcore_settw {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "xcore";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_anyptr_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [anonymous_257];
  bit isTarget = 0;
  string NAME = ?;
}
def int_xcore_setv {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "xcore";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_anyptr_ty, llvm_ptr_ty];
  list<IntrinsicProperty> Properties = [anonymous_258];
  bit isTarget = 0;
  string NAME = ?;
}
def int_xcore_sext {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "xcore";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_xcore_ssync {	// SDPatternOperator Intrinsic
  list<IntrinsicProperty> Intrinsic:properties = [];
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "xcore";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> Properties = [];
  bit isTarget = 0;
  string NAME = ?;
}
def int_xcore_syncr {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "xcore";
  list<LLVMType> RetTypes = [];
  list<LLVMType> ParamTypes = [llvm_anyptr_ty];
  list<IntrinsicProperty> Properties = [anonymous_256];
  bit isTarget = 0;
  string NAME = ?;
}
def int_xcore_testct {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "xcore";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_anyptr_ty];
  list<IntrinsicProperty> Properties = [anonymous_247];
  bit isTarget = 0;
  string NAME = ?;
}
def int_xcore_testwct {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "xcore";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_anyptr_ty];
  list<IntrinsicProperty> Properties = [anonymous_248];
  bit isTarget = 0;
  string NAME = ?;
}
def int_xcore_waitevent {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "xcore";
  list<LLVMType> RetTypes = [llvm_ptr_ty];
  list<LLVMType> ParamTypes = [];
  list<IntrinsicProperty> Properties = [IntrReadMem];
  bit isTarget = 0;
  string NAME = ?;
}
def int_xcore_zext {	// SDPatternOperator Intrinsic
  string Intrinsic:name = "";
  string LLVMName = "";
  string TargetPrefix = "xcore";
  list<LLVMType> RetTypes = [llvm_i32_ty];
  list<LLVMType> ParamTypes = [llvm_i32_ty, llvm_i32_ty];
  list<IntrinsicProperty> Properties = [IntrNoMem];
  bit isTarget = 0;
  string NAME = ?;
}
def interleave {
  string NAME = ?;
}
def intrinsic_void {	// SDPatternOperator SDNode
  string SDNode:sdclass = "SDNode";
  string Opcode = "ISD::INTRINSIC_VOID";
  string SDClass = "SDNode";
  list<SDNodeProperty> Properties = [SDNPHasChain];
  SDTypeProfile TypeProfile = anonymous_465;
  string NAME = ?;
}
def intrinsic_w_chain {	// SDPatternOperator SDNode
  string SDNode:sdclass = "SDNode";
  string Opcode = "ISD::INTRINSIC_W_CHAIN";
  string SDClass = "SDNode";
  list<SDNodeProperty> Properties = [SDNPHasChain];
  SDTypeProfile TypeProfile = anonymous_467;
  string NAME = ?;
}
def intrinsic_wo_chain {	// SDPatternOperator SDNode
  string SDNode:sdclass = "SDNode";
  string Opcode = "ISD::INTRINSIC_WO_CHAIN";
  string SDClass = "SDNode";
  list<SDNodeProperty> Properties = [];
  SDTypeProfile TypeProfile = anonymous_469;
  string NAME = ?;
}
def isVoid {	// ValueType
  string Namespace = "MVT";
  int Size = 0;
  int Value = 57;
  string NAME = ?;
}
def ist {	// SDPatternOperator SDNode
  string SDNode:sdclass = "SDNode";
  string Opcode = "ISD::STORE";
  string SDClass = "SDNode";
  list<SDNodeProperty> Properties = [SDNPHasChain, SDNPMayStore, SDNPMemOperand];
  SDTypeProfile TypeProfile = SDTIStore;
  string NAME = ?;
}
def istore {	// SDPatternOperator PatFrag
  SDNodeXForm PatFrag:xform = NOOP_SDNodeXForm;
  dag Operands = (ops node:$val, node:$base, node:$offset);
  dag Fragment = (ist node:$val, node:$base, node:$offset);
  string PredicateCode = "
  return !cast<StoreSDNode>(N)->isTruncatingStore();
";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = ?;
}
def itruncstore {	// SDPatternOperator PatFrag
  SDNodeXForm PatFrag:xform = NOOP_SDNodeXForm;
  dag Operands = (ops node:$val, node:$base, node:$offset);
  dag Fragment = (ist node:$val, node:$base, node:$offset);
  string PredicateCode = "
  return cast<StoreSDNode>(N)->isTruncatingStore();
";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = ?;
}
def jmptarget {	// DAGOperand Operand
  ValueType Type = OtherVT;
  string PrintMethod = "printPCRelImmOperand";
  string EncoderMethod = "";
  string DecoderMethod = "";
  string OperandType = "OPERAND_UNKNOWN";
  dag MIOperandInfo = (ops);
  string MCOperandPredicate = ?;
  AsmOperandClass ParserMatchClass = ImmAsmOperand;
  string NAME = ?;
}
def jumptable {	// SDPatternOperator SDNode
  string Opcode = "ISD::JumpTable";
  string SDClass = "JumpTableSDNode";
  list<SDNodeProperty> Properties = [];
  SDTypeProfile TypeProfile = SDTPtrLeaf;
  string NAME = ?;
}
def ld {	// SDPatternOperator SDNode
  string SDNode:sdclass = "SDNode";
  string Opcode = "ISD::LOAD";
  string SDClass = "SDNode";
  list<SDNodeProperty> Properties = [SDNPHasChain, SDNPMayLoad, SDNPMemOperand];
  SDTypeProfile TypeProfile = SDTLoad;
  string NAME = ?;
}
def llvm_any_ty {	// LLVMType
  ValueType VT = Any;
  string NAME = ?;
}
def llvm_anyfloat_ty {	// LLVMType
  ValueType VT = fAny;
  string NAME = ?;
}
def llvm_anyi64ptr_ty {	// LLVMType LLVMAnyPointerType
  ValueType VT = iPTRAny;
  LLVMType ElTy = llvm_i64_ty;
  string NAME = ?;
}
def llvm_anyint_ty {	// LLVMType
  ValueType VT = iAny;
  string NAME = ?;
}
def llvm_anyptr_ty {	// LLVMType LLVMAnyPointerType
  ValueType VT = iPTRAny;
  LLVMType ElTy = llvm_i8_ty;
  string NAME = ?;
}
def llvm_anyvector_ty {	// LLVMType
  ValueType VT = vAny;
  string NAME = ?;
}
def llvm_descriptor_ty {	// LLVMType LLVMQualPointerType LLVMPointerType
  ValueType VT = iPTR;
  LLVMType ElTy = llvm_empty_ty;
  int AddrSpace = 0;
  string NAME = ?;
}
def llvm_double_ty {	// LLVMType
  ValueType VT = f64;
  string NAME = ?;
}
def llvm_empty_ty {	// LLVMType
  ValueType VT = OtherVT;
  string NAME = ?;
}
def llvm_f128_ty {	// LLVMType
  ValueType VT = f128;
  string NAME = ?;
}
def llvm_f80_ty {	// LLVMType
  ValueType VT = f80;
  string NAME = ?;
}
def llvm_float_ty {	// LLVMType
  ValueType VT = f32;
  string NAME = ?;
}
def llvm_half_ty {	// LLVMType
  ValueType VT = f16;
  string NAME = ?;
}
def llvm_i16_ty {	// LLVMType
  ValueType VT = i16;
  string NAME = ?;
}
def llvm_i1_ty {	// LLVMType
  ValueType VT = i1;
  string NAME = ?;
}
def llvm_i32_ty {	// LLVMType
  ValueType VT = i32;
  string NAME = ?;
}
def llvm_i64_ty {	// LLVMType
  ValueType VT = i64;
  string NAME = ?;
}
def llvm_i8_ty {	// LLVMType
  ValueType VT = i8;
  string NAME = ?;
}
def llvm_metadata_ty {	// LLVMType
  ValueType VT = MetadataVT;
  string NAME = ?;
}
def llvm_ppcf128_ty {	// LLVMType
  ValueType VT = ppcf128;
  string NAME = ?;
}
def llvm_ptr32_ty {	// LLVMType LLVMQualPointerType LLVMPointerType
  ValueType VT = iPTR;
  LLVMType ElTy = llvm_i32_ty;
  int AddrSpace = 0;
  string NAME = ?;
}
def llvm_ptr64_ty {	// LLVMType LLVMQualPointerType LLVMPointerType
  ValueType VT = iPTR;
  LLVMType ElTy = llvm_i64_ty;
  int AddrSpace = 0;
  string NAME = ?;
}
def llvm_ptr_ty {	// LLVMType LLVMQualPointerType LLVMPointerType
  ValueType VT = iPTR;
  LLVMType ElTy = llvm_i8_ty;
  int AddrSpace = 0;
  string NAME = ?;
}
def llvm_ptrptr_ty {	// LLVMType LLVMQualPointerType LLVMPointerType
  ValueType VT = iPTR;
  LLVMType ElTy = llvm_ptr_ty;
  int AddrSpace = 0;
  string NAME = ?;
}
def llvm_ptrx86mmx_ty {	// LLVMType LLVMQualPointerType LLVMPointerType
  ValueType VT = iPTR;
  LLVMType ElTy = llvm_x86mmx_ty;
  int AddrSpace = 0;
  string NAME = ?;
}
def llvm_v16f32_ty {	// LLVMType
  ValueType VT = v16f32;
  string NAME = ?;
}
def llvm_v16i16_ty {	// LLVMType
  ValueType VT = v16i16;
  string NAME = ?;
}
def llvm_v16i1_ty {	// LLVMType
  ValueType VT = v16i1;
  string NAME = ?;
}
def llvm_v16i32_ty {	// LLVMType
  ValueType VT = v16i32;
  string NAME = ?;
}
def llvm_v16i64_ty {	// LLVMType
  ValueType VT = v16i64;
  string NAME = ?;
}
def llvm_v16i8_ty {	// LLVMType
  ValueType VT = v16i8;
  string NAME = ?;
}
def llvm_v1f32_ty {	// LLVMType
  ValueType VT = v1f32;
  string NAME = ?;
}
def llvm_v1f64_ty {	// LLVMType
  ValueType VT = v1f64;
  string NAME = ?;
}
def llvm_v1i128_ty {	// LLVMType
  ValueType VT = v1i128;
  string NAME = ?;
}
def llvm_v1i16_ty {	// LLVMType
  ValueType VT = v1i16;
  string NAME = ?;
}
def llvm_v1i32_ty {	// LLVMType
  ValueType VT = v1i32;
  string NAME = ?;
}
def llvm_v1i64_ty {	// LLVMType
  ValueType VT = v1i64;
  string NAME = ?;
}
def llvm_v1i8_ty {	// LLVMType
  ValueType VT = v1i8;
  string NAME = ?;
}
def llvm_v2f16_ty {	// LLVMType
  ValueType VT = v2f16;
  string NAME = ?;
}
def llvm_v2f32_ty {	// LLVMType
  ValueType VT = v2f32;
  string NAME = ?;
}
def llvm_v2f64_ty {	// LLVMType
  ValueType VT = v2f64;
  string NAME = ?;
}
def llvm_v2i16_ty {	// LLVMType
  ValueType VT = v2i16;
  string NAME = ?;
}
def llvm_v2i1_ty {	// LLVMType
  ValueType VT = v2i1;
  string NAME = ?;
}
def llvm_v2i32_ty {	// LLVMType
  ValueType VT = v2i32;
  string NAME = ?;
}
def llvm_v2i64_ty {	// LLVMType
  ValueType VT = v2i64;
  string NAME = ?;
}
def llvm_v2i8_ty {	// LLVMType
  ValueType VT = v2i8;
  string NAME = ?;
}
def llvm_v32i16_ty {	// LLVMType
  ValueType VT = v32i16;
  string NAME = ?;
}
def llvm_v32i1_ty {	// LLVMType
  ValueType VT = v32i1;
  string NAME = ?;
}
def llvm_v32i8_ty {	// LLVMType
  ValueType VT = v32i8;
  string NAME = ?;
}
def llvm_v4f16_ty {	// LLVMType
  ValueType VT = v4f16;
  string NAME = ?;
}
def llvm_v4f32_ty {	// LLVMType
  ValueType VT = v4f32;
  string NAME = ?;
}
def llvm_v4f64_ty {	// LLVMType
  ValueType VT = v4f64;
  string NAME = ?;
}
def llvm_v4i16_ty {	// LLVMType
  ValueType VT = v4i16;
  string NAME = ?;
}
def llvm_v4i1_ty {	// LLVMType
  ValueType VT = v4i1;
  string NAME = ?;
}
def llvm_v4i32_ty {	// LLVMType
  ValueType VT = v4i32;
  string NAME = ?;
}
def llvm_v4i64_ty {	// LLVMType
  ValueType VT = v4i64;
  string NAME = ?;
}
def llvm_v4i8_ty {	// LLVMType
  ValueType VT = v4i8;
  string NAME = ?;
}
def llvm_v64i1_ty {	// LLVMType
  ValueType VT = v64i1;
  string NAME = ?;
}
def llvm_v64i8_ty {	// LLVMType
  ValueType VT = v64i8;
  string NAME = ?;
}
def llvm_v8f16_ty {	// LLVMType
  ValueType VT = v8f16;
  string NAME = ?;
}
def llvm_v8f32_ty {	// LLVMType
  ValueType VT = v8f32;
  string NAME = ?;
}
def llvm_v8f64_ty {	// LLVMType
  ValueType VT = v8f64;
  string NAME = ?;
}
def llvm_v8i16_ty {	// LLVMType
  ValueType VT = v8i16;
  string NAME = ?;
}
def llvm_v8i1_ty {	// LLVMType
  ValueType VT = v8i1;
  string NAME = ?;
}
def llvm_v8i32_ty {	// LLVMType
  ValueType VT = v8i32;
  string NAME = ?;
}
def llvm_v8i64_ty {	// LLVMType
  ValueType VT = v8i64;
  string NAME = ?;
}
def llvm_v8i8_ty {	// LLVMType
  ValueType VT = v8i8;
  string NAME = ?;
}
def llvm_vararg_ty {	// LLVMType
  ValueType VT = isVoid;
  string NAME = ?;
}
def llvm_void_ty {	// LLVMType
  ValueType VT = isVoid;
  string NAME = ?;
}
def llvm_x86mmx_ty {	// LLVMType
  ValueType VT = x86mmx;
  string NAME = ?;
}
def load {	// SDPatternOperator PatFrag
  SDNodeXForm PatFrag:xform = NOOP_SDNodeXForm;
  dag Operands = (ops node:$ptr);
  dag Fragment = (unindexedload node:$ptr);
  string PredicateCode = "
  return cast<LoadSDNode>(N)->getExtensionType() == ISD::NON_EXTLOAD;
";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = ?;
}
def load_sym {	// SDPatternOperator SDNode
  list<SDNodeProperty> SDNode:props = [];
  string SDNode:sdclass = "SDNode";
  string Opcode = "TriCoreISD::LOAD_SYM";
  string SDClass = "SDNode";
  list<SDNodeProperty> Properties = [];
  SDTypeProfile TypeProfile = SDTIntUnaryOp;
  string NAME = ?;
}
def masked_gather {	// SDPatternOperator SDNode
  string SDNode:sdclass = "SDNode";
  string Opcode = "ISD::MGATHER";
  string SDClass = "SDNode";
  list<SDNodeProperty> Properties = [SDNPHasChain, SDNPMayLoad, SDNPMemOperand];
  SDTypeProfile TypeProfile = SDTMaskedGather;
  string NAME = ?;
}
def masked_load {	// SDPatternOperator SDNode
  string SDNode:sdclass = "SDNode";
  string Opcode = "ISD::MLOAD";
  string SDClass = "SDNode";
  list<SDNodeProperty> Properties = [SDNPHasChain, SDNPMayLoad, SDNPMemOperand];
  SDTypeProfile TypeProfile = SDTMaskedLoad;
  string NAME = ?;
}
def masked_scatter {	// SDPatternOperator SDNode
  string SDNode:sdclass = "SDNode";
  string Opcode = "ISD::MSCATTER";
  string SDClass = "SDNode";
  list<SDNodeProperty> Properties = [SDNPHasChain, SDNPMayStore, SDNPMemOperand];
  SDTypeProfile TypeProfile = SDTMaskedScatter;
  string NAME = ?;
}
def masked_store {	// SDPatternOperator SDNode
  string SDNode:sdclass = "SDNode";
  string Opcode = "ISD::MSTORE";
  string SDClass = "SDNode";
  list<SDNodeProperty> Properties = [SDNPHasChain, SDNPMayStore, SDNPMemOperand];
  SDTypeProfile TypeProfile = SDTMaskedStore;
  string NAME = ?;
}
def mcsym {	// SDPatternOperator SDNode
  string Opcode = "ISD::MCSymbol";
  string SDClass = "MCSymbolSDNode";
  list<SDNodeProperty> Properties = [];
  SDTypeProfile TypeProfile = SDTPtrLeaf;
  string NAME = ?;
}
def memsrc {	// DAGOperand Operand
  ValueType Type = i32;
  string PrintMethod = "printAddrModeMemSrc";
  string EncoderMethod = "getMemSrcValue";
  string DecoderMethod = "";
  string OperandType = "OPERAND_UNKNOWN";
  dag MIOperandInfo = (ops DataRegs, i32imm);
  string MCOperandPredicate = ?;
  AsmOperandClass ParserMatchClass = ImmAsmOperand;
  string NAME = ?;
}
def mips_q31_ty {	// LLVMType
  ValueType VT = i32;
  string NAME = ?;
}
def mips_v2q15_ty {	// LLVMType
  ValueType VT = v2i16;
  string NAME = ?;
}
def mips_v4q7_ty {	// LLVMType
  ValueType VT = v4i8;
  string NAME = ?;
}
def movei32 {	// SDPatternOperator SDNode
  list<SDNodeProperty> SDNode:props = [];
  string SDNode:sdclass = "SDNode";
  string Opcode = "TriCoreISD::MOVEi32";
  string SDClass = "SDNode";
  list<SDNodeProperty> Properties = [];
  SDTypeProfile TypeProfile = MoveImm32Ty;
  string NAME = ?;
}
def mul {	// SDPatternOperator SDNode
  string SDNode:sdclass = "SDNode";
  string Opcode = "ISD::MUL";
  string SDClass = "SDNode";
  list<SDNodeProperty> Properties = [SDNPCommutative, SDNPAssociative];
  SDTypeProfile TypeProfile = SDTIntBinOp;
  string NAME = ?;
}
def mulhs {	// SDPatternOperator SDNode
  string SDNode:sdclass = "SDNode";
  string Opcode = "ISD::MULHS";
  string SDClass = "SDNode";
  list<SDNodeProperty> Properties = [SDNPCommutative];
  SDTypeProfile TypeProfile = SDTIntBinOp;
  string NAME = ?;
}
def mulhu {	// SDPatternOperator SDNode
  string SDNode:sdclass = "SDNode";
  string Opcode = "ISD::MULHU";
  string SDClass = "SDNode";
  list<SDNodeProperty> Properties = [SDNPCommutative];
  SDTypeProfile TypeProfile = SDTIntBinOp;
  string NAME = ?;
}
def node {
  string NAME = ?;
}
def not {	// SDPatternOperator PatFrag
  string PatFrag:pred = "";
  SDNodeXForm PatFrag:xform = NOOP_SDNodeXForm;
  dag Operands = (ops node:$in);
  dag Fragment = (xor node:$in, -1);
  string PredicateCode = "";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = ?;
}
def null_frag {	// SDPatternOperator
  string NAME = ?;
}
def ops {
  string NAME = ?;
}
def or {	// SDPatternOperator SDNode
  string SDNode:sdclass = "SDNode";
  string Opcode = "ISD::OR";
  string SDClass = "SDNode";
  list<SDNodeProperty> Properties = [SDNPCommutative, SDNPAssociative];
  SDTypeProfile TypeProfile = SDTIntBinOp;
  string NAME = ?;
}
def outs {
  string NAME = ?;
}
def post_store {	// SDPatternOperator PatFrag
  SDNodeXForm PatFrag:xform = NOOP_SDNodeXForm;
  dag Operands = (ops node:$val, node:$ptr, node:$offset);
  dag Fragment = (istore node:$val, node:$ptr, node:$offset);
  string PredicateCode = "
  ISD::MemIndexedMode AM = cast<StoreSDNode>(N)->getAddressingMode();
  return AM == ISD::POST_INC || AM == ISD::POST_DEC;
";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = ?;
}
def post_truncst {	// SDPatternOperator PatFrag
  SDNodeXForm PatFrag:xform = NOOP_SDNodeXForm;
  dag Operands = (ops node:$val, node:$base, node:$offset);
  dag Fragment = (itruncstore node:$val, node:$base, node:$offset);
  string PredicateCode = "
  ISD::MemIndexedMode AM = cast<StoreSDNode>(N)->getAddressingMode();
  return AM == ISD::POST_INC || AM == ISD::POST_DEC;
";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = ?;
}
def post_truncstf32 {	// SDPatternOperator PatFrag
  SDNodeXForm PatFrag:xform = NOOP_SDNodeXForm;
  dag Operands = (ops node:$val, node:$base, node:$offset);
  dag Fragment = (post_truncst node:$val, node:$base, node:$offset);
  string PredicateCode = "
  return cast<StoreSDNode>(N)->getMemoryVT() == MVT::f32;
";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = ?;
}
def post_truncsti1 {	// SDPatternOperator PatFrag
  SDNodeXForm PatFrag:xform = NOOP_SDNodeXForm;
  dag Operands = (ops node:$val, node:$base, node:$offset);
  dag Fragment = (post_truncst node:$val, node:$base, node:$offset);
  string PredicateCode = "
  return cast<StoreSDNode>(N)->getMemoryVT() == MVT::i1;
";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = ?;
}
def post_truncsti16 {	// SDPatternOperator PatFrag
  SDNodeXForm PatFrag:xform = NOOP_SDNodeXForm;
  dag Operands = (ops node:$val, node:$base, node:$offset);
  dag Fragment = (post_truncst node:$val, node:$base, node:$offset);
  string PredicateCode = "
  return cast<StoreSDNode>(N)->getMemoryVT() == MVT::i16;
";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = ?;
}
def post_truncsti32 {	// SDPatternOperator PatFrag
  SDNodeXForm PatFrag:xform = NOOP_SDNodeXForm;
  dag Operands = (ops node:$val, node:$base, node:$offset);
  dag Fragment = (post_truncst node:$val, node:$base, node:$offset);
  string PredicateCode = "
  return cast<StoreSDNode>(N)->getMemoryVT() == MVT::i32;
";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = ?;
}
def post_truncsti8 {	// SDPatternOperator PatFrag
  SDNodeXForm PatFrag:xform = NOOP_SDNodeXForm;
  dag Operands = (ops node:$val, node:$base, node:$offset);
  dag Fragment = (post_truncst node:$val, node:$base, node:$offset);
  string PredicateCode = "
  return cast<StoreSDNode>(N)->getMemoryVT() == MVT::i8;
";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = ?;
}
def ppcf128 {	// ValueType
  string Namespace = "MVT";
  int Size = 128;
  int Value = 12;
  string NAME = ?;
}
def pre_store {	// SDPatternOperator PatFrag
  SDNodeXForm PatFrag:xform = NOOP_SDNodeXForm;
  dag Operands = (ops node:$val, node:$base, node:$offset);
  dag Fragment = (istore node:$val, node:$base, node:$offset);
  string PredicateCode = "
  ISD::MemIndexedMode AM = cast<StoreSDNode>(N)->getAddressingMode();
  return AM == ISD::PRE_INC || AM == ISD::PRE_DEC;
";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = ?;
}
def pre_truncst {	// SDPatternOperator PatFrag
  SDNodeXForm PatFrag:xform = NOOP_SDNodeXForm;
  dag Operands = (ops node:$val, node:$base, node:$offset);
  dag Fragment = (itruncstore node:$val, node:$base, node:$offset);
  string PredicateCode = "
  ISD::MemIndexedMode AM = cast<StoreSDNode>(N)->getAddressingMode();
  return AM == ISD::PRE_INC || AM == ISD::PRE_DEC;
";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = ?;
}
def pre_truncstf32 {	// SDPatternOperator PatFrag
  SDNodeXForm PatFrag:xform = NOOP_SDNodeXForm;
  dag Operands = (ops node:$val, node:$base, node:$offset);
  dag Fragment = (pre_truncst node:$val, node:$base, node:$offset);
  string PredicateCode = "
  return cast<StoreSDNode>(N)->getMemoryVT() == MVT::f32;
";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = ?;
}
def pre_truncsti1 {	// SDPatternOperator PatFrag
  SDNodeXForm PatFrag:xform = NOOP_SDNodeXForm;
  dag Operands = (ops node:$val, node:$base, node:$offset);
  dag Fragment = (pre_truncst node:$val, node:$base, node:$offset);
  string PredicateCode = "
  return cast<StoreSDNode>(N)->getMemoryVT() == MVT::i1;
";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = ?;
}
def pre_truncsti16 {	// SDPatternOperator PatFrag
  SDNodeXForm PatFrag:xform = NOOP_SDNodeXForm;
  dag Operands = (ops node:$val, node:$base, node:$offset);
  dag Fragment = (pre_truncst node:$val, node:$base, node:$offset);
  string PredicateCode = "
  return cast<StoreSDNode>(N)->getMemoryVT() == MVT::i16;
";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = ?;
}
def pre_truncsti32 {	// SDPatternOperator PatFrag
  SDNodeXForm PatFrag:xform = NOOP_SDNodeXForm;
  dag Operands = (ops node:$val, node:$base, node:$offset);
  dag Fragment = (pre_truncst node:$val, node:$base, node:$offset);
  string PredicateCode = "
  return cast<StoreSDNode>(N)->getMemoryVT() == MVT::i32;
";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = ?;
}
def pre_truncsti8 {	// SDPatternOperator PatFrag
  SDNodeXForm PatFrag:xform = NOOP_SDNodeXForm;
  dag Operands = (ops node:$val, node:$base, node:$offset);
  dag Fragment = (pre_truncst node:$val, node:$base, node:$offset);
  string PredicateCode = "
  return cast<StoreSDNode>(N)->getMemoryVT() == MVT::i8;
";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = ?;
}
def prefetch {	// SDPatternOperator SDNode
  string SDNode:sdclass = "SDNode";
  string Opcode = "ISD::PREFETCH";
  string SDClass = "SDNode";
  list<SDNodeProperty> Properties = [SDNPHasChain, SDNPMayLoad, SDNPMayStore, SDNPMemOperand];
  SDTypeProfile TypeProfile = SDTPrefetch;
  string NAME = ?;
}
def ptr_rc {	// PointerLikeRegClass
  int RegClassKind = 0;
  string NAME = ?;
}
def readcyclecounter {	// SDPatternOperator SDNode
  string SDNode:sdclass = "SDNode";
  string Opcode = "ISD::READCYCLECOUNTER";
  string SDClass = "SDNode";
  list<SDNodeProperty> Properties = [SDNPHasChain, SDNPSideEffect];
  SDTypeProfile TypeProfile = SDTIntLeaf;
  string NAME = ?;
}
def rotl {	// SDPatternOperator SDNode
  list<SDNodeProperty> SDNode:props = [];
  string SDNode:sdclass = "SDNode";
  string Opcode = "ISD::ROTL";
  string SDClass = "SDNode";
  list<SDNodeProperty> Properties = [];
  SDTypeProfile TypeProfile = SDTIntShiftOp;
  string NAME = ?;
}
def rotr {	// SDPatternOperator SDNode
  list<SDNodeProperty> SDNode:props = [];
  string SDNode:sdclass = "SDNode";
  string Opcode = "ISD::ROTR";
  string SDClass = "SDNode";
  list<SDNodeProperty> Properties = [];
  SDTypeProfile TypeProfile = SDTIntShiftOp;
  string NAME = ?;
}
def s16imm {	// DAGOperand Operand
  ValueType Type = i32;
  string PrintMethod = "printSExtImm<16>";
  string EncoderMethod = "";
  string DecoderMethod = "";
  string OperandType = "OPERAND_UNKNOWN";
  dag MIOperandInfo = (ops);
  string MCOperandPredicate = ?;
  AsmOperandClass ParserMatchClass = ImmAsmOperand;
  string NAME = ?;
}
def s4imm {	// DAGOperand Operand
  ValueType Type = i32;
  string PrintMethod = "printSExtImm<4>";
  string EncoderMethod = "";
  string DecoderMethod = "";
  string OperandType = "OPERAND_UNKNOWN";
  dag MIOperandInfo = (ops);
  string MCOperandPredicate = ?;
  AsmOperandClass ParserMatchClass = ImmAsmOperand;
  string NAME = ?;
}
def s9imm {	// DAGOperand Operand
  ValueType Type = i32;
  string PrintMethod = "printSExtImm<9>";
  string EncoderMethod = "";
  string DecoderMethod = "";
  string OperandType = "OPERAND_UNKNOWN";
  dag MIOperandInfo = (ops);
  string MCOperandPredicate = ?;
  AsmOperandClass ParserMatchClass = ImmAsmOperand;
  string NAME = ?;
}
def scalar_to_vector {	// SDPatternOperator SDNode
  string SDNode:sdclass = "SDNode";
  string Opcode = "ISD::SCALAR_TO_VECTOR";
  string SDClass = "SDNode";
  list<SDNodeProperty> Properties = [];
  SDTypeProfile TypeProfile = anonymous_451;
  string NAME = ?;
}
def sdiv {	// SDPatternOperator SDNode
  list<SDNodeProperty> SDNode:props = [];
  string SDNode:sdclass = "SDNode";
  string Opcode = "ISD::SDIV";
  string SDClass = "SDNode";
  list<SDNodeProperty> Properties = [];
  SDTypeProfile TypeProfile = SDTIntBinOp;
  string NAME = ?;
}
def sdivrem {	// SDPatternOperator SDNode
  list<SDNodeProperty> SDNode:props = [];
  string SDNode:sdclass = "SDNode";
  string Opcode = "ISD::SDIVREM";
  string SDClass = "SDNode";
  list<SDNodeProperty> Properties = [];
  SDTypeProfile TypeProfile = SDTIntBinHiLoOp;
  string NAME = ?;
}
def select {	// SDPatternOperator SDNode
  list<SDNodeProperty> SDNode:props = [];
  string SDNode:sdclass = "SDNode";
  string Opcode = "ISD::SELECT";
  string SDClass = "SDNode";
  list<SDNodeProperty> Properties = [];
  SDTypeProfile TypeProfile = SDTSelect;
  string NAME = ?;
}
def selectcc {	// SDPatternOperator SDNode
  list<SDNodeProperty> SDNode:props = [];
  string SDNode:sdclass = "SDNode";
  string Opcode = "ISD::SELECT_CC";
  string SDClass = "SDNode";
  list<SDNodeProperty> Properties = [];
  SDTypeProfile TypeProfile = SDTSelectCC;
  string NAME = ?;
}
def sequence {
  string NAME = ?;
}
def set {
  string NAME = ?;
}
def setcc {	// SDPatternOperator SDNode
  list<SDNodeProperty> SDNode:props = [];
  string SDNode:sdclass = "SDNode";
  string Opcode = "ISD::SETCC";
  string SDClass = "SDNode";
  list<SDNodeProperty> Properties = [];
  SDTypeProfile TypeProfile = SDTSetCC;
  string NAME = ?;
}
def seteq {	// SDPatternOperator PatFrag
  string PatFrag:pred = "";
  SDNodeXForm PatFrag:xform = NOOP_SDNodeXForm;
  dag Operands = (ops node:$lhs, node:$rhs);
  dag Fragment = (setcc node:$lhs, node:$rhs, SETEQ);
  string PredicateCode = "";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = ?;
}
def setge {	// SDPatternOperator PatFrag
  string PatFrag:pred = "";
  SDNodeXForm PatFrag:xform = NOOP_SDNodeXForm;
  dag Operands = (ops node:$lhs, node:$rhs);
  dag Fragment = (setcc node:$lhs, node:$rhs, SETGE);
  string PredicateCode = "";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = ?;
}
def setgt {	// SDPatternOperator PatFrag
  string PatFrag:pred = "";
  SDNodeXForm PatFrag:xform = NOOP_SDNodeXForm;
  dag Operands = (ops node:$lhs, node:$rhs);
  dag Fragment = (setcc node:$lhs, node:$rhs, SETGT);
  string PredicateCode = "";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = ?;
}
def setle {	// SDPatternOperator PatFrag
  string PatFrag:pred = "";
  SDNodeXForm PatFrag:xform = NOOP_SDNodeXForm;
  dag Operands = (ops node:$lhs, node:$rhs);
  dag Fragment = (setcc node:$lhs, node:$rhs, SETLE);
  string PredicateCode = "";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = ?;
}
def setlt {	// SDPatternOperator PatFrag
  string PatFrag:pred = "";
  SDNodeXForm PatFrag:xform = NOOP_SDNodeXForm;
  dag Operands = (ops node:$lhs, node:$rhs);
  dag Fragment = (setcc node:$lhs, node:$rhs, SETLT);
  string PredicateCode = "";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = ?;
}
def setne {	// SDPatternOperator PatFrag
  string PatFrag:pred = "";
  SDNodeXForm PatFrag:xform = NOOP_SDNodeXForm;
  dag Operands = (ops node:$lhs, node:$rhs);
  dag Fragment = (setcc node:$lhs, node:$rhs, SETNE);
  string PredicateCode = "";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = ?;
}
def seto {	// SDPatternOperator PatFrag
  string PatFrag:pred = "";
  SDNodeXForm PatFrag:xform = NOOP_SDNodeXForm;
  dag Operands = (ops node:$lhs, node:$rhs);
  dag Fragment = (setcc node:$lhs, node:$rhs, SETO);
  string PredicateCode = "";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = ?;
}
def setoeq {	// SDPatternOperator PatFrag
  string PatFrag:pred = "";
  SDNodeXForm PatFrag:xform = NOOP_SDNodeXForm;
  dag Operands = (ops node:$lhs, node:$rhs);
  dag Fragment = (setcc node:$lhs, node:$rhs, SETOEQ);
  string PredicateCode = "";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = ?;
}
def setoge {	// SDPatternOperator PatFrag
  string PatFrag:pred = "";
  SDNodeXForm PatFrag:xform = NOOP_SDNodeXForm;
  dag Operands = (ops node:$lhs, node:$rhs);
  dag Fragment = (setcc node:$lhs, node:$rhs, SETOGE);
  string PredicateCode = "";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = ?;
}
def setogt {	// SDPatternOperator PatFrag
  string PatFrag:pred = "";
  SDNodeXForm PatFrag:xform = NOOP_SDNodeXForm;
  dag Operands = (ops node:$lhs, node:$rhs);
  dag Fragment = (setcc node:$lhs, node:$rhs, SETOGT);
  string PredicateCode = "";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = ?;
}
def setole {	// SDPatternOperator PatFrag
  string PatFrag:pred = "";
  SDNodeXForm PatFrag:xform = NOOP_SDNodeXForm;
  dag Operands = (ops node:$lhs, node:$rhs);
  dag Fragment = (setcc node:$lhs, node:$rhs, SETOLE);
  string PredicateCode = "";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = ?;
}
def setolt {	// SDPatternOperator PatFrag
  string PatFrag:pred = "";
  SDNodeXForm PatFrag:xform = NOOP_SDNodeXForm;
  dag Operands = (ops node:$lhs, node:$rhs);
  dag Fragment = (setcc node:$lhs, node:$rhs, SETOLT);
  string PredicateCode = "";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = ?;
}
def setone {	// SDPatternOperator PatFrag
  string PatFrag:pred = "";
  SDNodeXForm PatFrag:xform = NOOP_SDNodeXForm;
  dag Operands = (ops node:$lhs, node:$rhs);
  dag Fragment = (setcc node:$lhs, node:$rhs, SETONE);
  string PredicateCode = "";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = ?;
}
def setueq {	// SDPatternOperator PatFrag
  string PatFrag:pred = "";
  SDNodeXForm PatFrag:xform = NOOP_SDNodeXForm;
  dag Operands = (ops node:$lhs, node:$rhs);
  dag Fragment = (setcc node:$lhs, node:$rhs, SETUEQ);
  string PredicateCode = "";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = ?;
}
def setuge {	// SDPatternOperator PatFrag
  string PatFrag:pred = "";
  SDNodeXForm PatFrag:xform = NOOP_SDNodeXForm;
  dag Operands = (ops node:$lhs, node:$rhs);
  dag Fragment = (setcc node:$lhs, node:$rhs, SETUGE);
  string PredicateCode = "";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = ?;
}
def setugt {	// SDPatternOperator PatFrag
  string PatFrag:pred = "";
  SDNodeXForm PatFrag:xform = NOOP_SDNodeXForm;
  dag Operands = (ops node:$lhs, node:$rhs);
  dag Fragment = (setcc node:$lhs, node:$rhs, SETUGT);
  string PredicateCode = "";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = ?;
}
def setule {	// SDPatternOperator PatFrag
  string PatFrag:pred = "";
  SDNodeXForm PatFrag:xform = NOOP_SDNodeXForm;
  dag Operands = (ops node:$lhs, node:$rhs);
  dag Fragment = (setcc node:$lhs, node:$rhs, SETULE);
  string PredicateCode = "";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = ?;
}
def setult {	// SDPatternOperator PatFrag
  string PatFrag:pred = "";
  SDNodeXForm PatFrag:xform = NOOP_SDNodeXForm;
  dag Operands = (ops node:$lhs, node:$rhs);
  dag Fragment = (setcc node:$lhs, node:$rhs, SETULT);
  string PredicateCode = "";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = ?;
}
def setune {	// SDPatternOperator PatFrag
  string PatFrag:pred = "";
  SDNodeXForm PatFrag:xform = NOOP_SDNodeXForm;
  dag Operands = (ops node:$lhs, node:$rhs);
  dag Fragment = (setcc node:$lhs, node:$rhs, SETUNE);
  string PredicateCode = "";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = ?;
}
def setuo {	// SDPatternOperator PatFrag
  string PatFrag:pred = "";
  SDNodeXForm PatFrag:xform = NOOP_SDNodeXForm;
  dag Operands = (ops node:$lhs, node:$rhs);
  dag Fragment = (setcc node:$lhs, node:$rhs, SETUO);
  string PredicateCode = "";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = ?;
}
def sext {	// SDPatternOperator SDNode
  list<SDNodeProperty> SDNode:props = [];
  string SDNode:sdclass = "SDNode";
  string Opcode = "ISD::SIGN_EXTEND";
  string SDClass = "SDNode";
  list<SDNodeProperty> Properties = [];
  SDTypeProfile TypeProfile = SDTIntExtendOp;
  string NAME = ?;
}
def sext_inreg {	// SDPatternOperator SDNode
  list<SDNodeProperty> SDNode:props = [];
  string SDNode:sdclass = "SDNode";
  string Opcode = "ISD::SIGN_EXTEND_INREG";
  string SDClass = "SDNode";
  list<SDNodeProperty> Properties = [];
  SDTypeProfile TypeProfile = SDTExtInreg;
  string NAME = ?;
}
def sextload {	// SDPatternOperator PatFrag
  SDNodeXForm PatFrag:xform = NOOP_SDNodeXForm;
  dag Operands = (ops node:$ptr);
  dag Fragment = (unindexedload node:$ptr);
  string PredicateCode = "
  return cast<LoadSDNode>(N)->getExtensionType() == ISD::SEXTLOAD;
";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = ?;
}
def sextloadi1 {	// SDPatternOperator PatFrag
  SDNodeXForm PatFrag:xform = NOOP_SDNodeXForm;
  dag Operands = (ops node:$ptr);
  dag Fragment = (sextload node:$ptr);
  string PredicateCode = "
  return cast<LoadSDNode>(N)->getMemoryVT() == MVT::i1;
";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = ?;
}
def sextloadi16 {	// SDPatternOperator PatFrag
  SDNodeXForm PatFrag:xform = NOOP_SDNodeXForm;
  dag Operands = (ops node:$ptr);
  dag Fragment = (sextload node:$ptr);
  string PredicateCode = "
  return cast<LoadSDNode>(N)->getMemoryVT() == MVT::i16;
";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = ?;
}
def sextloadi32 {	// SDPatternOperator PatFrag
  SDNodeXForm PatFrag:xform = NOOP_SDNodeXForm;
  dag Operands = (ops node:$ptr);
  dag Fragment = (sextload node:$ptr);
  string PredicateCode = "
  return cast<LoadSDNode>(N)->getMemoryVT() == MVT::i32;
";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = ?;
}
def sextloadi8 {	// SDPatternOperator PatFrag
  SDNodeXForm PatFrag:xform = NOOP_SDNodeXForm;
  dag Operands = (ops node:$ptr);
  dag Fragment = (sextload node:$ptr);
  string PredicateCode = "
  return cast<LoadSDNode>(N)->getMemoryVT() == MVT::i8;
";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = ?;
}
def sextloadvi1 {	// SDPatternOperator PatFrag
  SDNodeXForm PatFrag:xform = NOOP_SDNodeXForm;
  dag Operands = (ops node:$ptr);
  dag Fragment = (sextload node:$ptr);
  string PredicateCode = "
  return cast<LoadSDNode>(N)->getMemoryVT().getScalarType() == MVT::i1;
";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = ?;
}
def sextloadvi16 {	// SDPatternOperator PatFrag
  SDNodeXForm PatFrag:xform = NOOP_SDNodeXForm;
  dag Operands = (ops node:$ptr);
  dag Fragment = (sextload node:$ptr);
  string PredicateCode = "
  return cast<LoadSDNode>(N)->getMemoryVT().getScalarType() == MVT::i16;
";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = ?;
}
def sextloadvi32 {	// SDPatternOperator PatFrag
  SDNodeXForm PatFrag:xform = NOOP_SDNodeXForm;
  dag Operands = (ops node:$ptr);
  dag Fragment = (sextload node:$ptr);
  string PredicateCode = "
  return cast<LoadSDNode>(N)->getMemoryVT().getScalarType() == MVT::i32;
";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = ?;
}
def sextloadvi8 {	// SDPatternOperator PatFrag
  SDNodeXForm PatFrag:xform = NOOP_SDNodeXForm;
  dag Operands = (ops node:$ptr);
  dag Fragment = (sextload node:$ptr);
  string PredicateCode = "
  return cast<LoadSDNode>(N)->getMemoryVT().getScalarType() == MVT::i8;
";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = ?;
}
def shl {	// SDPatternOperator SDNode
  list<SDNodeProperty> SDNode:props = [];
  string SDNode:sdclass = "SDNode";
  string Opcode = "ISD::SHL";
  string SDClass = "SDNode";
  list<SDNodeProperty> Properties = [];
  SDTypeProfile TypeProfile = SDTIntShiftOp;
  string NAME = ?;
}
def sint_to_fp {	// SDPatternOperator SDNode
  list<SDNodeProperty> SDNode:props = [];
  string SDNode:sdclass = "SDNode";
  string Opcode = "ISD::SINT_TO_FP";
  string SDClass = "SDNode";
  list<SDNodeProperty> Properties = [];
  SDTypeProfile TypeProfile = SDTIntToFPOp;
  string NAME = ?;
}
def smax {	// SDPatternOperator SDNode
  list<SDNodeProperty> SDNode:props = [];
  string SDNode:sdclass = "SDNode";
  string Opcode = "ISD::SMAX";
  string SDClass = "SDNode";
  list<SDNodeProperty> Properties = [];
  SDTypeProfile TypeProfile = SDTIntBinOp;
  string NAME = ?;
}
def smin {	// SDPatternOperator SDNode
  list<SDNodeProperty> SDNode:props = [];
  string SDNode:sdclass = "SDNode";
  string Opcode = "ISD::SMIN";
  string SDClass = "SDNode";
  list<SDNodeProperty> Properties = [];
  SDTypeProfile TypeProfile = SDTIntBinOp;
  string NAME = ?;
}
def smullohi {	// SDPatternOperator SDNode
  string SDNode:sdclass = "SDNode";
  string Opcode = "ISD::SMUL_LOHI";
  string SDClass = "SDNode";
  list<SDNodeProperty> Properties = [SDNPCommutative];
  SDTypeProfile TypeProfile = SDTIntBinHiLoOp;
  string NAME = ?;
}
def sra {	// SDPatternOperator SDNode
  list<SDNodeProperty> SDNode:props = [];
  string SDNode:sdclass = "SDNode";
  string Opcode = "ISD::SRA";
  string SDClass = "SDNode";
  list<SDNodeProperty> Properties = [];
  SDTypeProfile TypeProfile = SDTIntShiftOp;
  string NAME = ?;
}
def srcvalue {
  string NAME = ?;
}
def srem {	// SDPatternOperator SDNode
  list<SDNodeProperty> SDNode:props = [];
  string SDNode:sdclass = "SDNode";
  string Opcode = "ISD::SREM";
  string SDClass = "SDNode";
  list<SDNodeProperty> Properties = [];
  SDTypeProfile TypeProfile = SDTIntBinOp;
  string NAME = ?;
}
def srl {	// SDPatternOperator SDNode
  list<SDNodeProperty> SDNode:props = [];
  string SDNode:sdclass = "SDNode";
  string Opcode = "ISD::SRL";
  string SDClass = "SDNode";
  list<SDNodeProperty> Properties = [];
  SDTypeProfile TypeProfile = SDTIntShiftOp;
  string NAME = ?;
}
def st {	// SDPatternOperator SDNode
  string SDNode:sdclass = "SDNode";
  string Opcode = "ISD::STORE";
  string SDClass = "SDNode";
  list<SDNodeProperty> Properties = [SDNPHasChain, SDNPMayStore, SDNPMemOperand];
  SDTypeProfile TypeProfile = SDTStore;
  string NAME = ?;
}
def store {	// SDPatternOperator PatFrag
  SDNodeXForm PatFrag:xform = NOOP_SDNodeXForm;
  dag Operands = (ops node:$val, node:$ptr);
  dag Fragment = (unindexedstore node:$val, node:$ptr);
  string PredicateCode = "
  return !cast<StoreSDNode>(N)->isTruncatingStore();
";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = ?;
}
def sub {	// SDPatternOperator SDNode
  list<SDNodeProperty> SDNode:props = [];
  string SDNode:sdclass = "SDNode";
  string Opcode = "ISD::SUB";
  string SDClass = "SDNode";
  list<SDNodeProperty> Properties = [];
  SDTypeProfile TypeProfile = SDTIntBinOp;
  string NAME = ?;
}
def subc {	// SDPatternOperator SDNode
  string SDNode:sdclass = "SDNode";
  string Opcode = "ISD::SUBC";
  string SDClass = "SDNode";
  list<SDNodeProperty> Properties = [SDNPOutGlue];
  SDTypeProfile TypeProfile = SDTIntBinOp;
  string NAME = ?;
}
def sube {	// SDPatternOperator SDNode
  string SDNode:sdclass = "SDNode";
  string Opcode = "ISD::SUBE";
  string SDClass = "SDNode";
  list<SDNodeProperty> Properties = [SDNPOutGlue, SDNPInGlue];
  SDTypeProfile TypeProfile = SDTIntBinOp;
  string NAME = ?;
}
def subreg_hi {	// SubRegIndex
  int SubRegIndex:offset = 0;
  string Namespace = "TriCore";
  int Size = 16;
  int Offset = 0;
  list<SubRegIndex> ComposedOf = [];
  list<SubRegIndex> CoveringSubRegIndices = [];
  string NAME = ?;
}
def subreg_lo {	// SubRegIndex
  int SubRegIndex:offset = 0;
  string Namespace = "TriCore";
  int Size = 16;
  int Offset = 0;
  list<SubRegIndex> ComposedOf = [];
  list<SubRegIndex> CoveringSubRegIndices = [];
  string NAME = ?;
}
def tblockaddress {	// SDPatternOperator SDNode
  string Opcode = "ISD::TargetBlockAddress";
  string SDClass = "BlockAddressSDNode";
  list<SDNodeProperty> Properties = [];
  SDTypeProfile TypeProfile = SDTPtrLeaf;
  string NAME = ?;
}
def tconstpool {	// SDPatternOperator SDNode
  string Opcode = "ISD::TargetConstantPool";
  string SDClass = "ConstantPoolSDNode";
  list<SDNodeProperty> Properties = [];
  SDTypeProfile TypeProfile = SDTPtrLeaf;
  string NAME = ?;
}
def texternalsym {	// SDPatternOperator SDNode
  string Opcode = "ISD::TargetExternalSymbol";
  string SDClass = "ExternalSymbolSDNode";
  list<SDNodeProperty> Properties = [];
  SDTypeProfile TypeProfile = SDTPtrLeaf;
  string NAME = ?;
}
def tframeindex {	// SDPatternOperator SDNode
  string Opcode = "ISD::TargetFrameIndex";
  string SDClass = "FrameIndexSDNode";
  list<SDNodeProperty> Properties = [];
  SDTypeProfile TypeProfile = SDTPtrLeaf;
  string NAME = ?;
}
def tglobaladdr {	// SDPatternOperator SDNode
  string Opcode = "ISD::TargetGlobalAddress";
  string SDClass = "GlobalAddressSDNode";
  list<SDNodeProperty> Properties = [];
  SDTypeProfile TypeProfile = SDTPtrLeaf;
  string NAME = ?;
}
def tglobaltlsaddr {	// SDPatternOperator SDNode
  string Opcode = "ISD::TargetGlobalTLSAddress";
  string SDClass = "GlobalAddressSDNode";
  list<SDNodeProperty> Properties = [];
  SDTypeProfile TypeProfile = SDTPtrLeaf;
  string NAME = ?;
}
def timm {	// SDPatternOperator SDNode
  string Opcode = "ISD::TargetConstant";
  string SDClass = "ConstantSDNode";
  list<SDNodeProperty> Properties = [];
  SDTypeProfile TypeProfile = SDTIntLeaf;
  string NAME = ?;
}
def tjumptable {	// SDPatternOperator SDNode
  string Opcode = "ISD::TargetJumpTable";
  string SDClass = "JumpTableSDNode";
  list<SDNodeProperty> Properties = [];
  SDTypeProfile TypeProfile = SDTPtrLeaf;
  string NAME = ?;
}
def trap {	// SDPatternOperator SDNode
  string SDNode:sdclass = "SDNode";
  string Opcode = "ISD::TRAP";
  string SDClass = "SDNode";
  list<SDNodeProperty> Properties = [SDNPHasChain, SDNPSideEffect];
  SDTypeProfile TypeProfile = SDTNone;
  string NAME = ?;
}
def tricore_call {	// SDPatternOperator SDNode
  string SDNode:sdclass = "SDNode";
  string Opcode = "TriCoreISD::CALL";
  string SDClass = "SDNode";
  list<SDNodeProperty> Properties = [SDNPHasChain, SDNPOptInGlue, SDNPOutGlue, SDNPVariadic];
  SDTypeProfile TypeProfile = SDT_TriCoreCall;
  string NAME = ?;
}
def trunc {	// SDPatternOperator SDNode
  list<SDNodeProperty> SDNode:props = [];
  string SDNode:sdclass = "SDNode";
  string Opcode = "ISD::TRUNCATE";
  string SDClass = "SDNode";
  list<SDNodeProperty> Properties = [];
  SDTypeProfile TypeProfile = SDTIntTruncOp;
  string NAME = ?;
}
def truncstore {	// SDPatternOperator PatFrag
  SDNodeXForm PatFrag:xform = NOOP_SDNodeXForm;
  dag Operands = (ops node:$val, node:$ptr);
  dag Fragment = (unindexedstore node:$val, node:$ptr);
  string PredicateCode = "
  return cast<StoreSDNode>(N)->isTruncatingStore();
";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = ?;
}
def truncstoref32 {	// SDPatternOperator PatFrag
  SDNodeXForm PatFrag:xform = NOOP_SDNodeXForm;
  dag Operands = (ops node:$val, node:$ptr);
  dag Fragment = (truncstore node:$val, node:$ptr);
  string PredicateCode = "
  return cast<StoreSDNode>(N)->getMemoryVT() == MVT::f32;
";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = ?;
}
def truncstoref64 {	// SDPatternOperator PatFrag
  SDNodeXForm PatFrag:xform = NOOP_SDNodeXForm;
  dag Operands = (ops node:$val, node:$ptr);
  dag Fragment = (truncstore node:$val, node:$ptr);
  string PredicateCode = "
  return cast<StoreSDNode>(N)->getMemoryVT() == MVT::f64;
";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = ?;
}
def truncstorei16 {	// SDPatternOperator PatFrag
  SDNodeXForm PatFrag:xform = NOOP_SDNodeXForm;
  dag Operands = (ops node:$val, node:$ptr);
  dag Fragment = (truncstore node:$val, node:$ptr);
  string PredicateCode = "
  return cast<StoreSDNode>(N)->getMemoryVT() == MVT::i16;
";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = ?;
}
def truncstorei32 {	// SDPatternOperator PatFrag
  SDNodeXForm PatFrag:xform = NOOP_SDNodeXForm;
  dag Operands = (ops node:$val, node:$ptr);
  dag Fragment = (truncstore node:$val, node:$ptr);
  string PredicateCode = "
  return cast<StoreSDNode>(N)->getMemoryVT() == MVT::i32;
";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = ?;
}
def truncstorei8 {	// SDPatternOperator PatFrag
  SDNodeXForm PatFrag:xform = NOOP_SDNodeXForm;
  dag Operands = (ops node:$val, node:$ptr);
  dag Fragment = (truncstore node:$val, node:$ptr);
  string PredicateCode = "
  return cast<StoreSDNode>(N)->getMemoryVT() == MVT::i8;
";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = ?;
}
def u4imm {	// DAGOperand Operand
  ValueType Type = i32;
  string PrintMethod = "printZExtImm<4>";
  string EncoderMethod = "";
  string DecoderMethod = "";
  string OperandType = "OPERAND_UNKNOWN";
  dag MIOperandInfo = (ops);
  string MCOperandPredicate = ?;
  AsmOperandClass ParserMatchClass = ImmAsmOperand;
  string NAME = ?;
}
def u8imm {	// DAGOperand Operand
  ValueType Type = i32;
  string PrintMethod = "printZExtImm<8>";
  string EncoderMethod = "";
  string DecoderMethod = "";
  string OperandType = "OPERAND_UNKNOWN";
  dag MIOperandInfo = (ops);
  string MCOperandPredicate = ?;
  AsmOperandClass ParserMatchClass = ImmAsmOperand;
  string NAME = ?;
}
def u9imm {	// DAGOperand Operand
  ValueType Type = i32;
  string PrintMethod = "printZExtImm<9>";
  string EncoderMethod = "";
  string DecoderMethod = "";
  string OperandType = "OPERAND_UNKNOWN";
  dag MIOperandInfo = (ops);
  string MCOperandPredicate = ?;
  AsmOperandClass ParserMatchClass = ImmAsmOperand;
  string NAME = ?;
}
def udiv {	// SDPatternOperator SDNode
  list<SDNodeProperty> SDNode:props = [];
  string SDNode:sdclass = "SDNode";
  string Opcode = "ISD::UDIV";
  string SDClass = "SDNode";
  list<SDNodeProperty> Properties = [];
  SDTypeProfile TypeProfile = SDTIntBinOp;
  string NAME = ?;
}
def udivrem {	// SDPatternOperator SDNode
  list<SDNodeProperty> SDNode:props = [];
  string SDNode:sdclass = "SDNode";
  string Opcode = "ISD::UDIVREM";
  string SDClass = "SDNode";
  list<SDNodeProperty> Properties = [];
  SDTypeProfile TypeProfile = SDTIntBinHiLoOp;
  string NAME = ?;
}
def uint_to_fp {	// SDPatternOperator SDNode
  list<SDNodeProperty> SDNode:props = [];
  string SDNode:sdclass = "SDNode";
  string Opcode = "ISD::UINT_TO_FP";
  string SDClass = "SDNode";
  list<SDNodeProperty> Properties = [];
  SDTypeProfile TypeProfile = SDTIntToFPOp;
  string NAME = ?;
}
def umax {	// SDPatternOperator SDNode
  list<SDNodeProperty> SDNode:props = [];
  string SDNode:sdclass = "SDNode";
  string Opcode = "ISD::UMAX";
  string SDClass = "SDNode";
  list<SDNodeProperty> Properties = [];
  SDTypeProfile TypeProfile = SDTIntBinOp;
  string NAME = ?;
}
def umin {	// SDPatternOperator SDNode
  list<SDNodeProperty> SDNode:props = [];
  string SDNode:sdclass = "SDNode";
  string Opcode = "ISD::UMIN";
  string SDClass = "SDNode";
  list<SDNodeProperty> Properties = [];
  SDTypeProfile TypeProfile = SDTIntBinOp;
  string NAME = ?;
}
def umullohi {	// SDPatternOperator SDNode
  string SDNode:sdclass = "SDNode";
  string Opcode = "ISD::UMUL_LOHI";
  string SDClass = "SDNode";
  list<SDNodeProperty> Properties = [SDNPCommutative];
  SDTypeProfile TypeProfile = SDTIntBinHiLoOp;
  string NAME = ?;
}
def undef {	// SDPatternOperator SDNode
  string SDNode:sdclass = "SDNode";
  string Opcode = "ISD::UNDEF";
  string SDClass = "SDNode";
  list<SDNodeProperty> Properties = [];
  SDTypeProfile TypeProfile = SDTUNDEF;
  string NAME = ?;
}
def unindexedload {	// SDPatternOperator PatFrag
  SDNodeXForm PatFrag:xform = NOOP_SDNodeXForm;
  dag Operands = (ops node:$ptr);
  dag Fragment = (ld node:$ptr);
  string PredicateCode = "
  return cast<LoadSDNode>(N)->getAddressingMode() == ISD::UNINDEXED;
";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = ?;
}
def unindexedstore {	// SDPatternOperator PatFrag
  SDNodeXForm PatFrag:xform = NOOP_SDNodeXForm;
  dag Operands = (ops node:$val, node:$ptr);
  dag Fragment = (st node:$val, node:$ptr);
  string PredicateCode = "
  return cast<StoreSDNode>(N)->getAddressingMode() == ISD::UNINDEXED;
";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = ?;
}
def unknown {	// unknown_class
  string NAME = ?;
}
def untyped {	// ValueType
  string Namespace = "MVT";
  int Size = 8;
  int Value = 58;
  string NAME = ?;
}
def urem {	// SDPatternOperator SDNode
  list<SDNodeProperty> SDNode:props = [];
  string SDNode:sdclass = "SDNode";
  string Opcode = "ISD::UREM";
  string SDClass = "SDNode";
  list<SDNodeProperty> Properties = [];
  SDTypeProfile TypeProfile = SDTIntBinOp;
  string NAME = ?;
}
def v16f32 {	// ValueType
  string Namespace = "MVT";
  int Size = 512;
  int Value = 50;
  string NAME = ?;
}
def v16i1 {	// ValueType
  string Namespace = "MVT";
  int Size = 16;
  int Value = 16;
  string NAME = ?;
}
def v16i16 {	// ValueType
  string Namespace = "MVT";
  int Size = 256;
  int Value = 30;
  string NAME = ?;
}
def v16i32 {	// ValueType
  string Namespace = "MVT";
  int Size = 512;
  int Value = 36;
  string NAME = ?;
}
def v16i64 {	// ValueType
  string Namespace = "MVT";
  int Size = 1024;
  int Value = 41;
  string NAME = ?;
}
def v16i8 {	// ValueType
  string Namespace = "MVT";
  int Size = 128;
  int Value = 23;
  string NAME = ?;
}
def v1f32 {	// ValueType
  string Namespace = "MVT";
  int Size = 32;
  int Value = 46;
  string NAME = ?;
}
def v1f64 {	// ValueType
  string Namespace = "MVT";
  int Size = 64;
  int Value = 51;
  string NAME = ?;
}
def v1i128 {	// ValueType
  string Namespace = "MVT";
  int Size = 128;
  int Value = 42;
  string NAME = ?;
}
def v1i16 {	// ValueType
  string Namespace = "MVT";
  int Size = 16;
  int Value = 26;
  string NAME = ?;
}
def v1i32 {	// ValueType
  string Namespace = "MVT";
  int Size = 32;
  int Value = 32;
  string NAME = ?;
}
def v1i64 {	// ValueType
  string Namespace = "MVT";
  int Size = 64;
  int Value = 37;
  string NAME = ?;
}
def v1i8 {	// ValueType
  string Namespace = "MVT";
  int Size = 16;
  int Value = 19;
  string NAME = ?;
}
def v2f16 {	// ValueType
  string Namespace = "MVT";
  int Size = 32;
  int Value = 43;
  string NAME = ?;
}
def v2f32 {	// ValueType
  string Namespace = "MVT";
  int Size = 64;
  int Value = 47;
  string NAME = ?;
}
def v2f64 {	// ValueType
  string Namespace = "MVT";
  int Size = 128;
  int Value = 52;
  string NAME = ?;
}
def v2i1 {	// ValueType
  string Namespace = "MVT";
  int Size = 2;
  int Value = 13;
  string NAME = ?;
}
def v2i16 {	// ValueType
  string Namespace = "MVT";
  int Size = 32;
  int Value = 27;
  string NAME = ?;
}
def v2i32 {	// ValueType
  string Namespace = "MVT";
  int Size = 64;
  int Value = 33;
  string NAME = ?;
}
def v2i64 {	// ValueType
  string Namespace = "MVT";
  int Size = 128;
  int Value = 38;
  string NAME = ?;
}
def v2i8 {	// ValueType
  string Namespace = "MVT";
  int Size = 16;
  int Value = 20;
  string NAME = ?;
}
def v32i1 {	// ValueType
  string Namespace = "MVT";
  int Size = 32;
  int Value = 17;
  string NAME = ?;
}
def v32i16 {	// ValueType
  string Namespace = "MVT";
  int Size = 512;
  int Value = 31;
  string NAME = ?;
}
def v32i8 {	// ValueType
  string Namespace = "MVT";
  int Size = 256;
  int Value = 24;
  string NAME = ?;
}
def v4f16 {	// ValueType
  string Namespace = "MVT";
  int Size = 64;
  int Value = 44;
  string NAME = ?;
}
def v4f32 {	// ValueType
  string Namespace = "MVT";
  int Size = 128;
  int Value = 48;
  string NAME = ?;
}
def v4f64 {	// ValueType
  string Namespace = "MVT";
  int Size = 256;
  int Value = 53;
  string NAME = ?;
}
def v4i1 {	// ValueType
  string Namespace = "MVT";
  int Size = 4;
  int Value = 14;
  string NAME = ?;
}
def v4i16 {	// ValueType
  string Namespace = "MVT";
  int Size = 64;
  int Value = 28;
  string NAME = ?;
}
def v4i32 {	// ValueType
  string Namespace = "MVT";
  int Size = 128;
  int Value = 34;
  string NAME = ?;
}
def v4i64 {	// ValueType
  string Namespace = "MVT";
  int Size = 256;
  int Value = 39;
  string NAME = ?;
}
def v4i8 {	// ValueType
  string Namespace = "MVT";
  int Size = 32;
  int Value = 21;
  string NAME = ?;
}
def v64i1 {	// ValueType
  string Namespace = "MVT";
  int Size = 64;
  int Value = 18;
  string NAME = ?;
}
def v64i8 {	// ValueType
  string Namespace = "MVT";
  int Size = 512;
  int Value = 25;
  string NAME = ?;
}
def v8f16 {	// ValueType
  string Namespace = "MVT";
  int Size = 128;
  int Value = 45;
  string NAME = ?;
}
def v8f32 {	// ValueType
  string Namespace = "MVT";
  int Size = 256;
  int Value = 49;
  string NAME = ?;
}
def v8f64 {	// ValueType
  string Namespace = "MVT";
  int Size = 512;
  int Value = 54;
  string NAME = ?;
}
def v8i1 {	// ValueType
  string Namespace = "MVT";
  int Size = 8;
  int Value = 15;
  string NAME = ?;
}
def v8i16 {	// ValueType
  string Namespace = "MVT";
  int Size = 128;
  int Value = 29;
  string NAME = ?;
}
def v8i32 {	// ValueType
  string Namespace = "MVT";
  int Size = 256;
  int Value = 35;
  string NAME = ?;
}
def v8i64 {	// ValueType
  string Namespace = "MVT";
  int Size = 512;
  int Value = 40;
  string NAME = ?;
}
def v8i8 {	// ValueType
  string Namespace = "MVT";
  int Size = 64;
  int Value = 22;
  string NAME = ?;
}
def vAny {	// ValueType
  string Namespace = "MVT";
  int Size = 0;
  int Value = 252;
  string NAME = ?;
}
def variable_ops {
  string NAME = ?;
}
def vector_extract {	// SDPatternOperator SDNode
  string SDNode:sdclass = "SDNode";
  string Opcode = "ISD::EXTRACT_VECTOR_ELT";
  string SDClass = "SDNode";
  list<SDNodeProperty> Properties = [];
  SDTypeProfile TypeProfile = anonymous_453;
  string NAME = ?;
}
def vector_extract_subvec {	// SDPatternOperator SDNode
  string SDNode:sdclass = "SDNode";
  string Opcode = "ISD::EXTRACT_SUBVECTOR";
  string SDClass = "SDNode";
  list<SDNodeProperty> Properties = [];
  SDTypeProfile TypeProfile = anonymous_463;
  string NAME = ?;
}
def vector_insert {	// SDPatternOperator SDNode
  string SDNode:sdclass = "SDNode";
  string Opcode = "ISD::INSERT_VECTOR_ELT";
  string SDClass = "SDNode";
  list<SDNodeProperty> Properties = [];
  SDTypeProfile TypeProfile = anonymous_456;
  string NAME = ?;
}
def vector_shuffle {	// SDPatternOperator SDNode
  string SDNode:sdclass = "SDNode";
  string Opcode = "ISD::VECTOR_SHUFFLE";
  string SDClass = "SDNode";
  list<SDNodeProperty> Properties = [];
  SDTypeProfile TypeProfile = SDTVecShuffle;
  string NAME = ?;
}
def vnot {	// SDPatternOperator PatFrag
  string PatFrag:pred = "";
  SDNodeXForm PatFrag:xform = NOOP_SDNodeXForm;
  dag Operands = (ops node:$in);
  dag Fragment = (xor node:$in, immAllOnesV);
  string PredicateCode = "";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = ?;
}
def vselect {	// SDPatternOperator SDNode
  list<SDNodeProperty> SDNode:props = [];
  string SDNode:sdclass = "SDNode";
  string Opcode = "ISD::VSELECT";
  string SDClass = "SDNode";
  list<SDNodeProperty> Properties = [];
  SDTypeProfile TypeProfile = SDTVSelect;
  string NAME = ?;
}
def vt {	// SDPatternOperator SDNode
  string Opcode = "ISD::VALUETYPE";
  string SDClass = "VTSDNode";
  list<SDNodeProperty> Properties = [];
  SDTypeProfile TypeProfile = SDTOther;
  string NAME = ?;
}
def vtFP {	// SDPatternOperator PatFrag PatLeaf
  SDNodeXForm PatLeaf:xform = NOOP_SDNodeXForm;
  dag Operands = (ops);
  dag Fragment = (vt);
  string PredicateCode = " return N->getVT().isFloatingPoint(); ";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = ?;
}
def vtInt {	// SDPatternOperator PatFrag PatLeaf
  SDNodeXForm PatLeaf:xform = NOOP_SDNodeXForm;
  dag Operands = (ops);
  dag Fragment = (vt);
  string PredicateCode = " return N->getVT().isInteger(); ";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = ?;
}
def x86mmx {	// ValueType
  string Namespace = "MVT";
  int Size = 64;
  int Value = 55;
  string NAME = ?;
}
def xor {	// SDPatternOperator SDNode
  string SDNode:sdclass = "SDNode";
  string Opcode = "ISD::XOR";
  string SDClass = "SDNode";
  list<SDNodeProperty> Properties = [SDNPCommutative, SDNPAssociative];
  SDTypeProfile TypeProfile = SDTIntBinOp;
  string NAME = ?;
}
def zero_reg {
  string NAME = ?;
}
def zext {	// SDPatternOperator SDNode
  list<SDNodeProperty> SDNode:props = [];
  string SDNode:sdclass = "SDNode";
  string Opcode = "ISD::ZERO_EXTEND";
  string SDClass = "SDNode";
  list<SDNodeProperty> Properties = [];
  SDTypeProfile TypeProfile = SDTIntExtendOp;
  string NAME = ?;
}
def zextload {	// SDPatternOperator PatFrag
  SDNodeXForm PatFrag:xform = NOOP_SDNodeXForm;
  dag Operands = (ops node:$ptr);
  dag Fragment = (unindexedload node:$ptr);
  string PredicateCode = "
  return cast<LoadSDNode>(N)->getExtensionType() == ISD::ZEXTLOAD;
";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = ?;
}
def zextloadi1 {	// SDPatternOperator PatFrag
  SDNodeXForm PatFrag:xform = NOOP_SDNodeXForm;
  dag Operands = (ops node:$ptr);
  dag Fragment = (zextload node:$ptr);
  string PredicateCode = "
  return cast<LoadSDNode>(N)->getMemoryVT() == MVT::i1;
";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = ?;
}
def zextloadi16 {	// SDPatternOperator PatFrag
  SDNodeXForm PatFrag:xform = NOOP_SDNodeXForm;
  dag Operands = (ops node:$ptr);
  dag Fragment = (zextload node:$ptr);
  string PredicateCode = "
  return cast<LoadSDNode>(N)->getMemoryVT() == MVT::i16;
";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = ?;
}
def zextloadi32 {	// SDPatternOperator PatFrag
  SDNodeXForm PatFrag:xform = NOOP_SDNodeXForm;
  dag Operands = (ops node:$ptr);
  dag Fragment = (zextload node:$ptr);
  string PredicateCode = "
  return cast<LoadSDNode>(N)->getMemoryVT() == MVT::i32;
";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = ?;
}
def zextloadi8 {	// SDPatternOperator PatFrag
  SDNodeXForm PatFrag:xform = NOOP_SDNodeXForm;
  dag Operands = (ops node:$ptr);
  dag Fragment = (zextload node:$ptr);
  string PredicateCode = "
  return cast<LoadSDNode>(N)->getMemoryVT() == MVT::i8;
";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = ?;
}
def zextloadvi1 {	// SDPatternOperator PatFrag
  SDNodeXForm PatFrag:xform = NOOP_SDNodeXForm;
  dag Operands = (ops node:$ptr);
  dag Fragment = (zextload node:$ptr);
  string PredicateCode = "
  return cast<LoadSDNode>(N)->getMemoryVT().getScalarType() == MVT::i1;
";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = ?;
}
def zextloadvi16 {	// SDPatternOperator PatFrag
  SDNodeXForm PatFrag:xform = NOOP_SDNodeXForm;
  dag Operands = (ops node:$ptr);
  dag Fragment = (zextload node:$ptr);
  string PredicateCode = "
  return cast<LoadSDNode>(N)->getMemoryVT().getScalarType() == MVT::i16;
";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = ?;
}
def zextloadvi32 {	// SDPatternOperator PatFrag
  SDNodeXForm PatFrag:xform = NOOP_SDNodeXForm;
  dag Operands = (ops node:$ptr);
  dag Fragment = (zextload node:$ptr);
  string PredicateCode = "
  return cast<LoadSDNode>(N)->getMemoryVT().getScalarType() == MVT::i32;
";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = ?;
}
def zextloadvi8 {	// SDPatternOperator PatFrag
  SDNodeXForm PatFrag:xform = NOOP_SDNodeXForm;
  dag Operands = (ops node:$ptr);
  dag Fragment = (zextload node:$ptr);
  string PredicateCode = "
  return cast<LoadSDNode>(N)->getMemoryVT().getScalarType() == MVT::i8;
";
  string ImmediateCode = "";
  SDNodeXForm OperandTransform = NOOP_SDNodeXForm;
  string NAME = ?;
}
